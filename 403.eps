%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1501.i034.010.S.m004.c11.physical activity 2x2 set.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: IvAN
%%CreationDate: 1/31/2015
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">blank template 450x450 RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-01-31T00:13:30+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-01-31T00:13:30+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-01-31T00:13:30+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8APs8eV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2Kqee+PnrsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVVM8DfQnYqh&#xA;bryrr3mDUtNs7Gd7SyLs99cIxUhF4nqoJrx5ca7cqVzoOwI4ZGYkBKW3MORghadTaHDYytZpcSXA&#xA;tz6YnkILtx2qxAG+aXtCcY55iIHCCwnACRpptE1L6q95HBJJaJ9uYI3EfT0yEMOSUDPhlwDrW3za&#xA;yEBkEOxV2KuxV2KuxVfIkcNtJdXMggtolMkkjdFRRUsfAAYIkykIxFyKRFA2uu6DqV7badoup2d1&#xA;eyTBLnkZJAiMUWMp6ZjRuTSU/vOvbOs7I7DhkxGWoEoyvYctu9PAeieazpK2N9NBbzC5hjI4yLsa&#xA;EA0I8VrQ++c3rccMWaWOMuIRPP8AHdyKDEpdlCHYqp574+euxVEQWcso5fZTxP8ADASyESUh/Mfy&#xA;xrTeULvXNH1Wa2l0crLc2kXwerCxAZuS/FVOtK0pXNbrc0oyiBsC9J2JpMc4TMgJSFc+5b5FvdR1&#xA;fyjY6ndfHPIHWRwKFvTkaPlQePHfMzT5DKAJdR2jpxjzSEeScZe4DsVdirsVdirsVREFlLKOX2VP&#xA;c/0wEshAlEfoxKf3hr8sHEz8NI9W8ieaYNRsvMunas91pbSGLUdLaqrClAoKqKqw25FjQgkdiaaw&#xA;55jUcP4p6OGkwnQGdDiAO/W72/QjM2ry7sVVM8DfQla1iEklT9ldzkJyoJiHo3kWW1t4WkZfifmr&#xA;7VqR0HypnYezRhDHxVubtzo4uLFtztjV9qNbucxwQoDI1CqCv2j9Gc7qe0PXLhhAbnfh3YnPWwEf&#xA;kvbzLrTWDWDXFbRl4GLgn2euxC1yEu2NTLGcRl6CKqh+pxybNljt5EEcOvRuvzzDxytrkEOSB1yx&#xA;CwzRDq4+/DwlDhNEejj78eEqvBB6YEoiziDuWbdV7e+V5JUExDIvL/lw69eNaSAfVApN2SAw9M7F&#xA;aHY8um+Z/Y/Zk9VloHhjHcy7vd593zZkq9x+XvlTyeZbjQNHjsLr10ndg8sodFWRVJEjuAFL8qLQ&#xA;V7bZ2Xa+pzYMR4BvHv39Pf7/ANrlxh6OKO/ekzMzMWY1ZjUnxJzziUiTZcVLruIJJUfZb9eXY5WG&#xA;uQUMsQp574+eoizgEsvxfZXc/wBMBLKIsplNcW1tC9xcsUtoVLzMKVCKKtSvtlUyREkc3LwwEpgG&#xA;6J6c1bT7O9kgghtreSbTNbLpq11dSIJ7O2k+OWNIqFD6kdYgwPwVrv1zS59YR6Mn1Dfbzev0HZ0D&#xA;+9xXw8t9uXM+d96pfeVdC8rXs2kaHC1tp8bCRLZneQRtKodlUuWam9aVzaaUeh53tYg5z8Emv4Aj&#xA;h12V+o98ygXUTCEyTBoso6kD54FcGU9CD8sVbwqibKASy1bdU3I/VgJZwFlNMg3Jfq+tW+l2/wBY&#xA;mimlh5FGaBPUo4UNxbfY8TXMWerhGXD1DssPZWbJATFCJ7ywDVPM/mTWpbi+0u4l07TdO9BvqzsQ&#xA;0ryziGNvS6OavvXagIB61xMmTjlxd3J3ml0gxYjA78X1M8voBHIGXZX7eBzbgvFzFIXJMFTPA30J&#xA;GWH2X+YynKyi9A0/yLpGq+VYWv7i8h9RmnLWlzLbMDuq7xFSdh0Pf6M9F9nNHHHpRLnKdn9H6GXi&#xA;SrhvZiurWJsb6S35cwN1bvQ7ivvnC9q6M6fUSgTfX59/moKDJAFTsB3zXqlup3f7kCP+b7R+RzJw&#xA;4992EixbW9G/MjV46eU7dZIokd7q5ZouQZRVY0WQ7lvZfuzqOxtDhyAyyb10Z48Rkwz8vPOer6lq&#xA;UmnalKJw0ZkhlIVXBUiq/CBWoNcy+2Oy8WPH4mMVR3Yyi9DzmGttXdTVSR8sBFqm+l3n7oiTry+0&#xA;PkMxM2PfZnEsK8x695o8q+eIvMli7W8bqIracuXiZVUBopUBI9NiORWle4+IVzv/AGaz4zphjifX&#xA;H6h7z9vcyL0jynqvnW90mTVtdiT63M/FwD6iyx0HGSillANduLUpmm7QEsU5ZsMjOMvqEgefd05d&#xA;21OXi4oQ4hXuZBaWWmXcUT3cD2slzOLaJomCqHIB5lXG6jkK75g48OnzRByROOU58A4eV99HoL3a&#xA;8k4yFgUWL6iAqgVBoxFR0OaOAolx5IHLmKnnvj56mGmU4yeNRkZNuNR1V0ubm00sLyMri5ua9BBA&#xA;Q3Ej/Lk4L8q5i5oSkRG6j173aaTJHHCWQi5iuG+XySb819T1SLy5HLbXslo/1hUcxOYuUbI4aM8S&#xA;vJTsSN60zGy6XHjj6R197suz9fmzZTxy24fcOY7k28q63qmt+XrPU9VnNzfTIRNcNSr+mxjVjQL+&#xA;yg7Zl6f6A6ztMfv5fD7g7WdRjS3pGObBhQ9q5eHXmNsee6uZTQuTXYKu34DCoiHoH5e/lva6olzd&#xA;+YI54EhYJFasGhLbVZ2LANx3ptmJn1HDsHc6Ds4ZATMH3clbz/5B8sado0mqaJchXtmT1rb1RKGR&#xA;2CVWpLAhmHfBgzmRos9f2fDHDjjtTziO7uI/suaeB3H45mOjMQWQaJqMbxsJBwevXt0wFEY0r67q&#xA;yaZYNOBznciO2j3JaRumw3Pjtlc5cIcnT4fElXTq15f06ex08LcyNJdTMZrgsagSPuQO3zp1O+DH&#xA;Ct+pZanPxmh9MeT0Lyx5N0LUdMuW1ezSeW59N1D1r6cBLRNQEfZd2YfPMLUyBk77svEY4d/4jf3M&#xA;E1L+5X/W/gc2QeUycktybUqZ4G+hK9pKEkofstt9OQyRsJiXoR82y2nly3svq3CdVREbltSNgTyW&#xA;n7Sjx752B7ZnpdHjjw1k2HyPX3j72+eDhiCerHdTk+s28d820jErJ899/wAM0XaUvHxxzn6jsXIz&#xA;AHHGQ26JDPOZDQbIOgzVxjTgEpVfTBnCL0Xr88ysca3Yll35c6zZWsd5a3UyQAlZo2kYKpoOLbn6&#xA;M6DsfURgJRka6uXpcgFgsZ84flfb6d5lh8z6VBb22hwWUdpDbWkYTjIzOTJJxFCCpADEkmvsK7Lt&#xA;fPI6egLBO5+5dTGtxyS7ORcN2Kqb6pLayx2tvEJ7u5r6UbNwRQtOTu1DRRXwqTl2PTCYM5HhhHn1&#xA;PuA70hN7qOa28n3k+v2cGo2t9MkHoQq4aOCL97cTLyJZiremBxoacs2OiGPHHjwkwyzPDHireqJ9&#xA;17C92QLL49Vtbax07TrO8FlFdRBrGNJGWNYIkDyOvHZY44/iY9AM2ObHqc+OsfEJy4Sd+V83ZZuA&#xA;Y+Qs0g7/AFvVtf0CWfTliS2sJov0dNeGSSW4tpVYPNIAVMZkkVWUGtFO9DtmB2jLBLGYSlOfgSAv&#xA;rvYO5u/UN+Q5AcnXhi9vq8t5JLbXMP1a9tKCeENzUhq8ZI3ovJG47bV6jNHm0oxgSieKEuR5e8Ed&#xA;CGJKvlCFPPfHz1E2Mwjlo2yvsT79sBDOBordE/0qW71Y7i6f07U/8u8JKpT/AF2LP9IymG9lz8/p&#xA;Ah3c/efwAwr8zZJtR1mHSUYJHZ2NxfOCftsI3oAO5Aj/ABOYmp3lXc7fsoCGMz/nSA/R+lNPIt60&#xA;nk7T4lNFQSK4B3qJW65kaf6A67tIfv5fD7giNTnDMIlNQu7fPMhwUDir0P8AKi/gRb+zd1WQlJUB&#xA;NKjdW+40+/NN2tjJ4ZPT+zuaI44nnsXnnmb8trLyr54+saXbpaaM9ikdrGHZ3eTl+9Zy5Y1FB94x&#xA;7NuR4j0bO3sghAQA+r9Ds3LyiL06cRylG+zJt9PbEqBaRv5005Naa7vEkuI7LklhbKKUfu7FqUrT&#xA;9W22YhyAys/B3cdDMY+EbGX1H9H4/S9M8m3kGvLp90I6RXPxNETWnAnkpIp3U5ZOfosODi01agYz&#xA;vv8AtZp5f1pv8Xuk8gWBhJbRAmiCjAr17sUyieP93t73PwasnVEE7bxH4+DCPNllJpesHSpnUzJG&#xA;J0CsCWidmVXp16oR0zJw5BIebp9dpJ4ZUfp6FJ8vcFUzwN9CZL5FsLeTUJ9UuqPb6RE108A3dyoJ&#xA;Xip/lIr86Zu+xMETklllvHEOKup/s/UkJbqGuS3t9LcvEsaSMSkKdEXwGavX6g6jIZnbuHczllJ5&#xA;ph69tdeU7tokZrmykRpFWpPB22ag+n7s22mwxydnyAHrxy+w9fvZHMTDh6JHd+ZrEeW7m3Ng73sM&#xA;bPbNDxDSONwCSNq9D1+/I6U4ckBiyVE/zv1sxlgcfCRv3sY0vUrfU7M3VsH9NX9OQOpUpIBUo3vl&#xA;et0GTTyqXLoehcUxLIvLXl661jUreIRsLMyotzP9kKhYcqE/tUwaLSSzZAP4bFlnjxSluBsHvr6b&#xA;ElhLaWyrGrrxUEVAFKBflTbPQzgAgYx2tnHJ6gZbgPMvMsflbRb8WOoaenrGNZAYYlClWJA3BTwO&#xA;cprY4ME+Ccd6vYOYc2D+b9iUz6b5X1PS72fSYmjubVPUO7joCacWJG4U9Mw5YcGWEjjFSixljxTi&#xA;TAbh51dypZ6vFdTnjbTQ+gZj9lHDcl5HsHr18RmNhgcmEwj9UZcVd4qtvc65NLLzHHoVtOLpU1gX&#xA;Mhe0tbppHILCnpwqjp8LHMmGU5uCPhw4cYokiW3eTRH9qhfqnmrVptHj8u2WlLbx3entZym2I9BC&#xA;yr8CmZ3lCKIzUc9wc2UdbjnE5TOMOGd1vZjd/bt5bdA5EsvFEA9FT9LJq8FvLbXktiLZw93ao/A1&#xA;UUMU6nsp8f6HOchCel44GImMgoHod7Bj3/raibQ+nzx32sXF7b0a0ihW2ScdJHDsz8T3VNhXxrg1&#xA;EDiwxxy+sy4q7hQAvzP3UhNs16qee+PnrDvMnmbzBp89zby6cfqMqlYLuEszKtDViaceVKmm1MxM&#xA;uWQsVs7rRaPDkAkJeocwWUeV/M2nX+nr9RDG3twsPpspVk4qKL4Gg8DluOUZDZwtViyYp/vOZ3Yx&#xA;5wuIm8/6TcBS0bW5gmSlfhYyqw28VkzHyi8gDttFIjSyPLex9iUeW9Qn0TWLvQmci2mcvau3WtNv&#xA;+CXr7jBh9EzEstaBnwjKOY5/jyLKYz+9U9fiHXfv75lZTUT7nU4ADkiD3h6noi+U762gE2mWsd5I&#xA;eHp+nsxBpUEKQAfc5ysddkI+ovoEuzMAO0I/JE+YvJemXGj3K2FvDp98iNJa3kSjlHIoJVqUHIex&#xA;y6GsyA7kkNOTszARtEAjfZ5V5i/LbVPLnkGDz9rus3E3mSdoC9hctUGO4b+4LSVkaRY/iI/ZofCu&#xA;Z+KXAQQ4mpwjLExkqaBcaPHqNvcavBJcaevxS28RAZ9vhWtVoK9d820rI25vIYjCM/WLizWx/NzS&#xA;tP8AL11JpflhNP1pVlFrGvpvGSCRG0jrxdtqVH45hHDkIsl3kNdp4SEYivP8bvDv8N6pfM95MyQy&#xA;3DtI8bAggsxPTfJwwyI3Tk7TxxlQsshtLbzBBo1ro2nylHS4WdtRhmMMsA5/F6agAnbevLv0wyxS&#xA;I4XFjrcQyHKTRqgK5/FnU2oOy8UqPF2NWP05liLoZZCWM6lp2oS+abbV4riaWeYcL2SZuaCGNVUI&#xA;K/FUigUe1e2Y8sREwY/F2kNaJ6eUMu9Vw997/cnWZTp1TPA30JEWV/d2M/r2spilKshIoaq4owIN&#xA;QQRluHPPFLigaP61BQ+VKo2Wt6np88stjcNCZKBwKEMF6VDAg0zZaXVZcH93LhtFoOaWSaZ5pCDJ&#xA;IxdyAFFWNTsKAfRlM5GRJPMoTjy5rlnp8M1jeWqS6fcuZJQqLy9QgDkenKvEdd8z9PrqHBk9UPuc&#xA;rBqBEcMhcUdqPneURi20eIWdumyyUAen+SB8K5Zm7SNcOMcIbMms2qAoPZfLerLq+hWWoinKeMGU&#xA;DoJF+GQfQwOdxotR42GM+8fb1+1w3mf5z2/HW7C4p/eWxSv+pIx/43zmPabHWSEu8EfL+1BeZ6rc&#xA;a7FpV2uiTyw3sqBVEH23AYEotATVqbU37Zrex8sYZwJ/TLZnjmQduqKlglAMN1CY5CAJYJBuCRur&#xA;A5g5YHHkIB+ksZRINFDW+m6dbOXtrWGFzsWjjVCR8wBhyanLMVKUpDzJLFFxPwkVvA75jyFhUTc6&#xA;TpV1IJbqzgnlGweWJHag92BODHq8uMVCcojyJDJEqqooVAFVRRVAoAB4ZQSSbKt4FU898fPXYqsi&#xA;t4IefpRrH6jF5OIA5MQAWNO+2AABlKZPM8mPy2dgt280VtFG/I0dUUNvsTUCu+VjHEHYOcdVllGj&#xA;IkIX9EWf14XzBmuAaqzMSB7AeG/TI+COK2787Pw/DAFJ3pOlz6hLIkLorwoZeLmhYKdwvXfKNbqB&#xA;ihZB32bezNHLPlqJFx3360ej1DydosH1CK5uoGW7hlb0yxdaDYj4agHr3GcpjiKD6HMmyzSysWnk&#xA;HqJWD9qo2YeGZmDEZGzycTNlERtzfNH/ADkR+YB8yebRoVjLXStEZoag/DJdk8ZX26hKcF/2Xjmy&#xA;dcTQVAABQdM3Lw7eKuxVVtZPTuEbtWh+R2xYyFhO8k47sVdiqpngb6E7FWmNFJ9sQqV5lMXYq7FX&#xA;YqnWg/nho3knSruwuIn1K5aQSWttA6gKxWjiVzy4DZaUU/LO39nhkjiMZxIjdi/P8fayDF7r85Nb&#xA;8869FbX9pb2tnCshs4oAxdS3EtzdmPKoXsBk/aDTceDj6w+48/x5LSY28xhnjmXcxsrge6mucPCV&#xA;EHuRE0bTDzDq8Wq3y3UcHoH01RxWpLAneu1dtsyNXqBllxAVs3ajKMkrqkszFaHYqmimqg+2YpZN&#xA;4q7FVPPfHz12KtOaIx8ATgUJBgcp2Kr4ZpYJVlhcxyoaq6mhByM4CQoiwyx5JQkJRNEM28ufmle6&#xA;e6DUbZb1F5cnBCORQ8dqcag03p0zW/yXAS4o7Du5u+h7Q5TDhyDiPfyP6kRf/mh598wznTPLUcFh&#xA;eXNVtBs7cgCaNJKOHQfyjLsunEYE9WOm7SnkzCNARP6mAf8AQs/ni0s5NUvr2wEdvGbl4I3mlmbg&#xA;OZSnpKtTSn2sxYcw7bNtCXuK3Nw8W7FXYq7FU/Q1RT4gHC4pbwq7FVTPA30J2KsQ8x30z6lNbvL6&#xA;UEAUJGGpyLJyYsB48qKTsKZ1fZWmiMImBcpXZ7t6FfeQNzYYlG6OZzpsBmZmehoz/aKcjwLe/Glc&#xA;1faPD48uEADy5XW9fG0BG5hJRek2SXuow2ruUSQnkw60AJ2+dMu0+ITmInq24MYnMRPVOPOehada&#xA;+UdRgs41+vTwlLcuw9RmJFeJYim3hnRabHgwTjKVDzLtM2DHjga5vE7T8vtcloZ2it1PUM3Jh9Cg&#xA;j8c2eX2g00eVy9w/XTqNmLweYrrQfMUUb27QyWlxwu+VGZoq0YKtNqqa1qe305+fHHU4CAdpx2/Q&#xA;l7jv32Pgc82Io0wIdgV2KuxVNFFFA8BmKWTeKuxVTz3x89dirTiqMPEEYFCQYHKdirsVdir0z8r/&#xA;AC21uBr1wtJW2sVPZejSf7LoPb55g6nLfpDvuytLQ8SXweqzRLqOjTQA0FzDJCSD0JUod/Y5iRNO&#xA;4yR4gR3vl9lKsVYUYGhB8Rm5eJaxV2KuxVP0FEUeAAwuKW8KuxVUzwN9CdiqSrp0N75guLyeNXjt&#xA;Ejt4lYAgyCsjNv8Ay+pT5+4zcS1UsOljjiSJTJkfdyA+PD8vIordNPM2jWeneXbHXJ9TudOE85jk&#xA;ZbMXtsAz8U9VUMcycjtVCx/yc23ZXZmHNgud8R827wjw8SCmREldEcSorELIoIDAHZgGAO/uM52Y&#xA;AJANjvaG4ZZIZUljPGSMhlbwI3xjIxNjmmMiDYZ/Z3FjrumfvUDV2mj7o/iP4HOixzhqMe/xd/jn&#xA;HPDdguo2hs76a2Jr6TEAnuOoP3ZoM2PgmY9zo8uPgkY9yG0Py55Vk832+tanarJeRp6dvI9DGsgP&#xA;wSOhFCy9FY9PoBGz7P7SlCPhE+g/Z+wt+jnETHEzTXvKq3TtdWVEnY1kiOyufEHscs1eg4zxQ5ub&#xA;qdFxHijzYjc2tzaymK4jaKQfssKfSPHNNPHKBqQp1M4GJoilLIMVS3TnKo7Dc/RkZGgqY5jsnYq7&#xA;FVPPfHz12KuxVJLqP07h17VqPkd8i5ETYUsWTsVTryhoSa1rkVpKaW6gy3FOpRKbD5kgZTnycMbD&#xA;l6HTjLko8uZej+c/NUGgWC2lmFF/KnG3jA2iQbcyOm1KKMw8OLjNnk73XawYY1H6jy8kw/JrV5L3&#xA;y7c200hkmtLliSxqxWb46knxfnh1Makw7KymWOjzB+/f9bynztpr6d5r1O2ZCi/WHkiBFP3ch5pT&#xA;6GzNxSuIdFrMfBlkPNJMscd2KqtrH6lwi9q1PyG+LGRoJ3knHdirsVVM8DfQnfLFU+0nT/0lpUcF&#xA;/N6mrRD4rwqqNL/rAfdvuM308uPXXwjgyDl7v0/odhCAzR3+sMz0XyVZX/lySw1HlOpYtbsfiWJ6&#xA;EB4iabqSc33ZfZkvyxhkkTxfIe5pyxOMcJLySawIFYzX/JPXOIjl73EpCdNjlqEbpGqz6bdiaPdD&#xA;tLH2Zf6+GX6fOcUrDdgznHKwy7V/Kiatodx5ntJwiRR8jGy7SBNm3r8JUbdM3Oo7PGbEdRE8h83I&#xA;1hhKQlHqGCZz7gpnpnmLUrCiI/qwj/dUm4H+qeozLwayePYbhycOrnj8wno1rRNbVLO8iaKZyFiP&#xA;WjNsOLD+IzP/ADOLP6ZCi5v5nFmHDIUp+d/In+GoradLz6xFcsycGXg6lQD2JDD7sj2p2V+VAIlx&#xA;CTqyO5IbSLgnI/ab9WaHJK0BXytLsVdiqnnvj567FXYqgtTtyyCVeq7N8sBbMcuiWYG52KvQfyks&#xA;63GoXpH2ESFG/wBclmH/AAi5h6s8g7rsaG8pfBIPzAufX82XtDVYuES/7FByH/BVy3Tj0Bw+0pXn&#xA;l+Oiv+X/AJ0byvqUjyxGaxuwqXSr9scSeLr4leR27458XGPMLodZ4Mjf0nm9Z8yeW9C88aJFdWky&#xA;Gfjysb9N6d+Djrxr1U7g5h48hxl3mo08NRCwfcXg+qaXfaXfzWF9GYrmBuLqfwIPcEbg5sYyBFh5&#xA;jJjlCRjLmF0GmyOA0h4A9u+SYMp8naDpf6Vt3v6tA7UKMTRq9B8I7tT2ynNMxgSHJ0eKE80Yy5E/&#xA;2faq+Zl086tcW+n6Zdaf9UIWYzcDFKGFVkgKvIaU+1WnbbKtHqPEBcjtnQxwyjwirvZJczXSOxVU&#xA;zwN9CRFnEGkLHov68ryGgmITCOR43DoSrDoRlePJKEuKJotsZGJsMj0X83/ImgWX6L17Vvq2oRMz&#xA;GIxTyni55LVo0dATXoT79M9L9nMsp6QGV3xFhMkmyw+aAEepHup32/WM83BINHmghKb+IKwkH7Wx&#xA;+eZWKXRgULlqHoXkjWkm8l+YNFnkAeG2nntgzAVV4yGUV8HAP+yzpOy9SJaXLiJ5RJHy/X97Icnn&#xA;uc2xdiqrZuqXcDuaKsilj4AMCcnjNSB80jmzz8y9bsNZ1Kzjs5hPbWcbEuteJkkIqBUb0CDNv7Q9&#xA;oQzTjHGbERz8yksTzm1dirsVdiqnnvj567FXYq4gEUPTFUqvbJomLoKxH8MDdGVoCe4gt4mmnkWO&#xA;JftOxoBU0yEpiIsuRixSyS4Yiy9S/KTV/L1z5ekFjfxT3QkeW8hBpJGBRRVWo3Gi15Upmuzz4pbP&#xA;TaDAcWOpbHmXnOoXb3l/c3b/AGriV5T/ALNif45sYCgA8zmnxTMu8lD5JrZF5M87al5ZvecP76xl&#xA;I+tWjHZh/Mv8r07/AH5VlxCY83L0mslhO309QmHnL8z9H8169FpelaR6kdnU3GsT/DKhA+wiqfs8&#xA;tviJ9htXMbACJU7ftHgnh4q32pD2loZCHcUjH45mvOpooNQF67caePamRkQBvyTEEkAc1LVpr7Tb&#xA;LTZdUMk+p6rqUsBkMkkkaW6iZoUUFvTT92qM3Fak1r7aXS57y+gVD9b2HaOj/wAG/eG8kR93P5pf&#xA;fQCOWqiivuB7983wLw8xRQ2FgqZ4G+hIywpxfxqMpysoo6GB7iRYUbiz7Btttuu/hktNhOXIIDq3&#xA;Y4GcgA8Y8xflj5vh1e6aON9StTNvqSlfjLmpLryLAgn4s9Pw9p6aOIkERjD013V0RkwGJNbgdXsF&#xA;vCsFvFApJWJFRSdzRRTfPLMmQzkZHmTbFCanbRvCCPhbl/A5ZhmQWEgk72sy9uQ8RmYJhrpTKMOo&#xA;I+jJWrgjHoCfoxtVRLWZu3EeJyJmFpExWqJufib36ZVKZKaV8gl2KuxV2KuxVTz3x89dirsVdiri&#xA;ARQ9MVS+80iCdGUKpVvtROKofoORlEHm3Y88omwaSuDRoNOuhdW1qttcKGUTQrwIDCjUK+I2yoYI&#xA;g3TmHX5ZR4eLb8fFUy1x3Yq05EYBkIjVjQM54g/SchPJGP1Gm/T6XLmJGOJmR3bonynJpsJ9GO0l&#xA;4zyM7zmhSvizEknpmsx9oYYnh5eZer1vszrZw8SxKh9Mbv5Uyy+v7axt/WmrxJCIiCrMzbBVHjmy&#xA;MgBbyOPDKUuELvKvmGC/hluzZSRRx7wvKR+9qaL6dO1ASzdOlCe2t1OPJmIjygfxv+gO90s8GkiZ&#xA;EiWUfih3eZ59BT1HytzuvLNydSAS3uWkCnoDEUC7fSDTB4McRqH4LmYNRPU4zLL1v5PKNTpwTxqc&#xA;28XjciX5JqVM8DfQla2mEcm/2W2OQnGwkFOdOcLewt2Jp/wQp/HLuzZ8OoifP79nL0xrIEXDcot7&#xA;PbybwyuwIPQNWn45s9Pq4x1E8U/7ucj828ZAMkonkSgbqAwTvEeinY+x6Zp9ZpzhymHd9ziZIcMi&#xA;Equ5g7hV+yvf3yOONBokVDLEOxVPfLWiWeqJdfWPWT6uoZZEaNVZmICRfGKc334/Fm07O0UM4lxc&#xA;Q4R0I+Ed+p6bqi7vyJqsGmeukEkl367K0CsjFIQeCkhSSWZwfs9hmRl7EyxxcQBM+LlttHl8ye5U&#xA;O/kLzWkbyNZUWMEt+8iJoBy2o2+3hlJ7D1YBJhy8x+tUbZfl7qb2ly14phvgP9CtFaNmkIoWLHlR&#xA;VXkP86VycPYGUwlx7T/hjtv39eQVKLTyrr13FJNb2vOKKQxNJzjUch1oWYVA7kbZr8XZmoyAyjGw&#xA;DXMfr+3kqar5A1F9LhljBe/lJPoq0bR8SaJ8fID4grNUEjoO+Z47CyHECN8h6bV5b37ze/TvVI9V&#xA;0PVNKaJb+H0TMC0Y5I1QO/wlqfTmr1Wiy4K8QVfLcfoVAZiqp574+ep75V0K31i4uIphKqxIHEsb&#xA;KKMxCInFlNS7MAPiGU5chi5ui0wykg3t+PtTfV/y8nCRPoolugS/qGVo0FAwVCpJWvM1I9qHvlcN&#xA;R/OcvP2UdvDuXvr8boa//LzXYkg+qWzzsIgbpucdBN1aNBUE8RQV8dslHUR6teXsrKAOEXtvy59w&#xA;WaV5D1m4Blu7d4oWgaWBVaMSSORSNKEnhyY78gNq4z1ERyY4OzMkt5ChVjlv3e74qs35f6hDojXL&#xA;gnU0ZmmtA0fGOFQ/xs3Lct6fw0wDUAyroyl2XMY+L+Pu22G/6kqh8peYJbOK8W1C20y845ZJIowV&#xA;qAD8bLQHkKV61yw5o3VuNHQ5TESrY+YH3lNdR/LfUVii+pwm5uAgN0pMXEPQl+DFhWjfDSm5ByuO&#xA;oHVy8nZeQAcO568vx5MY1jS73RpZILq0K3Uah/QjMbMQRUUIbj+OXRmCLDgZMEoT4J+k/juthE3n&#xA;bhfG3vbJ7WKpo86B2UnoSlF+H5GuaLPpJZZcWQ79w2fSezu08OlxCGmiCP50qJPyr71TV4Lq5svr&#xA;mgzCKdVLTQwhOUiV3eKRQGYeI++h2wQ0mMcxfvZ5O2NRLlLh9wA/ao+S7XUtfQQ3csj6fbO5nd2J&#xA;LGQCsak7/EBQ+C1/mzZYoX7g8t2hmGMmX8cvx+Ph3PVLH9GxXNut9NHaacros8sjLFGkdQDVjRVF&#xA;MyJy4Ykul0+PxMgiep/tZg+vi81uSzt5ov0ckLRWAiYGJtgVYMKg1A2zFOP0CTuoaknOcfKIBA97&#xA;zzWFkhv5bSWgktiFdQQaFgGH3gg5m45CQsPO6nFLHLhkKQOWOOqZ4G+hOxVB6pp76jFHC17c20KG&#xA;rJbSCPn02ZuJag9jmXo9X+XkZCMJS/pC6926RIhE3Rvjpa2lhdNbXCKqLeSgXD0XYlg5Xkx8TlcM&#xA;sDmOTLHjBJPCDwiz82RnazTv0rDZLBqGoPqM4JJuXUIxBNQtATsPnlvaGqjqMnGI8G1VdolkMuat&#xA;mGxdirsVRlhrGp2AYWdw8IZgxC0pyAIDCvQ0J3zIwavLi+iRCok+avMZlEv6Rn5heAPI7CoPT5qM&#xA;v/lTU3fHK/eq/wDxf5m48BqMyrSgCniPwAw/ytqarjkqIsvPPmK1WYCf1WlQoryVJj5blkAKrX5g&#xA;5dh7a1GO/Vdjr09yoKLzNr8UJhS+lERLMyFqgl68q1rWtTmNHtLURHCJmv1qvPmzzIU4fpGYLTjQ&#xA;NTYinb2GS/lTU1XHJUHfanqF8yteTvOU+zzNaV6/Sadcx82pyZfrkZKhcoVTz3x89Rljq+pWCstn&#xA;cPAHYM3DapUEAn5cjkJQB5tuPPOH0mkUnmvzGiRxpqEypFT01DUA4jiB8qYPCj3No1uYADiOzTea&#xA;vMTSrK2oTGRej8t+/XxpyNPDHwo9ynW5rviK8+bvMzLxbUZmWlCC1QRuN69euDwYdyfz2b+cVdfO&#xA;/mJdOlsRcn98QWuat6wVQAEVgaKNuwr74PAjdsx2jm4DG+fXqhU80+YUhjhW/l9KIBY0JqAFpx6+&#xA;FBTJeFHuaxrcoAHEaC5/NvmZxRtSnIBDfbPVW5D8cHgw7knXZj/EUtvL25uXM9y7TSBaDuaDoqjt&#xA;8smAByceU5TNkvGte1fULvUbl7uZwYpW9O1f7MfE7LwO1ex23zXTmSTZex0mnhCA4QNxz7/iznRt&#xA;Bns7C1vbQc55Y1lubO4oE5OgJEZA/dstSOnzzKji2BdJn7QMpSgSREHYx/T3p7ok97Fe3lxPam3i&#xA;uFhCxM6M3OMMrN8BYfZ4j6MsjHc9HDzZY8MYg8RF77/p+KzzjNqOoaS+m2Ftz+tFFknMioI1Dhie&#xA;J3YfDTbK80ZEUA5Ggy4oS45yojpR7kxhlNvaQWtv+7igRY0p1ogAG/0ZdGAApwMuYzkZd5tjdnp+&#xA;oweb7+7SSWWyvEEt5JcMWJuCSR6bHdqD7umUY4GMzX0ux1Opjl08TM/vAdq7vNkGZTqFTPA30J2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kqee+PnrsVdirsVdirsVdirsVdiqEm0fSp7kXU1nDJ&#xA;crQiZkUtUdNyO2QMIk3TdHUZIx4RIiPvReTaXYq7FXYq7FXYq8mwPTuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVl+eVPuLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYhnqr4c2ASaDcnoM&#xA;VTrVfKOraXdx2t4qxyvEkzCtePOvwkjqRTttlGDUxygmPIGm/UaeWIgS5kWo/oQcd5t/9Xb9eXW0&#xA;0x291a3g1Q2EKvdNGQs0kYJCGtDX5d8xp6uMZU5UNJKUbRuZTiOxVcgUuoY8VJHJqVoPGmKs8u/y&#xA;i1WLTTfxXiSI0MM0cJikEpMyl+DIgkKsqFPpdR1OUDOLpvOA1bGz5L84BJXOh36rDtMTbTDj8HP4&#xA;qrt8G/yy3xI94a/Dl3FZD5Q81z2iXkOjXslpIrPHOlvKyMiipYMFpx98fEjytfDlzpOdC/K/zHqt&#xA;jqF4y/VUsbVLqON1aSScyxGaKKNI+R5NGvL2FCRkJZgCGccJIKQw+W/MU8lxHBpd3M9pJ6V0scEj&#xA;mKSvHg/FTxau1Dk+Md7XwHuT5fyu81foIanJazRXDySJHprwT/WGWICrcQhoSxooNK0J7ZDxo3TZ&#xA;4MqtjupaFremBDqWn3NksjMsbXETxBmjNHClwK8T1plgkDyLWYkcwgcLFl+eVPuKP0PR59Z1OHTr&#xA;eSOO4nPGIy8+Jbw+BXI+ZFMsw4jkkIjmWjU6gYYGZFge79NJgnkzVn8wjRFZGkqed4ok+rqiryd+&#xA;bKp4p0Jp1y0aSXicH29Gg9oYxh8X7Nr8uvVCWXlvWLzUYLKG2l5XEywRytG6pVu5JGw4/F8shDTz&#xA;lIRA5ltyavHCBkSNhfMKF9pF7a3EsfpvLFHJ6aXKo/pvuQrKSBs9PhyM8RiWePPGQBujXLqP7FGS&#xA;xvYmdZLeRGjUPIrIwKq1OLGo2B5ChyJgRzDMZInkQvl0rVIo3lls54446iR2jcKpBANSRtuRhOOQ&#xA;3IKBngTQkL96I1rQbzR/qQu6B723S6VAGHFZK8VYkAcqbmnSuSzYTjq+otr0+pjl4uH+GVJblTkO&#xA;xVjfnrVLux0mOOzkMdzdSiIcf7zhQluFN61oPpzY9mYRPJZGwDpu3NTLHhqJoyNedMzi/L3/AAzp&#xA;1jaS38l3qdxELjU/VNRDK4H7pBU/Z3rU79ce0piUxTT2JxQxm7Nld+ilp/eGvy/tzXO58byQ09jN&#xA;COX2k/mH8cWccgKHxZuxViGeqvhye+S/Lh1/XIrNiVtkBmumHX01IBA92JAzE12q8DGZdeQ97maH&#xA;S+NkEenM+5m1/wCbZ31N7ZLW3vdOiYQWtrLEH+BPhXgw+Op7b5iYNCBjBJlGZ3JB/AcnPrychAEZ&#xA;QGwBH4KprVxY6XoEurX3keQ2UcghuKzyRleW3Io68uFfhr45j5ZZBLhGW/gHJwxxmPEcVfEtfl7B&#xA;5Z0vyhN/hIW41DWbcfXGupyJ0loVaJQyjksXIhegJ3zH5TBmJcIPMDZyDvAiBjxEciaLF9W8veXt&#xA;NlrqV/I0zmjQ2EayrG3+W7sg+hc28NRlybwjUf6W1/Dd1EtPix7Tlcv6O9fHZiWZ7gOVwjBtqg1o&#xA;aEbeIOKvQvL/AOdXmCx1+fVNSRNRjuAOdsvCEKUqUCHg/EcuPLbkeK77DKJaeJFByI6iQNlq6/PP&#xA;z7NcQyxzQW6QyPL6MUQCuXYsBJUkniTtSnvXEaaKnUzab88vPTRSQ8rQQSQrb+h9XQxqqqVqFNR8&#xA;QbcHbbpTH8tFfzMkdpH58+Y7a4e41C1gvZEjf6oEVYQkzIsYd6K5YBV6DifemRlph0THUkc0n0v8&#xA;4POOmw3EVu1twurlruesCqWkenLdOH8o36961ycsESwjnkFa1/OrzraQxQ2n1OBIEVIuFslVVFZV&#xA;3NenNj8yfE4Dp4lI1Egkfmnz15h8zx2kerSpItmvGIqtCTxCliSTu3EVAoPbLIYxHkwnlMubHsm1&#xA;svzyp9xTny15pvvL0089lFC80yqoklD8k4NzHEoyGhI3B2PcZkafUyxEkAOJrNFHOAJE0O5kyfnT&#xA;5pVWH1WxYsFBJSbou9P73p7dMzB2tl7o/b+t1p9nsHfP7P1LX/ObzQ8fBrWyI3oTHMSCVKk1MpNa&#xA;MRgPa2U9I/b+tI9n8AN3P5j9StafnJq76lFLqVpbtYAKs0FujKSEYSIV5uwqrDau1K+OSj2rPiuQ&#xA;HD5MJ9gYxAiBlxd5+XchG/NfWU1rUdTt7Kz/ANPVIvTmjZ+MUVeA5BlqaN8VdjToMr/lOfHKQEfU&#xA;2jsTGccYGUvTvsep+Dcn5xebJSglS0kiEbRSwtG3CXkvFmko9akdgQPbCe1cp51+tR2DgHLiu+d8&#xA;vdt+1IfNfnTUPMs8E+oJbxSQJ6amBStVqSAeTP0r2zG1OqlmIMgNu5zdFoIaYEQJ370jDoejA/Tm&#xA;NTmt4q9O8i+Q2s5NC8z3LRXMdw0hS3Zd4yY2KMCepIRq+Hvm+7O0Zjw5CfqeT7a7RExLCBRiRv39&#xA;/wChNvzI8szz3NtqOk2Uk6ThhcmBWdgwpxDIoNNq75DtTSkyEoR99NfY2tAiYzkBXK3n89vcW8rR&#xA;XETwyr9qORSrD5g75pZRMTRFPQwnGQuJsNQTW6h1vNJ1yf4v3M+nWKXMEkfEb82mi3D8lIp2za6T&#xA;swZYcXFXwdNre1zhyGAjdeaT6nFaJclrNLiO2cArHeRCCdGoOaSRhnClWqPtHNfqMXhzMe53uh1B&#xA;zYhM8yhMpctiGeqvhzM/y081Hy5fXlz9VW6E0axshbgR8VahqN4eGUZ8PGA34M3AS9Z8geZ/Jepe&#xA;Y7S1t9DjstQfmYJRFEQrIjOaOArA8VPbMTJimBZO3vLl4ssJGgKPuCW/mz54uBqt5oFgnpQqPSv5&#xA;HCsZC6/Eig1AWjb9z+uODRQJ4yy1GtmBwB5dsB4AZsQAOTrSSeaW6zOv1Ngu5BFD9OG1pj5dj1OK&#xA;tYpdirYdh0OKFVJgdm298NopUwodirsVdirsVZfnlT7i7FXYq7FXdOuKoeW7A2Tf3OSEUodpHb7T&#xA;E+2TpVuKuxVcsjr9liPbGleqQfmBqr/l1ZQ+XdKuLzVNDkT62THyh40ZfgoeT8lk3C7r37Z0uhPF&#xA;jgB0u/x8Xg+18fh58hP8VV52R91Uxix/NLzlqmvw2DJcaPe3zrDEsLSJCrUpzaKQ/s9T1yWs0878&#xA;SM6A6OPotTjEfDljsk/Vtt9nT3ozW9X8/adqsNtfavDd3Mknp+tNZW01AYWkBUyKeyU7Zr/zcbkZ&#xA;QBMRe5vqB1Hm7KOjkREQyECUq2FdDLofJJ5V84NIzReatQtEYlvQtJZbaEFjU8YoZERak9hlePtY&#xA;QFRhQ9/7G/L2KchuU7Pu/alYW/iu7q3vL6XUHHpzfWJyXkLSl+ZZ2LM1eA6nMfW5I5IxyAcJJlfw&#xA;r9bsOysUsU54jLijERI+PF+pfmvd0xDPVXw5GaZciG4oxojjiT4HscSr0P8ALV5E886Q0ZAImPIs&#xA;aDgUYP8A8LXMbUVwG3I018Ypb+YzlvO+sMXV/wB+aMpBHHiKDbwG2HT/AEBGo+ssSmmLGg+z+vLC&#xA;WsBItfv44LdqmojHN/n2H04JS4QSWUI8RACReV7bzj5l1CS30XTm1BoV9SaKMKoRK03dyoB8KnfN&#xA;cdcYmzydkNCJChzTDNo6t2KuxV2Kr45OOx6YQUEK+Fi7FXYq7FWX55U+4uxV2KuxVBTzlzxX7A/H&#xA;LAEqWFXYq7FXYq7FU+8u+dta8vWd3FYSIqSAyhZEDD1FXr9NMzdFqZwkIjkSHU9q6DHlgZyHqjEs&#xA;jtvPWs6rcaaNSkQ26zQyuqIFFajc/ecdTq55JcMjsJOLp+zcWPGZQHqlD9C3z+SfNduD2nUD/pDk&#xA;ORl/H/UH+6i14Btj/rn/AHEkFmvdsx25kV9bu+JqFihFfcGTMrJ/cQ/rS/3rVpRWoyf1Yf79dmK7&#xA;JiGeqvhzsVZJ5K1e5g8xaZHx9XlcRxj+YBzwPz2OYutiDhl7nK0UiM0a70d54nmstdvBdQSwCeaR&#xA;4XZfhdA2zK3Q1yvRTjLFEA3QFs9bjlHLIkVZNMVuNXqCsKkV/ab+AzLpxWLeZLhmtxAvJ5ZWBagJ&#xA;2G/68xdXL00HL0kfVZe8flzoUP5UeQpdc1u3mGt6zxMlvwb9yVR3t4JAacCanmT3NO2aYYjlycI6&#xA;O4OUYsfEerx9mZmLMasxqSe5OdI841irsVdirsVVoXqOJ7dMIYlUwodirsVZfnlT7i7FXYqh7uSg&#xA;4DqevyyUQlX8oeZdK0LzZbX2qQR3dlbKTJbOUqWkVlDKH2qnXfNppIcIE+Az3+X4/Q6TtLJxmWIZ&#xA;I4qiOZAsnp37V070z/MTzv5Y8x6rBdaTax6fFFD6clTErSNyJqRGabDbDrIyySBjjkPgx7MnjwQM&#xA;Z5oSJP8AOH6SxmOSOReUbB18VII/DNfKBiaIou6x5YzFxIkPLddkWbsVQPmHT/OtvoU/mHTrSM6D&#xA;Z8VubxmRm9RnCcRHy50HNanj3+ebPRaXHkFy5vPdrdp5sM+GAFVzQmiX0us6ZFPKwShZLiNNuTL0&#xA;3rsCCNsGYR08zQuXQnp+1t0mSeuxAyPDEEiQH8Xx6DvT3TriW0rGzmSAU9JT9pfbl3HhmJmyidGq&#xA;l18/h3udg0hx2BK4dAeY8r7u5les+cI9emt5JrWC2ltpfX9SGM+o49F4uLOzHb46/Rk8ur4okcMR&#xA;xDp7wf0OJi7KMJRInI8Jujy5EfpS641F3BWMcFPU98wHZxxVzS5IONzLPyr6iovGnThy7+/LLZZb&#xA;gI9xP21+pjDDWSU7+oRHyv8AWq5U3sQz1V8OdirasykFSQR0I64qoTzyyvWR2emy8iTQfTkKA5M7&#xA;JU8KvWvyl/Ls/W7PXtYVYmkkUaPaS0BkkNSspVvD7SD/AGXYZptdrDI+Hj59T+PtdxodGIjxMnLo&#xA;Px9j6C1Ty7pmp6XJZ6uouIJIil1yNA606k9RTqD1GVRx8NSJ9UerdLJxXED0no+LNTsnsdRubN1Z&#xA;Wt5Xjo4o3wkgVzd45iURIci6PJAxkYnmENk2LsVdirsVbQ0YHFCJyTF2KuxVl+eVPuLsVdiqXyty&#xA;kY++2WBKFu7KG6QBxR1+w9KkH6eo9sytNqpYjY5dzg67s/HqY1Ln0PUM/wDJ3mHSdVu7HQ59D0XT&#xA;dS4Mgu1tLWOS6lqOBimnhuIkYioZDH1+z14jptPqI5Y3F4LW6HJp58Mx7j0LIfOH5badcTwWFvFB&#xA;onmcwPNaMJlltL6KKrSLOUit/SkSuz+kFpQVP7I1GmhlFSTotfk08rgduo6F49BLcfXLy3uAI5IJ&#xA;PT9GqtTiAGIZSQylujA0zn9XpfBofb+PJ7XsztAakyN1yqPUbb/aicwXavU/yb1WG7jl8sS2xmeW&#xA;RrlGKq0QQKvL1K9KMopsdzmx0BMjwDm8525hEayk7cmB+bfJx8peYr7SwHaOSZrqO4kG8qznnyrQ&#xA;cqE8K+2Q7QEvE9Xw9zmdieH+XHB1Jv3pRmC7ddE3GRT774lUwypDsVdirEM9VfDnYq49DiqFyLNE&#xA;adEJtQtYj0kljQ1FftMB0yGQ1EnyZYxcgPN7Fbaje6n+f2mWImZrTT5iIIv2U4WpklIHSpINTmr0&#xA;WIR091vL9btNblMtRV7R/U9c/NbVL7S/y+1m+seQuookEbIKlecqIzdDsqsSfbJQgJnhPIoyTMBx&#xA;DmHzXc/mQ2pLx1vRLDUNqerxaKWntICxH0ZKPZvB/dzlH7R8mMu0uP8AvIRl9h+aX6/pmhy6dBrO&#xA;gl1t3Pp39g59RrWUj4QX6lH34k+H0DI00stmOTpyl3uPqI4qEsfXnHuY7mW4jsVdirsVRQ6DJMHY&#xA;q7FWX55U+4uxVpjRSfbFUuy1LsVU54Ip4zHIKqeniD4jLcWWWOXFE7tGo00M0OCYsMw8h/mNpzag&#xA;lj51M0lmHW0bV0YgzRwn93BqKivrxA0IY/EN1NUZhnUYNRGYA/iIunz3V6GWIyI3gJGN+7veu23l&#xA;XTfrOlxapY6dqlnqgnjjktoV4wkiSdJEYCnpPEoUkUIkoRUN8JOmibuzfe1R1c40Y+kjqOaRax+R&#xA;nl+4vjJpWrfULYGtxbygTcFPeNiyGnb4q/PNbk7LgTcZUHf4PaLJGNThxS7+XzZn5G8k+WPLkUr6&#xA;Qz3U86qJr2RuRZdyoXiFUKf8kb7VrmdpdLDEPTvfV1PaHaGXUS9dDh6PNf8AnJW+is59CLR8pClx&#xA;8Q6kFk2J8Fp+OVazRnPKIBqr/Q5XZXaMdLCciLsxAH+meSWtytzAsyggN2PYjbNDqcBxTMD0ex0W&#xA;rjqMQyR2tWyhykxU1UH2ypDeKuxViGeqvhzsVcemKoXIs048pS6FDrkFzrbyLY21ZuESlmeSP4kT&#xA;boGP+Y65j6kTMCIcy36YwEwZ8g9M/IYy67+Z+p67OoUpBPcUG4V55FRVB9kZsqyQGPEIjo24pnJl&#xA;Mj1fRV1bW91bS2tzGstvOjRzRMKqyOKMpHgQcxAXMIt8c/mR5KuPKHmm50tuTWb/AL7T5m/bgcnj&#xA;U/zLTi3uM2mKfELdXlx8JpIdO1G50+59eDiwZSk0LjlHLG32o5F7qf7RQgHJkWwBpX1KytGjGoab&#xA;yNi5AkhY8nt5DX925/aU0+B/2h7gjAD0KkdQl2SQ7FXYqih0GSYOxV2Ksvzyp9xdirRFQR44ql2W&#xA;pdirsVQGnorreKwDKbiQEHoemZmokQYEc+AOs0UBIZRIWDkl+hkfl7zb5q0C3exsdQZtKKuIrGbk&#xA;6Rs9KslGXoRWhqPbL59pGcOGQ3cAez8Y5TKMqj3VZCYWH5jedLNQq6m8yg9Jkievt9moHyyr+Uco&#xA;5Gh3OX/IemrcEnvs39lD7Ho/5W/mU93f6q/mTUbazg9KFoPWdLeJShcNxLsBU8qnft7ZtOztTPKZ&#xA;cR7v0ug7b7Px6eMOAc+K/sef/wDOQ/mvQfMGsaf+hb+LUILOJo5pYG5oJGYmgYfCdqbqc2MD+9r+&#xA;j+l00o/uL/p/oYNov/HPT5t+s5z3av8Afn4fc9r7P/4pH3n70dmtd0mKigA8MqQ3irsVYhnqr4c7&#xA;FVs00UMbSysEjQVZj2wSkALKYxJNBBW93b3SGW3blHyIrQjfrTf55XDJGfJtnjlDmq5Ng9j/ACCl&#xA;8x6XLeXVvp0babfmNZr+4ZlIWHnRYUH26s+56Zqu0NVCAq/V3frdp2fpZzN16e/9Sv57/PrzfY+Z&#xA;bvT9He1SztGVOfpeoWcBTICWZujVXbLNLi48YlLmWvVZuDIYx5BC/mtqF55m8kaP5gu9riMo3Ace&#xA;Kpcp8QqAv7SLmHoM8hqJY5Gx+pzNdhidPHJEUf1vH+uwzeujRtvPe6RqEiSw0ljLQXllOpAYA0ki&#xA;lTY9R7FSKijAHAdwkbFW1LTbf6uNS00tJpsjBXRjWS3kNT6UtAK1oeD0o48CGUAHoUkdQhpNLvo9&#xA;Mg1N4iLK5llghl7GSFUZx90o/Hww2LpFGrQyCrgYQxKJyTF2KuxVl+eVPuLsVdiqAmXjIw96j6cs&#xA;BSswq7FUHp4AN1T/AJaHP3gZk6g/T/VDg6EUcn/DD+hFOxVGYDkQCQPHMcOaTQYbb6nruqcVilbm&#xA;6+p6cZWOgPYH4TtXuc6Q6XT4Y3IfPd4WPaGt1UzGB86FR+3b70NLBdvITKS0nRmZuR+/fNhjxgD0&#xA;ig6fNlmZHjJJ890VaK0dvLCU5SylTGa0CkVH41wSxyEhMGqBvzZ4ssTA4zGzIijfI/ttltpbi3tk&#xA;hG5UfEfE9z9+clqMxyzMj1fRtFpRgxRxjp9/VEwrykUe9T9GY5LlI/K0OxV2KsQz1V8OdiqA1rRt&#xA;b1V7HTNMsZ7u7vJB6UUMbNy/ZFSBQbt3+ZzC1stgHO0MdyXo3mny3Z6R5d8veV3jMeo6JA7alJGA&#xA;Eea7CSvxYirhWqK5R2fE0ZdJfotu7QmLEOsf00peTvy2k1R/0vfSCLy3aSMLy4ZgpLRqHMQoa7qw&#xA;q3h75ZrNUccaiLmeTXotKMkrkagOaYedfzaaeBtH8sqbPT0X0jdgcHZAKcYl29NafT8sxdJ2ZR48&#xA;m8u79fe5er7TscGPaPf+rueZ5uHTvUrC/j1j8n760qDc6YoWQdwscglRu+3AU+g5z+TGcWtjLpL9&#xA;VO+x5Bk0Uo9Y/rt5cjsjq6GjKQVPgRuM6B0L2PSvyiuvzFtk84Q6hFp36VLyXlu0Rel0rlJnTiyj&#xA;jI6l/atO1cxTm4PT3OUMPH6u9PNL/wCcbL2yd3/xKlJVMVxbmyLxyxNSqP8Av08K+INCCCAchLVX&#xA;0Zx0tdXa3da35K0yz8ovYaHqVtbqZLS9khd2CsSC8tq5YLMxqSwkofDI4omZJJTlkIAAB4Zqem61&#xA;q35g2ug6dcRx3mokzSytGqRAsHlekaLRVVE2CjIavVHFy5BnpNKMvPmU31fynqulmRZSlx6BKTPD&#xA;WgZTRjQgHjXvmfhyccBLvAcDNj4JmPcSEly1qdirL88qfcXYqp3nlLzP5hey03RZjaS3M37+5qyi&#xA;OJY2YsxQFgtQB8yM2HZwgZHiF7Oj7ay5BCPhmt9yE51vyha6RcyafFdzX31QhTczFfUYEBjy4gCq&#xA;1plGoIGQ0KDldn5ZnDHiNnz96RzaeyisZ5f5J65W7ATTvWPKdvpvkrRtblmddQ1WWXjaMBx9BNlc&#xA;dwenz5DpTMrJpxHFGfWX3ODg1pyaieMD0wA38/x9zDNN+3e/8xDf8QXHU8of1P0lOg+rL/ww/wC5&#xA;ijcxXYMM8nxlbqFT1SHf6ABnSdpn9z8Q8L7Px/wr3Asku9MsmSWbhR6M1QSBWlemazB2jmFRvZ6D&#xA;V9jaaXFMx9W55nmpaXp9o1rb3DJWUqrk1NOXyyzWa/LxShfp5NPZvZOn8OGXh9VA8zzZRpHl3UdU&#xA;uUtrWF5p33EUYqaeLdlHuc1uPHKZqIsu4z6mGKPFI0E1n8qT6ZPJBfRSQzBmUcgQGCsV5KSBUEjr&#xA;kc2OUJcMg1YtZHJESiQQw/zNp/mjyl+YVroWo30d/BfwrcRCJOChJC6AAU5Aq8R77jNrn0eLwTKI&#xA;oh5/R9qZzqRGZuMuic5pHrHYqxDPVXw5F6bbCe4+IVRByYePgMSr6N/LNfLGj6qNBt4y+uSWvrah&#xA;fycQATwIt4e9KPyNPx7amWSWWPHyjbt4Y44p8HOVbpX+cumDVNYhOm8Zr2yj9O9tlKiQBqSI1Ni2&#xA;zY4tTDEalsD16fNGbTTyi47kdOvyYR5U82z+WTe6bqNo15ol8rJfaa/wsrlePNOX2WpsfEfIZl5c&#xA;QyAEOJiynGTE/J5xq1uFYTKKBjRvnmQHHS/CrMPy584aH5dn1FdasJdQsr+ARGGJ1UVBOzq2zAqx&#xA;HX6MxNXpfFrvi5el1XhX3SQvmDX/ACjqGr2NxpnlwaVYW7g3lsty8puU5hiCWCiM8aj4fHLscJRF&#xA;E205JxkbApkDfnv50ikii06O0sNKt2b6vpcMIWERmoWNivFyFr2Iqd8j+Xj15svzEunJryx568xz&#xA;67e6oLi4SExOkdqbq5kiSSUU5ASSOTQciKnY0wnEKpiMpu091TVJ9buEvLuCKO6pSeeIMpnIAAZ1&#xA;qV5bblQK4YQpjOdpj5Q/LI3PmMedL27jtyLN7XRkjV5CshMkck01VCggMyqq8ttyR0zUdoZY8dS5&#xA;bfF2/Z+KXh3Hnv8ABEzeTtSSaU3M0SorHlNUkNv9qrBRv7nLf5UhyhEktX8lZOc5AB5r568s2ujX&#xA;UE1pcJPb3vNlVOPwMlKj4Wfry2zP0uolkvijwkfjuDg6nTxx1wy4gfx3li+ZTisvzyp9xRem23r3&#xA;AFKgUoPEnoMQGvLOg9m8l+U5tC1S5XVkQySwRGGSNq8RIW5j5qyCudJ2do5YpS4udD9NvFdq6+Oe&#xA;MeC6s/ZVMK80eXL/AEzWrq3Fu5t+bPbuqsyGJjVaGnYbHNPrNOYZSANujvdBqo5MMST6urGhYLJd&#xA;xJzWKKV1R5GNFQMQCxPgOuY8NyAXYynUSedMl/MzXbTUbW4stMlEmi6Ylnb2gX7BID8nH0Hj9GbT&#xA;WZhMGMfojw06vsrTSxkSmP3k+In7P7Xkmm/bvf8AmJb/AIguY2p5Q/qfpLsNB9WX/hh/3MW9Q1A2&#xA;nECB5SwJ5AUQUIFGbehNdtsdNpvFP1CPvTr9d+XFiEp+7l8T0SfyzZcLmScH4VTiABtUkd/ambTt&#xA;SYGOMPxs8/7PYjLNPJVCvvP6E11C/VSbSBTNdyKQI16KCPtMe2a3T6e/XI8MB1/U7zW6wD91AceW&#xA;Q5d3me5V8vXCQyR2F6vo3MahYK/Ykp3U+Ptk9Vi47yw3iefePe0aLUnGBp8g4ZgUO6Q8j+h6z+VV&#xA;3NY+aY5FXl9ZikgCd2rR/wDmXt75Ds/MYZdt7a+2cQngN9Df6P0sy/MLR5Nb1zTmt2KwCP0rqZh/&#xA;djnWvA0YmjZldoxGXJGuXXydX2Vm8HFK+d2PPbvUNV/LLyzquvaPrd7DNNNpNpJaRSTMVM/JuSO/&#xA;Gh/d85OIr+17ZscGKM4cBB4PPq6vNnlDJ4gIE/Lo8s8zWdva6zdparwthNIsS1JoFYjqd85jPEDJ&#xA;IDkCXutDklPFEy+rhF/JKsqctiGeqvhyfeUxYG8P15nW1DKZjGKuVAJoAfHplebi4Tw/U2YuHiHF&#xA;9KD/ADEvb7VdSiliRmkvbiR0gjBZuWwjVabkgGmYGXGMeOMegc/DkOTJKXUsg07QfM0Xl5dW1adZ&#xA;ZUlEJBkMk6BQFUSHehWlKVqBTHTakGXhkdLHmjVaYiPiA9aLrzULq8WEXDB2hT01kI+MqDsGbq1O&#xA;1czMeGML4erh5M0p1xdGPa7LYpAUaeOOWoPpsyg08aE1yZlEHcsRGR5BJSjUrSoPQjcZJi1il2Kr&#xA;hG56DGkWzXyVbR/o+Vm3f1jUe3FaYCFtkmBXrPkew1uDyojcWCSc5bdA4oUYVU0r3OaXWxkcm3Lq&#xA;7vQyjHHvz6PNtVh1qKVk1L1iyHcyMXUE+DVK/dmywyxXUOG/J1maOWrnxV5sN86BfqVuf2vUNPlx&#xA;NcyouMWIZJDL88qfcU00Rwkhc78WRiO9Aa4Ymi4+oFimd/mF+cUGmXemavpFg+o6dcxPBcSyiS3V&#xA;ZEcExrIVZeYqQ2x6Z2uE8ciRy4R+l84zRMIAHnxS+ymHH/nIbzCwb6vN9WLNWOCeGOeFFLV48lCS&#xA;NQbVzGODUiZPFcO7a/tDmDPpTjA4THJtvvXnyksPnDXdTmaOWy0eczRw3LXiw3KSOhc7Aiag5cKM&#xA;ePfNXlngETxQlfFXMXtTt8GPUmQ4MkeHhsbGt7Q2t3V9JpcttBZWNmJpI2keM3LE8OVBSSRgPteG&#xA;UnPpqoRkPi5+HDrOMHjga74/qpilis7xSM6KGEsiMYxQEoxSvf8AlyjUiIkALqhz893Y6HJKUCZC&#xA;PFxSBrbkav7FfKHNdirorKju6RBWk3d6UJp45KWUkAE7BrjihEmQABlz8070zTLSSFWnRZXik5py&#xA;APFhShFe+QGWQujVtGohGRFi63CY3WpW2mwNe3FwLWGGjNOW48d6Dfxr0wY4SlICPNoyzjGJM/p8&#xA;1vlX8zJ9U816Zb2cWq6pZRXERvbpI7iSKOBXDMSgDyMNunDfN1puz8xkJTOw6Xbz+r7T04hKOONk&#xA;9ar4973+bU4b9EuY0kii4n4ZkaNxQmtUahGb55oB8+63L6reoesjsx+nfOFkbJL6bp40K7glWByW&#xA;IZ6q+HIvTrkQXALbI/wsfDwOJV6L5H06P62+uXDiK101WPqUBqXQggH/AFTv9GabtXLcRiAuU3cd&#xA;lYqkcpNRgibC/XVdE1+xijPqSSNfW8Q3biZAxUU/l4j78GTF4WXFInkOE/JOPL4uLLEDmeIfN5x5&#xA;k8xxaC0CXFu8jTFxxBClTHxqCD/rZscucQrzddhwGd9Kec+Y9Xj1bU2vI4zEpRV4sQT8PyzXZsnH&#xA;K3Z4MfBGmYWv+80X+ov6s3EOQdNPmVTJMXYq7FU/8paklvdPaynilxTgT0DjoPpwSCQ9AtNF1G5Z&#xA;OEDrG5H71gQoHjvmFl1uKANkWOjl4dFlmRQNHqzTV/zCfT9KtdG0lQk1qqxTzkBk4IAAq79T+1/n&#xA;SjSwlljxzFW5GqyDFLggbpI9I1S71T63aXkvqNLExjqFXfoegHjmFr9NDAY5ICqlvzczQamecSxz&#xA;N3Hbk8l82aitzerbxmsdtVSexc/a+6lM6GLoCkWFDL88qfcURZXAhm+L7DbN/XFhkjYZjH+Y2raL&#xA;ptnaw28E0frxwKzhq8JXofssNxXN1oNfMRMKFRiT8nlu0uzIGQnZuc4g/E0xT80tVk1XTFuHghgM&#xA;TIirEnHYkk77nrl2g1ks2oBl/NLR2joIafTER/nDmhdCXjLbilKaba1HvV812sN8X/DJfodpoRXD&#xA;/wAKh+lEajcCRxGpqqdT75gO6xRrdJtJ/uJ/+Ym4/wCTrZk6r6h/Uj/uQ4+g+mX/AAyf+6KNzGc1&#xA;2KuxVF6fcCOQoxor9/A4teSNhJfzSY/4ZSPekt3App4Alt/+BzZ9ki83wLz/AG4a0/vIetflHrPl&#xA;3SPy70uG4uYrWYJJPdc6qaySM/NiR/JTfwzf/nMXFw8W908x+QzcPFwnhq/gn2pefvLsmkyS6ddC&#xA;8aeNhAYg3Heq8ixAFAcx9Zr8eMGN3JytB2bkyyjKqhfN4/fXAlmou6JsD4+JzlXvscaCGxZsQz1V&#xA;8OWyuUidwpcqCQi9TQdBgkaFpiLNMwH5h+To/IsGkW+m69Hq0aepMhjtjay3R68n9T1PTB+z8H35&#xA;qxCXjeIYknl7h5O0Mo+D4YkAOfvPmxF/zC83WQWby7HeaTfV4yXEdCWiIqUII6Fgp+jLc8pTFCJa&#xA;sEYwNmQYz5k1bzv5mvEvNeludQuUXgkkq7hfAAADMU4sncXKGXH3hKP0Rqn/ACyy/wDAnB4E+4p8&#xA;eHeGdW4K28SkUIRQR70zdR5B00uZX4WLsVdirMPIHmTQ9La8tdVtoVNyoez1doBPLazIrcfhpyMb&#xA;V+ILv0zE1eA5I0Cfd3uXpM4xncD39ypB+aXmJqpeyeoh/ahCxMP+BG+Qj2bhjyj892c+0c0ucvls&#xA;4+ctL48uExbw4rX/AIlmXwuFaHg89zwapaXEMRitoZUecAgyPGGHNRXYclqMrz4BkgYnqG7T5jjm&#xA;JDoUD5svPKN3cpceX7a8tmkZ2u0umjZKsQV9IJUj9qtW8KY6eE4xqRul1E4SlcRSQ5e0Mvzyp9xd&#xA;iqhPFdXDhJZiltEQ8CRmjcxuHLEfsnoMzMOpjij6RcjzvlXcPf1dbqdDLPP1S4YD6eHnfefceQVL&#xA;8Tajo0lheOBOxHG5jX+VgQ3E0oT3ocOLUxxZROANd37WvN2fPNhOPIRfeB9td6G0u21CzLCa8Nyv&#xA;pJCjFQjKiEkLtX+bBqtTHIPTHh3J5s9D2fLCfVPj2AG1VSMzDdmh7K2a3jkUkNzlkkFPCRywH45b&#xA;mycZB7gB8hTRp8Jxgg9ZSPzJKIypvdirsVdirLPLfmXy3pdhzvLGe81NCwVeSiFlO4qx5FaeAQ/6&#xA;29BnYM+KEdweP8fjk6fW6HNlybSAx/jp1+YYlrWqai9lJbafaKzSxlPUaQLw5Cmy03298hpvD4uL&#xA;JKqPdzZ6zFmEDHFEGxXOqQ2j3GpppsNjcwCBbeNYwyuG502qadMdYYSmZRldnuZ9m48kMYjkjwmI&#xA;7wbRWYjsnYqxDPVXw52KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksvzyp9xdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e7490478-f9ca-9943-9cf1-a33f62c79b02</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e7490478-f9ca-9943-9cf1-a33f62c79b02</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:01E54A01A8A8E41182C49A96891C4AA5</stRef:instanceID>
            <stRef:documentID>xmp.did:01E54A01A8A8E41182C49A96891C4AA5</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28265BBD48A7E4118C619A33F66DFCF2</stEvt:instanceID>
                  <stEvt:when>2015-01-29T17:21:25+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FCE44A01A8A8E41182C49A96891C4AA5</stEvt:instanceID>
                  <stEvt:when>2015-01-30T19:47:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01E54A01A8A8E41182C49A96891C4AA5</stEvt:instanceID>
                  <stEvt:when>2015-01-30T19:52:29+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e7490478-f9ca-9943-9cf1-a33f62c79b02</stEvt:instanceID>
                  <stEvt:when>2015-01-31T00:13:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
225 450 mo
0 450 li
0 225 li
225 225 li
225 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.188235 .352941 .478431 rgb
f
49.1457 304.919 mo
33.5751 304.107 21.1997 291.224 21.1997 275.451 cv
21.1997 259.154 34.4109 245.943 50.7081 245.943 cv
66.454 245.943 79.3195 258.276 80.1716 273.81 cv
66.8376 280.643 55.943 291.564 49.1457 304.919 cv
.313725 .47451 .584314 rgb
f
175.547 430.877 mo
159.249 430.877 146.038 417.665 146.038 401.369 cv
146.038 400.856 146.051 400.347 146.077 399.841 cv
158.04 393.432 167.959 383.697 174.595 371.875 cv
174.91 371.865 175.228 371.86 175.547 371.86 cv
191.844 371.86 205.054 385.071 205.054 401.369 cv
205.054 417.665 191.844 430.877 175.547 430.877 cv
.435294 .592157 .690196 rgb
f
50.4466 429.977 mo
34.1495 429.977 20.9382 416.765 20.9382 400.469 cv
20.9382 384.319 33.9092 371.201 50.0017 370.964 cv
56.8012 383.506 67.2641 393.774 79.9542 400.332 cv
79.9544 400.378 79.9545 400.423 79.9545 400.469 cv
79.9545 416.765 66.7436 429.977 50.4466 429.977 cv
.313725 .47451 .584314 rgb
f
112.55 408.227 mo
100.801 408.227 89.7183 405.378 79.9542 400.332 cv
79.8803 384.097 66.6979 370.96 50.4466 370.96 cv
50.2984 370.96 50.1494 370.961 50.0017 370.964 cv
44.5469 360.902 41.4496 349.376 41.4496 337.127 cv
41.4496 325.534 44.2246 314.588 49.1457 304.919 cv
49.6632 304.946 50.1839 304.96 50.7081 304.96 cv
67.0051 304.96 80.2165 291.748 80.2165 275.451 cv
80.2165 274.9 80.2014 274.354 80.1716 273.81 cv
89.8831 268.833 100.887 266.027 112.55 266.027 cv
151.817 266.027 183.65 297.859 183.65 337.127 cv
183.65 349.748 180.361 361.601 174.595 371.875 cv
159.246 372.361 146.856 384.568 146.077 399.841 cv
136.088 405.193 124.675 408.227 112.55 408.227 cv
.168627 .317647 .431373 rgb
f
50.7081 304.96 mo
50.1839 304.96 49.6632 304.946 49.1457 304.919 cv
55.943 291.564 66.8376 280.643 80.1716 273.81 cv
80.2014 274.354 80.2165 274.9 80.2165 275.451 cv
80.2165 291.748 67.0051 304.96 50.7081 304.96 cv
.282353 .427451 .52549 rgb
f
146.077 399.841 mo
146.856 384.568 159.246 372.361 174.595 371.875 cv
167.959 383.697 158.04 393.432 146.077 399.841 cv
.392157 .533333 .627451 rgb
f
79.9542 400.332 mo
67.2641 393.774 56.8012 383.506 50.0017 370.964 cv
50.1494 370.961 50.2984 370.96 50.4466 370.96 cv
66.6979 370.96 79.8803 384.097 79.9542 400.332 cv
.282353 .427451 .52549 rgb
f
199.218 427.242 mo
199.04 427.114 198.894 426.977 198.768 426.832 cv
199.218 427.242 li
cp
203.337 427.684 mo
202.641 427.453 li
198.198 425.975 li
198.07 425.711 197.979 425.44 197.906 425.163 cv
197.59 424.025 li
197.306 422.876 li
196.818 420.564 li
196.672 419.788 196.53 419.009 196.378 418.236 cv
195.899 415.916 li
195.373 413.609 li
194.322 409.005 li
194.165 408.331 193.659 407.765 192.971 407.602 cv
192.745 407.545 li
183.049 405.209 li
180.33 404.55 li
177.735 403.926 li
177.587 403.889 177.412 403.861 177.253 403.848 cv
175.523 403.72 174.035 405.08 173.922 406.885 cv
173.81 408.691 175.119 410.256 176.848 410.384 cv
177.061 410.4 li
180.549 410.661 li
190.47 411.394 li
190.453 411.788 190.441 412.182 190.46 412.567 cv
190.472 412.971 190.502 413.374 190.546 413.769 cv
190.584 414.168 190.644 414.561 190.703 414.951 cv
190.78 415.34 190.851 415.729 190.943 416.11 cv
191.024 416.498 191.136 416.874 191.239 417.257 cv
191.46 418.011 191.724 418.754 192.034 419.483 cv
192.188 419.847 192.374 420.2 192.54 420.564 cv
192.713 420.925 192.91 421.274 193.095 421.632 cv
194.232 423.764 li
194.751 424.841 li
194.913 425.206 195.071 425.564 195.218 425.934 cv
195.364 426.3 195.488 426.672 195.545 427.065 cv
195.601 427.461 195.625 427.861 195.52 428.3 cv
195.494 428.4 195.479 428.506 195.484 428.616 cv
195.484 428.652 li
195.516 429.303 196.048 429.81 196.671 429.784 cv
197.125 429.764 li
203.118 429.495 li
203.476 429.475 203.807 429.23 203.919 428.851 cv
204.068 428.364 203.803 427.841 203.337 427.684 cv
cp
.968627 .733333 .533333 rgb
f
185.55 404.884 mo
182.51 412.058 li
176.408 410.509 li
174.712 410.376 173.425 408.785 173.531 406.952 cv
173.633 405.124 174.607 403.373 176.305 403.505 cv
176.461 403.519 177.17 403.399 177.316 403.437 cv
185.55 404.884 li
cp
.890196 .890196 .890196 rgb
f
203.919 428.851 mo
203.807 429.23 203.476 429.475 203.118 429.495 cv
197.125 429.764 li
196.671 429.784 li
196.048 429.81 195.516 429.303 195.484 428.652 cv
195.484 428.616 li
197.027 428.504 200.693 428.177 202.641 427.453 cv
203.337 427.684 li
203.803 427.841 204.068 428.364 203.919 428.851 cv
cp
1 1 1 rgb
f
175.273 389.761 mo
186.522 392.327 li
186.626 392.35 li
186.827 392.396 187.033 392.379 187.215 392.314 cv
198.711 388.175 li
198.318 388.18 li
202.108 389.663 li
202.686 389.888 203.33 389.583 203.546 388.976 cv
203.763 388.373 203.469 387.698 202.891 387.473 cv
202.686 387.414 li
198.698 386.705 li
198.655 386.696 li
198.534 386.677 198.415 386.68 198.305 386.71 cv
186.478 389.667 li
187.169 389.654 li
176.111 386.304 li
175.206 386.031 174.26 386.576 173.997 387.524 cv
173.736 388.468 174.256 389.459 175.162 389.732 cv
175.273 389.761 li
cp
.968627 .733333 .533333 rgb
f
182.966 395.614 mo
182.654 396.341 182.382 397.214 182.257 398.374 cv
182.143 399.416 182.027 400.456 181.924 401.434 cv
181.896 401.678 181.87 401.918 181.842 402.154 cv
181.82 402.389 181.812 402.619 181.784 402.844 cv
181.738 403.289 181.695 403.712 181.656 404.105 cv
181.628 404.376 181.601 404.63 181.58 404.866 cv
181.466 405.995 181.39 406.708 181.39 406.708 cv
181.258 408.022 li
181.258 408.022 178.745 412.054 176.75 411.83 cv
174.501 411.581 172.872 409.473 173.109 407.119 cv
173.121 406.988 173.143 406.847 173.169 406.714 cv
173.169 406.714 173.219 406.458 173.309 406.001 cv
173.405 405.544 173.505 404.891 173.649 404.114 cv
173.657 404.071 li
173.719 403.688 173.797 403.28 173.871 402.852 cv
173.888 402.738 173.914 402.626 173.924 402.51 cv
173.935 402.394 173.918 402.278 173.91 402.16 cv
173.888 401.926 173.871 401.687 173.85 401.443 cv
173.764 400.465 173.674 399.424 173.584 398.383 cv
173.491 397.29 173.395 396.192 173.309 395.171 cv
173.062 392.314 172.868 390.052 172.868 390.052 cv
172.857 389.91 li
172.818 389.442 172.837 388.981 172.907 388.541 cv
175.724 384.575 li
175.85 384.51 li
175.96 384.28 li
176.006 384.179 li
176.817 382.34 176.797 379.376 176.797 379.376 cv
181.278 381.786 li
180.148 381.588 179.649 383.74 179.96 385.27 cv
183.569 389.27 li
184.387 390.505 li
184.843 392.838 183.769 393.73 182.966 395.614 cv
cp
1 .854902 .729412 rgb
f
182.966 395.614 mo
182.963 395.614 li
181.873 395.187 175.2 395.383 173.309 395.171 cv
173.062 392.314 172.868 390.052 172.868 390.052 cv
172.857 389.91 li
172.818 389.442 172.837 388.981 172.907 388.541 cv
175.724 384.575 li
175.85 384.51 li
175.96 384.28 li
176.598 384.891 li
176.759 385.17 179.57 389.816 183.286 389.304 cv
183.382 389.288 183.474 389.277 183.569 389.27 cv
184.387 390.505 li
184.843 392.838 183.769 393.73 182.966 395.614 cv
cp
1 1 1 rgb
f
181.58 404.866 mo
181.466 405.995 181.39 406.708 181.39 406.708 cv
181.258 408.022 li
181.258 408.022 179.001 412.082 176.75 411.83 cv
174.501 411.581 172.872 409.473 173.109 407.119 cv
173.121 406.988 173.143 406.847 173.169 406.714 cv
173.169 406.714 173.219 406.458 173.309 406.001 cv
173.405 405.544 173.505 404.891 173.649 404.114 cv
173.657 404.071 li
181.58 404.866 li
cp
f
184.376 376.824 mo
184.375 377.437 184.134 379.035 184.076 379.269 cv
183.536 381.435 182.458 382.73 182.458 382.73 cv
182.458 382.73 178.709 381.993 177.034 380.699 cv
175.752 379.708 174.814 378.39 174.812 376.827 cv
174.812 373.222 175.259 370.306 179.594 370.302 cv
182.555 370.298 183.699 371.66 184.131 373.668 cv
184.329 374.603 184.375 375.679 184.376 376.824 cv
cp
.980392 .764706 .580392 rgb
f
184.097 373.626 mo
181.756 373.56 180.452 372.798 179.398 375.894 cv
178.89 377.389 179.184 378.976 179.049 380.584 cv
178.849 382.964 175.162 390.069 172.263 387.764 cv
175.235 385.864 174.214 382.971 173.676 380.027 cv
173.076 376.743 173.655 371.345 176.706 369.412 cv
178.973 367.974 185.12 370.213 184.097 373.626 cv
cp
.129412 .0980392 .0705882 rgb
f
175.273 392.632 mo
186.522 395.197 li
186.626 395.218 li
186.827 395.266 187.033 395.249 187.215 395.182 cv
198.711 391.047 li
198.318 391.05 li
202.108 392.533 li
202.686 392.758 203.33 392.453 203.546 391.848 cv
203.763 391.244 203.469 390.57 202.891 390.343 cv
202.686 390.286 li
198.698 389.575 li
198.655 389.567 li
198.534 389.547 198.415 389.554 198.305 389.579 cv
186.478 392.538 li
187.169 392.525 li
176.111 389.175 li
175.206 388.902 174.26 389.446 173.997 390.392 cv
173.736 391.339 174.256 392.328 175.162 392.603 cv
175.273 392.632 li
cp
1 .792157 .619608 rgb
f
180.951 406.414 mo
180.806 405.595 178.323 407.314 177.615 406.811 cv
176.19 405.802 176.278 403.72 175.296 405.219 cv
171.5 411.005 li
165.783 419.727 li
165.558 419.691 165.339 419.667 165.117 419.647 cv
164.735 419.618 164.352 419.595 163.973 419.598 cv
163.6 419.603 163.225 419.622 162.853 419.651 cv
162.483 419.682 162.118 419.726 161.751 419.784 cv
161.569 419.809 161.388 419.848 161.208 419.876 cv
160.934 419.927 li
161.005 419.908 li
160.985 419.909 li
160.848 419.932 li
160.486 419.986 160.124 420.059 159.767 420.131 cv
159.404 420.213 159.048 420.299 158.696 420.406 cv
158.338 420.507 157.986 420.626 157.636 420.756 cv
157.288 420.881 156.941 421.041 156.594 421.188 cv
156.248 421.331 155.906 421.512 155.564 421.673 cv
153.503 422.682 li
152.466 423.129 li
152.117 423.268 151.766 423.4 151.414 423.518 cv
151.35 423.539 li
151.317 423.553 li
151.308 423.554 li
151.213 423.579 li
151.21 423.582 li
151.194 423.588 li
151.063 423.634 li
150.8 423.718 li
150.623 423.765 150.446 423.811 150.259 423.832 cv
149.955 423.872 149.643 423.884 149.32 423.821 cv
149.111 423.769 li
148.582 423.615 147.982 423.769 147.571 424.218 cv
146.973 424.862 146.99 425.888 147.603 426.504 cv
148.031 426.935 li
152.801 431.715 li
153.069 431.983 153.481 432.051 153.831 431.86 cv
154.263 431.618 154.428 431.056 154.199 430.609 cv
153.913 430.037 li
152.046 426.35 li
152.998 426.149 li
154.083 425.954 li
156.266 425.65 li
156.998 425.566 157.729 425.493 158.458 425.396 cv
159.187 425.3 159.917 425.206 160.642 425.104 cv
161.731 424.931 li
161.868 424.909 li
161.901 424.904 li
161.918 424.904 li
162.033 424.874 li
162.102 424.86 li
162.368 424.803 li
162.909 424.679 li
167.218 423.716 li
167.55 423.64 167.868 423.459 168.116 423.171 cv
168.262 423.007 li
174.406 415.907 li
176.443 413.555 li
180.189 409.23 li
180.28 409.125 180.376 409 180.455 408.882 cv
180.518 408.781 180.573 408.686 180.624 408.584 cv
180.715 408.392 li
180.996 407.759 181.072 407.07 180.951 406.414 cv
cp
.941176 .745098 .572549 rgb
f
180.951 406.414 mo
181.258 408.022 li
181.208 408.128 180.518 408.781 180.455 408.882 cv
180.376 409 180.28 409.125 180.189 409.23 cv
174.65 416.564 li
170.003 411.857 li
171.108 410.521 li
171.108 410.521 170.125 407.489 171.108 405.991 cv
172.092 404.494 173.657 402.85 177.615 405.589 cv
178.329 406.086 180.806 405.595 180.951 406.414 cv
cp
1 1 1 rgb
f
154.199 430.609 mo
154.428 431.056 154.263 431.618 153.831 431.86 cv
153.481 432.051 153.069 431.983 152.801 431.715 cv
148.031 426.935 li
147.603 426.504 li
146.99 425.888 146.973 424.862 147.571 424.218 cv
147.982 423.769 148.582 423.615 149.111 423.769 cv
149.32 423.821 li
149.437 428.205 152.225 429.599 153.913 430.037 cv
154.199 430.609 li
cp
f
62.2529 397.865 mo
61.7841 398.388 60.9745 398.425 60.4621 397.957 cv
60.2631 397.741 li
58.1752 394.769 li
48.6989 392.25 li
48.3838 392.168 48.1223 391.971 47.961 391.71 cv
47.8792 391.584 li
46.7723 389.82 li
41.868 381.972 li
41.3007 381.073 41.571 379.876 42.4801 379.309 cv
43.3801 378.74 44.5768 379.011 45.1437 379.92 cv
45.2162 380.047 li
49.4091 388.075 li
50.2461 389.667 li
58.9408 393.267 li
59.0577 393.313 59.1653 393.385 59.247 393.458 cv
59.3002 393.501 li
62.1531 396.077 li
62.6752 396.544 62.7205 397.343 62.2529 397.865 cv
cp
.968627 .733333 .533333 rgb
f
49.4091 388.075 mo
46.7723 389.82 li
41.868 381.972 li
41.3007 381.073 41.571 379.876 42.4801 379.309 cv
43.3801 378.74 44.5768 379.011 45.1437 379.92 cv
45.2162 380.047 li
49.4091 388.075 li
cp
.890196 .890196 .890196 rgb
f
36.4487 416.369 mo
36.4487 416.369 li
cp
.968627 .733333 .533333 rgb
f
43.6487 413.421 mo
43.6662 413.762 43.5766 414.089 43.41 414.363 cv
41.1117 418.134 li
40.823 418.607 li
40.6824 418.841 li
40.6467 418.904 li
40.5848 419.003 li
40.5747 419.016 li
40.5531 419.044 li
40.4766 419.161 li
39.8434 420.067 li
39.4137 420.667 38.9751 421.258 38.5422 421.852 cv
38.1032 422.447 37.6479 423.032 37.2045 423.623 cv
35.9073 425.414 li
35.2955 426.331 li
34.795 427.136 li
34.766 427.181 li
39.1618 428.447 li
39.6333 428.581 39.9085 429.075 39.771 429.546 cv
39.6624 429.925 39.3275 430.174 38.9562 430.188 cv
32.3908 430.469 li
31.8001 430.494 li
30.9414 430.534 30.2185 429.867 30.1821 429.01 cv
30.1565 428.421 30.4638 427.897 30.9313 427.61 cv
31.2952 427.392 31.5518 427.114 31.7681 426.814 cv
31.8832 426.643 li
31.9518 426.543 32.0089 426.447 32.0625 426.347 cv
32.1855 426.097 li
32.2396 425.973 li
32.2466 425.958 li
32.2501 425.956 li
32.3002 425.868 li
32.3042 425.86 li
32.3196 425.83 li
32.3481 425.766 li
32.5063 425.431 32.6536 425.089 32.7977 424.743 cv
33.1989 423.691 li
33.9126 421.53 li
34.037 421.172 34.146 420.805 34.283 420.455 cv
34.4228 420.11 34.5414 419.749 34.701 419.413 cv
34.8495 419.072 35.0068 418.736 35.183 418.412 cv
35.3536 418.084 35.5403 417.767 35.7315 417.453 cv
35.9266 417.139 36.1234 416.829 36.3362 416.531 cv
36.4149 416.416 li
36.4373 416.386 li
36.4082 416.438 li
36.5489 416.231 li
36.6534 416.08 36.7475 415.923 36.8595 415.774 cv
37.071 415.467 37.2955 415.173 37.5262 414.879 cv
37.76 414.589 38.0052 414.303 38.2644 414.027 cv
38.5216 413.75 38.8059 413.486 39.0902 413.223 cv
39.2559 413.076 39.4281 412.932 39.6127 412.789 cv
36.6899 399.353 li
36.3221 397.652 37.3992 395.971 39.1039 395.601 cv
40.8045 395.234 42.4854 396.312 42.8559 398.017 cv
42.8911 398.183 42.9143 398.367 42.9236 398.533 cv
43.6364 413.168 li
43.6487 413.421 li
cp
f
47.8467 382.102 mo
47.8467 382.102 47.0105 386.049 46.1746 389.999 cv
45.9659 390.987 45.7559 391.97 45.562 392.894 cv
45.5115 393.126 45.4644 393.353 45.414 393.577 cv
45.3713 393.804 45.3414 394.018 45.2944 394.232 cv
45.2079 394.653 45.1252 395.058 45.0496 395.429 cv
44.7478 396.91 44.5455 397.896 44.5455 397.896 cv
44.2969 399.143 li
43.8385 401.375 41.6658 402.815 39.4352 402.365 cv
37.2045 401.908 35.7631 399.736 36.2179 397.506 cv
36.243 397.376 36.2755 397.246 36.315 397.122 cv
36.315 397.122 36.3876 396.878 36.5172 396.453 cv
36.6579 396.024 36.82 395.408 37.0327 394.677 cv
37.1368 394.304 37.2484 393.906 37.3671 393.487 cv
37.3961 393.383 37.4326 393.274 37.4541 393.164 cv
37.4757 393.054 37.4682 392.942 37.4717 392.831 cv
37.4717 392.603 37.4757 392.37 37.4757 392.135 cv
37.4787 391.191 37.4823 390.186 37.4893 389.181 cv
37.5077 385.153 37.5297 381.128 37.5297 381.128 cv
37.5332 380.994 li
37.5332 380.54 37.5943 380.1 37.7099 379.684 cv
39.9691 377.179 li
40.8906 376.159 li
41.0207 376.107 li
41.0893 376.01 41.1513 375.913 41.2088 375.806 cv
42.1844 374.124 42.4411 371.279 42.4411 371.279 cv
46.7037 374.016 li
45.5897 373.719 45.3445 375.639 45.1907 377.881 cv
45.1907 377.881 47.4249 379.676 47.7848 381.418 cv
47.8393 381.679 47.8635 381.913 47.8467 382.102 cv
cp
1 .854902 .729412 rgb
f
47.8467 382.102 mo
47.8467 382.102 47.0105 386.049 46.1746 389.999 cv
45.9659 390.987 45.7559 391.97 45.562 392.894 cv
45.5115 393.126 45.4644 393.353 45.414 393.577 cv
45.3713 393.804 45.3414 394.018 45.2944 394.232 cv
45.2079 394.653 45.1252 395.058 45.0496 395.429 cv
44.7478 396.91 44.5455 397.896 44.5455 397.896 cv
44.2969 399.143 li
43.8385 401.375 41.6658 402.815 39.4352 402.365 cv
37.2045 401.908 35.7631 399.736 36.2179 397.506 cv
36.243 397.376 36.2755 397.246 36.315 397.122 cv
36.315 397.122 36.3876 396.878 36.5172 396.453 cv
36.6579 396.024 36.82 395.408 37.0327 394.677 cv
37.1368 394.304 37.2484 393.906 37.3671 393.487 cv
37.3961 393.383 37.4326 393.274 37.4541 393.164 cv
37.4757 393.054 37.4682 392.942 37.4717 392.831 cv
37.4717 392.603 37.4757 392.37 37.4757 392.135 cv
37.4787 391.191 37.4823 390.186 37.4893 389.181 cv
37.5077 385.153 37.5297 381.128 37.5297 381.128 cv
37.5332 380.994 li
37.5332 380.54 37.5943 380.1 37.7099 379.684 cv
39.9691 377.179 li
41.6079 377.854 li
41.6079 377.854 45.6332 382.975 47.7848 381.418 cv
47.8393 381.679 47.8635 381.913 47.8467 382.102 cv
cp
1 1 1 rgb
f
54.6961 421.703 mo
55.0283 422.022 li
54.8982 421.918 54.7932 421.81 54.6961 421.703 cv
cp
60.336 422.71 mo
54.0835 420.699 li
54.0373 420.581 53.9969 420.465 53.9653 420.346 cv
53.9213 420.209 53.8897 420.073 53.8606 419.935 cv
53.6265 418.824 li
53.4239 417.702 li
53.1074 415.445 li
53.0138 414.689 52.9312 413.934 52.8301 413.179 cv
52.5195 410.924 li
52.164 408.673 li
51.4423 404.178 li
51.3672 403.714 51.1001 403.279 50.6742 403 cv
50.4233 402.835 li
40.8801 396.639 li
40.6973 396.524 40.4877 396.412 40.2789 396.335 cv
38.6464 395.715 36.8226 396.535 36.2039 398.168 cv
35.5838 399.799 36.4047 401.627 38.0377 402.247 cv
47.4644 405.821 li
47.446 405.929 47.4249 406.041 47.4108 406.15 cv
47.3634 406.545 47.3199 406.939 47.3053 407.329 cv
47.2908 407.716 47.2908 408.106 47.3053 408.488 cv
47.3159 408.873 47.3489 409.255 47.3818 409.635 cv
47.4275 410.012 47.467 410.39 47.537 410.766 cv
47.5902 411.14 47.6771 411.507 47.7483 411.882 cv
47.9153 412.623 48.1236 413.352 48.3864 414.074 cv
48.5126 414.432 48.6707 414.791 48.8158 415.147 cv
48.9591 415.503 49.133 415.856 49.2908 416.213 cv
50.2795 418.337 li
50.7221 419.406 li
50.8562 419.769 50.9884 420.126 51.1071 420.488 cv
51.1791 420.714 li
51.2661 421.004 51.3342 421.298 51.3567 421.597 cv
51.3848 421.978 51.3782 422.369 51.2371 422.782 cv
51.1998 422.89 51.1791 423.009 51.1756 423.129 cv
51.165 423.763 51.6696 424.285 52.3072 424.3 cv
52.8161 424.309 li
60.0473 424.444 li
60.4292 424.45 60.7856 424.21 60.9091 423.828 cv
61.0594 423.358 60.804 422.862 60.336 422.71 cv
cp
.941176 .745098 .572549 rgb
f
41.211 382.718 mo
41.0937 382.809 li
32.5792 389.047 li
31.9223 389.523 li
29.5655 399.108 li
29.5382 399.236 29.4934 399.351 29.421 399.451 cv
29.3844 399.496 li
27.1626 402.835 li
26.7662 403.418 25.983 403.573 25.3969 403.185 cv
24.8132 402.798 24.6591 402.008 25.047 401.43 cv
25.2268 401.214 li
27.9632 398.577 li
29.1327 388.38 li
29.1691 388.058 29.3313 387.769 29.5655 387.57 cv
29.6815 387.471 li
30.9067 386.427 li
38.6995 379.775 li
39.5099 379.082 40.7342 379.182 41.4268 380.001 cv
42.1193 380.81 42.0214 382.027 41.211 382.718 cv
cp
1 .792157 .619608 rgb
f
41.211 382.718 mo
41.0937 382.809 li
32.5792 389.047 li
30.9067 386.427 li
38.6995 379.775 li
39.5099 379.082 40.7342 379.182 41.4268 380.001 cv
42.1193 380.81 42.0214 382.027 41.211 382.718 cv
cp
1 1 1 rgb
f
49.1269 368.836 mo
49.1967 369.42 49.1414 370.977 49.1102 371.206 cv
48.8228 373.342 47.896 374.711 47.896 374.711 cv
47.896 374.711 44.0688 374.461 42.2437 373.428 cv
40.8502 372.637 39.7595 371.492 39.578 370.001 cv
39.1579 366.556 39.2647 363.719 43.5937 363.187 cv
46.5499 362.826 47.8521 363.984 48.5165 365.852 cv
48.8228 366.721 48.9928 367.742 49.1269 368.836 cv
cp
1 .854902 .729412 rgb
f
48.5723 365.639 mo
44.3359 364.523 44.9793 371.818 43.5076 374.33 cv
42.565 375.94 40.9772 377.679 39.2242 378.347 cv
37.1487 379.14 35.6748 378.043 33.7961 377.353 cv
35.0428 376.059 36.3054 374.661 36.6653 372.897 cv
37.0745 370.889 36.5682 369 37.5565 367.127 cv
38.6754 365.01 41.0185 362.445 43.3885 361.778 cv
44.775 361.386 45.5313 361.654 46.6492 362.464 cv
47.5528 363.117 48.6325 364.588 48.7199 365.679 cv
48.5723 365.639 li
cp
.129412 .0980392 .0705882 rgb
f
27.2166 429.906 mo
51.398 429.906 li
51.398 424.189 li
63.3661 424.189 li
63.3661 415.822 li
74.9777 415.822 li
74.9777 406.85 li
74.9777 406.85 85.0039 407.299 85.0039 406.85 cv
85.0039 406.401 85.0039 433.6 85.0039 433.6 cv
26.2239 433.6 li
27.2166 429.906 li
cp
f
37.0327 394.677 mo
37.0327 394.677 35.4181 396.129 35.4181 399.678 cv
35.4181 401.961 36.1341 409.302 36.1341 409.302 cv
48.4748 401.333 li
44.7987 396.657 li
45.0496 395.429 li
37.4541 393.164 li
37.0327 394.677 li
cp
.2 .2 .2 rgb
f
39.771 429.546 mo
39.6624 429.925 39.3275 430.174 38.9562 430.188 cv
32.3908 430.469 li
31.8001 430.494 li
30.9414 430.534 30.2185 429.867 30.1821 429.01 cv
30.1565 428.421 30.4638 427.897 30.9313 427.61 cv
31.2588 427.414 31.5009 427.167 31.703 426.901 cv
32.5063 427.759 33.18 428.473 34.7981 428.386 cv
35.5913 428.343 36.3015 428.239 36.8091 427.769 cv
39.1618 428.447 li
39.6333 428.581 39.9085 429.075 39.771 429.546 cv
cp
1 1 1 rgb
f
60.9091 423.828 mo
60.7856 424.21 60.4292 424.45 60.0473 424.444 cv
52.8161 424.309 li
52.3072 424.3 li
51.6696 424.285 51.165 423.763 51.1756 423.129 cv
51.1791 423.009 51.1998 422.89 51.2371 422.782 cv
51.3369 422.491 51.3707 422.217 51.3707 421.944 cv
52.1275 422.263 52.9207 422.462 53.4168 422.528 cv
54.4408 422.665 55.8461 422.328 56.9518 421.622 cv
60.336 422.71 li
60.804 422.862 61.0594 423.358 60.9091 423.828 cv
cp
f
58.6827 264.004 mo
69.8062 266.488 li
69.9548 266.522 li
70.2769 266.593 70.6003 266.532 70.8644 266.378 cv
79.5735 261.254 li
79.1539 261.342 li
82.9626 261.982 li
83.6577 262.101 84.3156 261.631 84.4326 260.935 cv
84.5499 260.241 84.0815 259.582 83.3862 259.467 cv
83.2908 259.45 83.1911 259.445 83.0988 259.452 cv
79.244 259.679 li
79.1846 259.681 li
79.0589 259.691 78.9345 259.721 78.8251 259.766 cv
69.5153 263.695 li
70.574 263.586 li
59.6755 260.248 li
58.6485 259.934 57.5613 260.511 57.2463 261.537 cv
56.9329 262.565 57.5103 263.651 58.5365 263.968 cv
58.6827 264.004 li
cp
.968627 .733333 .533333 rgb
f
22.4798 270.766 mo
22.5549 271.704 li
22.6239 272.576 23.291 273.262 24.1198 273.396 cv
41.6632 276.176 li
43.3925 276.445 45.0153 275.269 45.287 273.54 cv
45.562 271.813 44.3808 270.188 42.6524 269.919 cv
42.5162 269.897 42.3602 269.882 42.2213 269.878 cv
26.989 269.574 li
27.3551 268.51 li
27.7576 267.342 li
27.9821 266.686 li
28.0182 266.574 li
28.0332 266.53 li
28.1162 266.307 li
28.2897 265.852 li
28.4058 265.556 28.5174 265.257 28.6233 264.951 cv
28.8325 264.343 29.0544 263.738 29.2601 263.129 cv
29.5615 262.21 li
29.6666 261.905 29.7602 261.596 29.8696 261.292 cv
30.1948 260.386 li
30.3077 260.087 30.4053 259.778 30.5323 259.482 cv
30.6558 259.184 30.7674 258.884 30.9015 258.595 cv
31.231 257.851 li
31.4279 257.593 31.6516 257.355 31.9196 257.149 cv
32.1473 256.986 li
32.3952 256.834 li
32.4853 256.79 32.5718 256.742 32.6685 256.703 cv
32.7643 256.662 32.8689 256.626 32.9769 256.599 cv
33.2376 256.526 33.401 256.275 33.3716 256.015 cv
33.3176 255.548 li
32.4518 248.015 li
32.3978 247.527 31.9522 247.175 31.4631 247.235 cv
31.0614 247.281 30.7529 247.587 30.687 247.972 cv
29.4341 255.446 li
29.7747 254.398 li
29.7681 254.5 29.7531 254.598 29.7351 254.69 cv
29.7171 254.783 29.6877 254.869 29.6626 254.96 cv
29.5681 255.215 li
29.4556 255.457 li
29.3827 255.621 29.2856 255.765 29.192 255.913 cv
29.0905 256.058 28.9819 256.195 28.8694 256.328 cv
28.7204 256.599 li
28.5508 256.873 28.3807 257.149 28.1952 257.42 cv
28.0182 257.691 27.8152 257.953 27.624 258.216 cv
27.4341 258.489 27.21 258.739 27.0074 259 cv
26.3768 259.778 li
25.7533 260.557 li
25.5476 260.818 25.3656 261.087 25.1705 261.35 cv
24.9789 261.618 24.8045 261.893 24.6414 262.173 cv
24.4722 262.447 24.3233 262.734 24.1783 263.021 cv
24.0324 263.307 23.9027 263.599 23.7757 263.894 cv
23.7111 264.043 23.6562 264.191 23.5986 264.343 cv
23.5129 264.566 li
23.4356 264.751 li
23.4171 264.811 li
23.382 264.926 li
23.291 265.233 23.1859 265.537 23.1095 265.852 cv
23.0225 266.16 22.9434 266.476 22.874 266.792 cv
22.769 267.271 22.6749 267.752 22.6063 268.245 cv
22.5844 268.406 22.5624 268.567 22.5452 268.729 cv
22.5189 269.063 22.4798 269.39 22.4684 269.73 cv
22.4574 270.071 22.4503 270.411 22.4798 270.766 cv
cp
f
22.4798 270.766 mo
22.5549 271.704 li
22.6239 272.576 23.291 273.262 24.1198 273.396 cv
41.6632 276.176 li
43.3925 276.445 45.0153 275.269 45.287 273.54 cv
45.562 271.813 44.3808 270.188 42.6524 269.919 cv
42.5162 269.897 42.3602 269.882 42.2213 269.878 cv
26.989 269.574 li
27.3551 268.51 li
27.7576 267.342 li
22.6063 268.245 li
22.5844 268.406 22.5624 268.567 22.5452 268.729 cv
22.5189 269.063 22.4798 269.39 22.4684 269.73 cv
22.4574 270.071 22.4503 270.411 22.4798 270.766 cv
cp
.890196 .890196 .890196 rgb
f
38.1454 274.1 mo
38.2039 274.246 38.2689 274.392 38.3458 274.533 cv
39.5011 276.804 42.3333 277.86 44.5324 276.334 cv
44.7315 276.184 li
45.7382 275.399 li
45.7382 275.399 46.3469 274.924 47.2996 274.186 cv
47.4407 274.08 47.5862 273.963 47.7422 273.845 cv
48.0419 273.609 48.3679 273.356 48.7094 273.091 cv
48.8865 272.961 49.0495 272.811 49.231 272.671 cv
49.4156 272.533 49.6002 272.393 49.7891 272.247 cv
50.5454 271.672 51.3505 271.054 52.1542 270.44 cv
53.2665 269.588 54.5014 269.063 55.676 268.65 cv
57.9141 267.857 59.9317 267.465 60.4503 265.998 cv
60.344 265.654 60.2763 265.27 60.2323 264.872 cv
59.9792 262.691 60.4819 259.988 60.4819 259.988 cv
61.3265 258.735 62.3733 257.64 63.0294 258.601 cv
61.5691 253.717 li
61.5691 253.717 59.6781 255.559 57.8952 256.273 cv
57.6646 256.363 li
57.5521 256.405 57.4391 256.443 57.3275 256.471 cv
57.1896 256.425 li
53.7438 257.309 li
53.3856 257.551 52.8345 258.199 52.5353 258.543 cv
52.3208 259.189 51.7882 259.699 51.2332 260.199 cv
50.676 260.702 50.0958 261.195 49.7812 261.808 cv
49.4117 262.532 49.0095 263.233 48.5815 263.912 cv
47.5862 265.488 47.2851 265.839 45.5247 265.835 cv
44.7095 265.835 43.9457 265.93 43.2246 266.147 cv
42.4059 266.393 41.6382 266.788 40.9126 267.371 cv
38.8841 268.993 37.0907 271.392 38.1454 274.1 cv
cp
1 .854902 .729412 rgb
f
49.7812 261.808 mo
51.3356 264.003 54.1362 267.035 55.676 268.65 cv
57.9141 267.857 59.9317 267.465 60.4503 265.998 cv
60.344 265.654 60.2763 265.27 60.2323 264.872 cv
55.1417 262.647 59.3161 257.305 59.3161 257.305 cv
57.8952 256.273 li
57.6646 256.363 li
57.5521 256.405 57.4391 256.443 57.3275 256.471 cv
57.1896 256.425 li
53.7438 257.309 li
53.3856 257.551 52.8345 258.199 52.5353 258.543 cv
52.3208 259.189 51.7882 259.699 51.2332 260.199 cv
50.676 260.702 50.0958 261.195 49.7812 261.808 cv
cp
.2 .2 .2 rgb
f
38.2438 273.519 mo
38.2399 273.682 38.2553 273.854 38.2719 274.011 cv
38.3458 274.533 li
40.3914 289.383 li
39.4185 294.089 li
39.2031 295.128 li
39.1777 295.243 li
39.142 295.418 39.142 295.593 39.1671 295.761 cv
39.3047 296.601 39.4822 297.435 39.6417 298.271 cv
39.8008 299.109 39.9889 299.942 40.1669 300.773 cv
40.2614 301.191 40.3339 301.612 40.4134 302.029 cv
40.6521 303.28 li
40.8445 304.546 li
40.99 305.695 li
40.9716 306.024 40.9126 306.357 40.808 306.69 cv
40.7114 306.952 li
40.5905 307.213 li
40.435 307.473 li
40.2359 307.734 li
39.8223 308.214 39.8777 308.943 40.355 309.357 cv
40.5655 309.538 40.819 309.629 41.0726 309.636 cv
41.7788 309.657 li
47.7207 309.828 li
48.2159 309.841 48.6294 309.451 48.6435 308.954 cv
48.6549 308.576 48.4225 308.237 48.0853 308.101 cv
43.7673 306.339 li
43.7647 306.19 li
43.7647 306.015 43.7783 305.842 43.7972 305.665 cv
43.7827 305.441 li
43.7757 305.01 43.7757 304.582 43.7893 304.152 cv
43.8623 302.854 li
44.1233 300.246 li
44.1702 299.811 44.2063 299.376 44.2243 298.945 cv
44.2498 298.515 44.2643 298.083 44.2568 297.655 cv
44.2498 297.442 44.2538 297.226 44.2353 297.015 cv
44.2204 296.802 44.2173 296.586 44.1954 296.377 cv
44.1738 296.138 44.1475 295.903 44.1193 295.668 cv
44.1443 295.548 li
44.1954 295.29 44.2353 295.029 44.2784 294.772 cv
44.3114 294.543 44.3408 294.319 44.369 294.089 cv
44.4015 293.794 44.4304 293.501 44.4454 293.201 cv
44.4638 292.938 44.4708 292.672 44.474 292.402 cv
44.4783 292.27 44.4708 292.135 44.4708 292.001 cv
44.4708 291.864 44.4638 291.729 44.4524 291.591 cv
44.4304 291.317 44.4304 291.049 44.3878 290.771 cv
44.3553 290.493 44.3114 290.213 44.2432 289.93 cv
44.2969 289.347 li
44.5324 276.334 li
44.5786 273.635 li
44.612 271.887 43.2211 270.44 41.4711 270.406 cv
39.7222 270.377 38.2768 271.77 38.2438 273.519 cv
cp
.941176 .745098 .572549 rgb
f
55.7275 256.603 mo
53.742 256.56 51.7565 256.55 49.7711 256.543 cv
48.7784 256.534 47.7848 256.548 46.7916 256.55 cv
43.8108 256.562 li
44.1954 256.629 li
41.1341 255.831 li
40.1128 255.566 39.0951 255.293 38.0711 255.04 cv
36.0254 254.521 33.9794 254.009 31.9236 253.525 cv
32.3271 253.801 li
30.1935 250.429 li
29.8173 249.834 29.0294 249.656 28.4344 250.033 cv
27.8389 250.409 27.6614 251.198 28.0388 251.791 cv
28.2115 252.01 li
31.0263 254.838 li
31.0592 254.874 li
31.1669 254.98 31.2969 255.063 31.4306 255.115 cv
33.398 255.88 35.3768 256.613 37.3565 257.342 cv
38.3445 257.712 39.339 258.064 40.3303 258.424 cv
43.3063 259.496 li
43.5498 259.551 li
43.6891 259.563 li
46.6598 259.817 li
47.6481 259.899 48.6382 259.991 49.6283 260.063 cv
51.6085 260.217 53.5882 260.368 55.5697 260.484 cv
56.642 260.55 57.5613 259.731 57.6254 258.659 cv
57.6879 257.588 56.871 256.669 55.8 256.605 cv
55.7275 256.603 li
cp
1 .792157 .619608 rgb
f
69.0126 254.946 mo
68.9124 255.531 68.4144 257.015 68.3191 257.228 cv
67.4315 259.204 65.2751 260.51 65.2751 260.51 cv
65.2751 260.51 62.5289 258.923 61.0664 257.404 cv
59.9489 256.244 59.2255 254.826 59.4765 253.338 cv
60.0565 249.898 60.9714 247.195 65.2948 247.92 cv
68.2484 248.418 69.1713 249.908 69.2766 251.897 cv
69.3254 252.822 69.1958 253.854 69.0126 254.946 cv
cp
1 .854902 .729412 rgb
f
69.2766 252.711 mo
68.6457 253.256 66.2274 251.87 65.4565 252.186 cv
63.0277 253.182 62.5671 255.874 61.3801 256.713 cv
59.6083 257.971 56.032 257.459 55.4036 253.001 cv
57.8048 253.667 57.574 253.631 59.2426 250.982 cv
64.357 242.858 70.3722 248.473 69.8124 252.457 cv
69.2766 252.711 li
cp
.129412 .0980392 .0705882 rgb
f
38.1454 274.1 mo
38.2039 274.246 38.2689 274.392 38.3458 274.533 cv
40.3914 289.383 li
39.4185 294.089 li
44.369 294.089 li
44.4015 293.794 44.4304 293.501 44.4454 293.201 cv
44.4638 292.938 44.4708 292.672 44.474 292.402 cv
44.4783 292.27 44.4708 292.135 44.4708 292.001 cv
44.4708 291.864 44.4638 291.729 44.4524 291.591 cv
44.4304 291.317 44.4304 291.049 44.3878 290.771 cv
44.3553 290.493 44.3114 290.213 44.2432 289.93 cv
44.2969 289.347 li
44.5324 276.334 li
44.7315 276.184 li
45.7382 275.399 li
45.7382 275.399 46.3469 274.924 47.2996 274.186 cv
45.7057 271.866 43.6702 267.184 43.2246 266.147 cv
42.4059 266.393 41.6382 266.788 40.9126 267.371 cv
38.8841 268.993 37.0907 271.392 38.1454 274.1 cv
cp
1 1 1 rgb
f
155.129 371.707 mo
117.068 332.851 li
117.445 332.483 li
155.505 371.337 li
155.129 371.707 li
cp
f
92.7844 310.502 mo
101.815 324.413 li
100.534 323.548 li
114.587 327.869 li
114.761 327.925 114.921 328.006 115.061 328.107 cv
115.136 328.164 li
119.647 331.512 li
120.471 332.122 120.645 333.288 120.032 334.109 cv
119.42 334.934 118.259 335.104 117.436 334.494 cv
117.323 334.411 117.217 334.312 117.128 334.208 cv
113.483 329.934 li
114.029 330.227 li
99.5309 327.798 li
99.0545 327.721 98.655 327.464 98.3826 327.113 cv
98.2472 326.933 li
88.1635 313.762 li
87.2138 312.523 87.4498 310.746 88.6896 309.795 cv
89.931 308.847 91.7086 309.082 92.6569 310.322 cv
92.7844 310.502 li
cp
.968627 .733333 .533333 rgb
f
93.1983 336.837 mo
93.1763 337.036 93.1338 337.259 93.0906 337.452 cv
92.4855 339.938 li
90.0153 350.03 li
86.904 362.736 li
86.824 363.04 li
86.6979 363.567 86.4088 364.013 86.0238 364.336 cv
81.0883 368.507 li
80.4673 369.028 li
80.1606 369.29 li
80.0841 369.355 li
79.9528 369.468 li
79.9295 369.484 li
79.8926 369.512 li
79.7295 369.634 li
78.4327 370.599 li
77.5586 371.233 76.6722 371.849 75.7925 372.476 cv
74.9109 373.093 74.0109 373.695 73.1193 374.305 cv
70.4891 376.189 li
69.2129 377.179 li
67.9689 378.21 li
67.9153 378.251 li
67.9153 378.257 li
67.896 378.275 li
67.7513 378.417 li
67.6565 378.511 67.5729 378.618 67.4841 378.716 cv
67.3822 378.845 li
68.8592 382.724 li
69.9719 385.643 li
70.2254 386.318 69.8888 387.072 69.2129 387.329 cv
68.6905 387.525 68.1227 387.367 67.7676 386.974 cv
62.0551 380.478 li
61.5841 379.945 li
60.9121 379.181 60.9838 378.018 61.7506 377.346 cv
61.9928 377.135 62.2757 377.001 62.5658 376.93 cv
63.0286 376.826 63.4196 376.645 63.7734 376.428 cv
63.8838 376.359 63.9888 376.286 64.0964 376.214 cv
64.3219 376.059 64.5266 375.88 64.7208 375.695 cv
64.8158 375.601 64.9164 375.511 65.0065 375.413 cv
65.1419 375.265 li
65.1603 375.243 li
65.1652 375.235 li
65.2746 375.144 li
65.3176 375.099 li
65.3849 375.027 li
65.7585 374.632 66.1275 374.233 66.4879 373.823 cv
67.5303 372.547 li
69.5245 369.87 li
69.8612 369.433 70.1846 368.976 70.5362 368.561 cv
70.8903 368.145 71.2261 367.7 71.5992 367.306 cv
71.9649 366.899 72.3397 366.509 72.733 366.14 cv
73.1193 365.762 73.5297 365.411 73.9402 365.066 cv
74.3524 364.723 74.7729 364.379 75.2115 364.069 cv
75.3697 363.948 li
75.2638 364.042 li
75.324 363.998 li
75.6408 363.746 li
75.8548 363.585 76.0605 363.409 76.2815 363.256 cv
76.7184 362.935 77.1675 362.625 77.6197 362.329 cv
78.0859 362.032 78.5544 361.756 79.0422 361.487 cv
79.5304 361.222 80.046 360.985 80.5574 360.752 cv
80.8571 360.625 81.1626 360.504 81.4733 360.39 cv
83.308 342.794 li
83.7461 338.595 li
84.0322 335.876 li
84.2937 333.347 86.5617 331.508 89.0908 331.771 cv
91.622 332.036 93.4598 334.3 93.1983 336.837 cv
cp
1 .792157 .619608 rgb
f
95.3649 327.001 mo
95.1948 328.467 95.0269 329.929 94.8673 331.308 cv
94.8269 331.649 94.79 331.987 94.7483 332.318 cv
94.7166 332.652 94.7065 332.972 94.6626 333.289 cv
94.5954 333.909 94.5329 334.496 94.4754 335.045 cv
94.4754 335.067 li
94.2372 337.264 94.0772 338.727 94.0772 338.727 cv
94.0473 339.041 li
93.883 340.577 li
93.5244 343.889 90.5577 346.288 87.2451 345.934 cv
83.9373 345.576 81.5383 342.609 81.892 339.299 cv
81.9123 339.106 81.9443 338.914 81.9813 338.727 cv
81.9813 338.727 82.0542 338.359 82.1861 337.723 cv
82.3271 337.079 82.4809 336.161 82.6914 335.067 cv
82.7934 334.511 82.9033 333.914 83.0202 333.289 cv
83.0457 333.13 83.0826 332.972 83.0984 332.813 cv
83.1138 332.646 83.0882 332.483 83.0742 332.318 cv
83.0457 331.987 83.0202 331.649 82.9854 331.308 cv
82.8664 329.929 82.7327 328.467 82.6013 327.001 cv
82.4765 325.538 82.3443 324.081 82.2173 322.709 cv
82.1952 322.475 82.1746 322.249 82.1592 322.029 cv
82.1557 322.026 li
81.8217 318.218 81.5594 315.271 81.5594 315.271 cv
81.5431 315.071 li
81.4838 314.412 81.5115 313.765 81.6205 313.141 cv
84.0621 309.869 li
84.0621 309.863 li
85.7728 307.571 li
85.9565 307.477 li
86.0388 307.329 86.1174 307.175 86.1882 307.013 cv
87.3769 304.43 87.3576 300.247 87.3576 300.247 cv
93.9458 303.651 li
92.2821 303.368 92.3713 305.572 92.8292 307.724 cv
92.8292 307.724 95.1635 310.374 96.8454 312.809 cv
97.6847 314.017 98.3592 315.179 98.5109 315.93 cv
99.4394 320.48 96.039 321.133 95.3649 327.001 cv
cp
1 .854902 .729412 rgb
f
119.021 384.887 mo
118.922 385.439 118.492 385.845 117.968 385.941 cv
109.456 387.479 li
108.755 387.606 li
107.758 387.792 106.798 387.125 106.614 386.124 cv
106.56 385.811 106.588 385.491 106.683 385.213 cv
106.824 384.786 106.879 384.379 106.879 383.989 cv
106.879 383.815 106.866 383.648 106.856 383.478 cv
106.814 382.919 106.67 382.383 106.491 381.855 cv
106.318 381.321 106.122 380.795 105.93 380.274 cv
105.282 378.701 li
103.836 375.6 li
103.606 375.083 103.35 374.565 103.141 374.042 cv
102.927 373.52 102.698 372.998 102.513 372.47 cv
102.129 371.417 101.822 370.346 101.578 369.265 cv
101.473 368.719 101.349 368.182 101.268 367.633 cv
101.169 367.084 101.112 366.531 101.041 365.978 cv
100.994 365.422 100.948 364.866 100.933 364.302 cv
100.91 363.743 100.91 363.172 100.933 362.605 cv
100.95 362.034 101.015 361.455 101.084 360.873 cv
101.141 360.462 101.212 360.052 101.306 359.637 cv
90.0153 348.378 li
84.3513 342.73 li
83.885 342.261 83.5361 341.719 83.308 341.138 cv
82.7784 339.775 82.9239 338.198 83.7461 336.941 cv
83.9197 336.685 84.1153 336.443 84.342 336.217 cv
86.1416 334.414 89.053 334.408 90.8582 336.205 cv
91.0112 336.353 91.1628 336.531 91.2897 336.695 cv
92.4855 338.281 li
106.346 356.697 li
106.541 356.964 li
106.777 357.274 106.926 357.631 106.983 357.997 cv
108.037 364.577 li
108.559 367.86 li
109.01 371.164 li
109.16 372.265 109.281 373.375 109.419 374.481 cv
109.883 377.78 li
110.175 379.419 li
110.526 381.044 li
110.592 381.395 110.683 381.738 110.815 382.075 cv
116.808 383.157 li
117.968 383.369 li
118.683 383.498 119.148 384.181 119.021 384.887 cv
cp
.968627 .733333 .533333 rgb
f
98.514 296.673 mo
98.5109 297.537 98.1531 299.786 98.0688 300.114 cv
97.2707 303.162 95.6817 304.984 95.6817 304.984 cv
95.6817 304.984 90.1678 303.943 87.703 302.116 cv
85.819 300.723 84.4405 298.865 84.4405 296.666 cv
84.4449 291.588 85.1053 287.491 91.4832 287.491 cv
95.8412 287.491 97.5252 289.406 98.158 292.232 cv
98.4498 293.548 98.514 295.06 98.514 296.673 cv
cp
1 .854902 .729412 rgb
f
82.2173 322.709 mo
82.2853 322.475 82.2661 322.249 82.1592 322.029 cv
82.1557 322.026 li
81.8217 318.218 81.5594 315.271 81.5594 315.271 cv
81.5431 315.071 li
81.4838 314.412 81.5115 313.765 81.6205 313.141 cv
84.0621 309.869 li
84.0621 309.863 li
85.7728 307.571 li
88.3164 310.357 94.0772 319.609 96.8454 312.809 cv
97.6847 314.017 98.3592 315.179 98.5109 315.93 cv
99.4394 320.48 96.039 321.133 95.3649 327.001 cv
95.1948 328.467 95.0269 329.929 94.8673 331.308 cv
94.8269 331.649 94.79 331.987 94.7483 332.318 cv
94.7166 332.652 94.7065 332.972 94.6626 333.289 cv
94.5954 333.909 94.5329 334.496 94.4754 335.045 cv
105.924 354.106 li
77.1741 357.764 li
81.5176 333.486 li
81.5176 333.486 81.8169 324.016 82.2173 322.709 cv
cp
1 1 1 rgb
f
86.6298 315.834 mo
73.662 327.346 li
74.3269 325.95 li
72.0782 341.153 li
72.0527 341.336 71.9938 341.507 71.9103 341.665 cv
71.869 341.741 li
69.0789 346.906 li
68.592 347.808 67.467 348.146 66.5644 347.66 cv
65.6613 347.175 65.3269 346.046 65.8129 345.144 cv
65.8766 345.027 65.9583 344.912 66.0405 344.814 cv
69.8748 340.364 li
69.6643 340.95 li
69.9754 325.583 li
69.9859 325.1 70.1811 324.664 70.4914 324.341 cv
70.6443 324.187 li
82.7213 311.746 li
83.8098 310.624 85.6002 310.598 86.7213 311.688 cv
87.8431 312.777 87.8708 314.565 86.7823 315.688 cv
86.6298 315.834 li
cp
1 .792157 .619608 rgb
f
98.1048 292.172 mo
98.1 292.187 94.0693 292.015 93.5499 292.201 cv
92.3967 292.612 92.0324 293.255 91.8426 294.408 cv
91.6426 295.623 91.7885 296.778 91.2876 297.95 cv
90.6108 299.543 89.2797 300.924 88.2707 302.314 cv
87.1501 303.855 85.9847 305.465 84.7341 306.897 cv
82.3412 309.636 77.8649 308.621 74.8591 307.416 cv
79.0629 307.036 79.3463 303.141 79.9536 299.878 cv
80.3944 297.52 81.2966 295.018 82.1952 292.8 cv
83.4201 289.777 84.462 287.91 87.2367 286.231 cv
90.5752 284.21 99.6178 287.37 98.1048 292.172 cv
cp
.129412 .0980392 .0705882 rgb
f
69.9719 385.643 mo
70.2254 386.318 69.8888 387.072 69.2129 387.329 cv
68.6926 387.525 68.1227 387.367 67.769 386.974 cv
62.0551 380.478 li
61.5867 379.945 li
60.9121 379.181 60.9838 378.018 61.7506 377.346 cv
61.9928 377.135 62.2757 377.001 62.5658 376.93 cv
63.0286 376.826 63.4196 376.645 63.7734 376.428 cv
64.248 378.675 65.5123 381.681 68.8592 382.724 cv
69.9719 385.643 li
cp
1 1 1 rgb
f
119.021 384.887 mo
118.922 385.439 118.492 385.845 117.968 385.941 cv
109.456 387.479 li
108.755 387.606 li
107.758 387.792 106.798 387.125 106.614 386.124 cv
106.56 385.811 106.588 385.491 106.683 385.213 cv
106.824 384.786 106.879 384.379 106.879 383.989 cv
109.267 384.239 113.82 384.481 116.808 383.157 cv
117.968 383.369 li
118.683 383.498 119.148 384.181 119.021 384.887 cv
cp
f
154.072 379.646 mo
152.886 384.757 li
149.459 386.027 li
149.459 386.027 149.855 383.941 150.909 383.36 cv
151.964 382.78 150.647 379.646 150.647 379.646 cv
154.072 379.646 li
cp
.890196 .890196 .890196 rgb
f
142.225 380.332 mo
140.407 382.707 li
144.606 384.69 li
142.507 385.342 li
136.955 383.891 li
135.899 380.332 li
142.225 380.332 li
cp
f
128.367 363.759 mo
126.594 365.203 130.077 374.225 133.109 373.803 cv
136.139 373.382 154.326 372.765 154.326 372.765 cv
154.326 372.765 158.28 367.846 158.676 367.054 cv
159.072 366.264 170.931 367.054 170.931 367.054 cv
170.931 367.054 169.482 370.573 164.08 371.12 cv
158.676 371.666 163.035 379.247 157.623 379.247 cv
154.459 379.247 161.18 384.667 161.18 384.667 cv
163.814 384.716 156.829 386.69 154.197 380.627 cv
154.855 380.3 137.986 382.078 136.93 381.025 cv
136.93 381.025 134.033 385.111 129.814 383.526 cv
129.024 383.131 125.468 387.298 125.468 387.298 cv
125.468 387.298 123.964 382.907 129.365 381.14 cv
130.287 380.693 131.358 380.168 130.606 379.247 cv
129.853 378.325 129.062 376.876 130.606 375.275 cv
132.15 373.673 122.04 366.66 128.367 363.759 cv
cp
1 1 1 rgb
f
155.318 369.886 mo
161.971 373.166 li
161.65 374.911 li
154.072 371.521 li
155.318 369.886 li
cp
.2 .2 .2 rgb
f
163.69 369.886 mo
158.021 369.886 li
160.856 361.292 li
163.69 369.886 li
cp
1 1 1 rgb
f
120.844 251.201 mo
120.185 252.659 119.132 254.041 117.685 255.347 cv
116.065 256.817 114.564 257.551 113.182 257.551 cv
112.447 257.551 112.08 257.221 112.08 256.563 cv
112.08 256.26 112.166 255.914 112.339 255.526 cv
115.466 248.527 li
115.482 248.414 li
115.482 248.306 115.422 248.204 115.304 248.106 cv
115.185 248.009 115.066 247.96 114.947 247.96 cv
112.145 247.96 li
111.886 247.96 111.756 247.809 111.756 247.507 cv
111.756 247.194 111.902 247.037 112.193 247.037 cv
116.13 247.037 li
117.426 247.037 118.074 247.328 118.074 247.912 cv
118.074 248.095 118.025 248.3 117.928 248.527 cv
114.558 256.093 li
114.51 256.271 li
114.51 256.368 114.569 256.417 114.688 256.417 cv
114.818 256.417 115.001 256.357 115.239 256.238 cv
116.092 255.828 116.675 255.266 116.989 254.554 cv
120.342 247.037 li
122.691 247.037 li
120.844 251.201 li
cp
f
125.267 249.483 mo
125.137 249.775 124.883 250.007 124.505 250.179 cv
124.192 250.32 123.879 250.39 123.566 250.39 cv
123.317 250.39 123.096 250.337 122.902 250.229 cv
122.707 250.12 122.61 249.969 122.61 249.775 cv
122.61 249.688 122.632 249.591 122.675 249.483 cv
122.804 249.202 123.058 248.975 123.436 248.803 cv
123.75 248.652 124.062 248.576 124.376 248.576 cv
124.624 248.576 124.846 248.63 125.04 248.738 cv
125.234 248.846 125.332 249.002 125.332 249.208 cv
125.332 249.294 125.31 249.386 125.267 249.483 cv
cp
125.089 255.137 mo
124.829 255.731 124.23 256.287 123.29 256.805 cv
122.405 257.302 121.584 257.551 120.828 257.551 cv
120.547 257.551 120.315 257.445 120.132 257.235 cv
119.948 257.024 119.856 256.779 119.856 256.498 cv
119.856 256.314 119.894 256.136 119.969 255.963 cv
122.092 251.216 li
123.873 252.204 li
122.367 255.591 li
122.324 255.699 122.302 255.785 122.302 255.85 cv
122.302 255.99 122.383 256.06 122.545 256.06 cv
122.869 256.06 123.266 255.888 123.736 255.541 cv
124.206 255.196 124.516 254.867 124.668 254.554 cv
125.105 255.12 li
125.089 255.137 li
cp
f
126.368 255.186 mo
127.437 252.788 li
127.454 252.69 li
127.454 252.561 127.362 252.496 127.178 252.496 cv
126.951 252.496 126.795 252.599 126.708 252.804 cv
125.623 255.234 li
125.547 255.396 125.51 255.536 125.51 255.655 cv
125.51 255.795 125.569 255.866 125.688 255.866 cv
125.936 255.866 126.163 255.639 126.368 255.186 cv
cp
124.667 258.798 mo
124.818 258.43 125.061 257.886 125.396 257.162 cv
125.018 257.422 124.737 257.669 124.554 257.908 cv
124.424 258.08 124.268 258.377 124.084 258.798 cv
124.068 258.863 li
124.068 258.982 124.149 259.041 124.311 259.041 cv
124.473 259.041 124.592 258.96 124.667 258.798 cv
cp
131.147 255.12 mo
130.942 255.585 130.513 256.044 129.859 256.498 cv
129.206 256.951 128.647 257.178 128.183 257.178 cv
128.021 257.178 127.88 257.145 127.761 257.08 cv
127.178 258.425 li
126.919 259.019 126.482 259.483 125.866 259.818 cv
125.315 260.121 124.732 260.273 124.117 260.273 cv
123.674 260.273 123.296 260.178 122.983 259.989 cv
122.669 259.8 122.513 259.527 122.513 259.17 cv
122.513 258.987 122.561 258.782 122.658 258.555 cv
123.004 257.777 123.657 257.27 124.619 257.032 cv
123.917 256.903 123.566 256.47 123.566 255.737 cv
123.566 255.315 123.685 254.84 123.922 254.311 cv
124.257 253.555 124.694 252.929 125.234 252.431 cv
125.871 251.838 126.547 251.541 127.259 251.541 cv
127.789 251.541 128.199 251.718 128.49 252.075 cv
128.636 251.751 li
130.127 251.751 li
128.523 255.331 li
128.415 255.558 128.361 255.731 128.361 255.85 cv
128.361 255.99 128.442 256.06 128.604 256.06 cv
128.917 256.06 129.311 255.888 129.786 255.541 cv
130.262 255.196 130.569 254.867 130.71 254.554 cv
131.147 255.12 li
cp
f
134.841 252.675 mo
134.905 252.534 134.938 252.389 134.938 252.237 cv
134.938 252.032 134.868 251.929 134.728 251.929 cv
134.501 251.929 134.387 252.037 134.387 252.254 cv
134.387 252.362 134.425 252.461 134.501 252.553 cv
134.576 252.645 134.662 252.69 134.76 252.69 cv
134.841 252.675 li
cp
132.184 256.173 mo
133.447 253.322 li
133.253 253.269 133.156 253.085 133.156 252.772 cv
133.156 252.664 133.172 252.577 133.204 252.513 cv
133.032 252.609 132.907 252.75 132.832 252.934 cv
131.39 256.173 li
131.347 256.271 131.325 256.362 131.325 256.449 cv
131.325 256.611 131.401 256.692 131.552 256.692 cv
131.811 256.692 132.022 256.52 132.184 256.173 cv
cp
137.757 252.885 mo
137.228 253.436 136.418 253.765 135.327 253.873 cv
135.24 254.068 135.111 254.365 134.938 254.765 cv
134.106 256.622 133.156 257.551 132.087 257.551 cv
130.256 257.551 li
129.619 257.551 129.3 257.254 129.3 256.659 cv
129.3 256.282 129.43 255.795 129.689 255.201 cv
130.337 253.776 li
130.596 253.193 130.958 252.69 131.422 252.269 cv
131.951 251.783 132.497 251.541 133.059 251.541 cv
133.723 251.541 li
134.068 251.238 134.49 251.087 134.986 251.087 cv
135.635 251.087 135.958 251.357 135.958 251.897 cv
135.958 252.167 135.861 252.47 135.667 252.804 cv
135.85 252.848 136.001 252.869 136.121 252.869 cv
136.38 252.869 136.763 252.718 137.271 252.415 cv
137.757 252.885 li
cp
f
143.038 255.137 mo
142.768 255.731 142.168 256.287 141.24 256.805 cv
140.354 257.302 139.533 257.551 138.778 257.551 cv
138.097 257.551 137.757 257.243 137.757 256.627 cv
137.757 256.422 137.805 256.206 137.903 255.979 cv
139.036 253.452 li
139.053 253.372 li
138.923 253.168 li
138.664 253.08 li
138.535 253.08 138.41 253.215 138.292 253.485 cv
137.773 254.641 136.919 255.536 135.732 256.173 cv
135.375 256.368 135.073 256.476 134.825 256.498 cv
137.222 251.136 li
140.689 253.095 li
140.937 253.236 141.061 253.468 141.061 253.793 cv
141.013 253.987 li
140.3 255.607 li
140.257 255.704 140.235 255.79 140.235 255.866 cv
140.235 256.006 140.317 256.077 140.478 256.077 cv
140.803 256.077 141.199 255.904 141.669 255.558 cv
142.139 255.213 142.449 254.878 142.601 254.554 cv
143.038 255.137 li
cp
f
146.829 252.675 mo
146.893 252.534 146.926 252.389 146.926 252.237 cv
146.926 252.032 146.856 251.929 146.715 251.929 cv
146.489 251.929 146.375 252.037 146.375 252.254 cv
146.375 252.362 146.413 252.461 146.489 252.553 cv
146.564 252.645 146.65 252.69 146.747 252.69 cv
146.829 252.675 li
cp
144.172 256.173 mo
145.435 253.322 li
145.241 253.269 145.144 253.085 145.144 252.772 cv
145.144 252.664 145.16 252.577 145.192 252.513 cv
145.019 252.609 144.895 252.75 144.82 252.934 cv
143.378 256.173 li
143.335 256.271 143.313 256.362 143.313 256.449 cv
143.313 256.611 143.389 256.692 143.54 256.692 cv
143.799 256.692 144.01 256.52 144.172 256.173 cv
cp
149.744 252.885 mo
149.215 253.436 148.405 253.765 147.315 253.873 cv
147.228 254.068 147.099 254.365 146.926 254.765 cv
146.094 256.622 145.144 257.551 144.075 257.551 cv
142.244 257.551 li
141.607 257.551 141.288 257.254 141.288 256.659 cv
141.288 256.282 141.418 255.795 141.677 255.201 cv
142.325 253.776 li
142.584 253.193 142.946 252.69 143.41 252.269 cv
143.939 251.783 144.485 251.541 145.047 251.541 cv
145.711 251.541 li
146.056 251.238 146.478 251.087 146.974 251.087 cv
147.622 251.087 147.946 251.357 147.946 251.897 cv
147.946 252.167 147.849 252.47 147.655 252.804 cv
147.838 252.848 147.989 252.869 148.108 252.869 cv
148.368 252.869 148.751 252.718 149.258 252.415 cv
149.744 252.885 li
cp
f
155.058 255.137 mo
154.788 255.731 154.189 256.287 153.26 256.805 cv
152.374 257.302 151.553 257.551 150.797 257.551 cv
150.452 257.551 150.252 257.389 150.198 257.065 cv
149.799 257.41 149.361 257.583 148.886 257.583 cv
147.73 257.583 147.153 257.194 147.153 256.417 cv
147.153 256.017 147.304 255.483 147.606 254.813 cv
148.967 251.751 li
151.089 251.751 li
149.242 255.883 li
149.167 256.055 149.129 256.211 149.129 256.352 cv
149.129 256.503 149.194 256.579 149.324 256.579 cv
149.55 256.579 149.75 256.374 149.923 255.963 cv
152.029 251.216 li
153.827 252.204 li
152.336 255.591 li
152.293 255.687 152.272 255.774 152.272 255.85 cv
152.272 255.99 152.353 256.06 152.515 256.06 cv
152.828 256.06 153.222 255.888 153.697 255.541 cv
154.172 255.196 154.48 254.867 154.621 254.554 cv
155.058 255.12 li
155.058 255.137 li
cp
f
158.088 250.795 mo
157.974 250.73 li
157.833 250.73 157.736 250.79 157.682 250.909 cv
157.634 251.151 li
157.65 251.346 li
157.942 251.044 158.088 250.86 158.088 250.795 cv
cp
156.824 255.315 mo
156.953 255.024 157.018 254.715 157.018 254.392 cv
157.018 254.068 156.953 253.82 156.824 253.647 cv
156.521 253.981 156.073 254.489 155.479 255.169 cv
155.436 255.342 155.414 255.51 155.414 255.672 cv
155.414 255.984 155.501 256.141 155.674 256.141 cv
156.192 256.141 156.575 255.866 156.824 255.315 cv
cp
161.295 255.169 mo
160.787 255.958 160.037 256.568 159.043 257 cv
158.19 257.367 157.326 257.551 156.451 257.551 cv
155.026 257.551 154.313 257.044 154.313 256.028 cv
154.313 255.979 li
153.935 256.412 153.173 256.854 152.029 257.308 cv
152.077 256.498 li
154.032 255.256 155.496 253.959 156.467 252.609 cv
156.435 252.502 156.419 252.383 156.419 252.254 cv
156.419 251.908 156.505 251.541 156.678 251.151 cv
157.056 250.309 157.569 249.888 158.217 249.888 cv
158.768 249.888 159.043 250.061 159.043 250.406 cv
159.043 250.547 159.005 250.709 158.93 250.892 cv
158.789 251.184 158.492 251.622 158.039 252.204 cv
158.817 253.166 159.205 253.911 159.205 254.44 cv
159.205 255.132 158.725 255.818 157.764 256.498 cv
158.271 256.498 158.849 256.298 159.497 255.898 cv
160.101 255.531 160.566 255.055 160.89 254.473 cv
161.295 255.169 li
cp
f
164.664 250.682 mo
165.701 248.381 li
165.717 248.317 li
165.717 248.209 165.636 248.154 165.474 248.154 cv
165.302 248.154 165.177 248.241 165.102 248.414 cv
164.745 249.224 164.2 250.445 163.466 252.075 cv
163.898 251.967 164.297 251.503 164.664 250.682 cv
cp
165.328 255.137 mo
165.026 255.818 164.443 256.4 163.579 256.886 cv
162.791 257.329 162.04 257.551 161.327 257.551 cv
160.82 257.551 160.393 257.415 160.047 257.145 cv
159.669 256.854 159.481 256.465 159.481 255.979 cv
159.481 255.818 159.513 255.661 159.578 255.51 cv
162.591 248.754 li
162.85 248.182 163.244 247.739 163.773 247.426 cv
164.259 247.145 164.794 247.005 165.377 247.005 cv
165.777 247.005 166.144 247.08 166.479 247.231 cv
166.878 247.415 167.078 247.663 167.078 247.977 cv
167.078 248.085 167.051 248.198 166.997 248.317 cv
165.944 250.682 li
165.318 252.086 164.259 253.074 162.769 253.647 cv
161.927 255.541 li
161.873 255.65 161.846 255.747 161.846 255.833 cv
161.846 256.072 162.013 256.19 162.348 256.19 cv
162.791 256.19 163.279 256.026 163.814 255.696 cv
164.348 255.367 164.707 254.986 164.891 254.554 cv
165.328 255.137 li
cp
f
165.296 258.798 mo
165.447 258.43 165.69 257.886 166.025 257.162 cv
165.647 257.422 165.366 257.669 165.183 257.908 cv
165.053 258.08 164.896 258.377 164.713 258.798 cv
164.696 258.863 li
164.696 258.982 164.778 259.041 164.939 259.041 cv
165.102 259.041 165.22 258.96 165.296 258.798 cv
cp
171.776 255.137 mo
171.538 255.677 171.02 256.185 170.221 256.659 cv
169.53 257.08 168.866 257.351 168.228 257.47 cv
167.807 258.425 li
167.548 259.019 167.11 259.483 166.495 259.818 cv
165.944 260.121 165.361 260.273 164.745 260.273 cv
164.302 260.273 163.924 260.178 163.611 259.989 cv
163.298 259.8 163.142 259.527 163.142 259.17 cv
163.142 258.976 163.19 258.771 163.287 258.555 cv
163.633 257.777 164.286 257.27 165.248 257.032 cv
164.502 256.892 164.13 256.498 164.13 255.85 cv
164.13 255.45 164.27 254.937 164.551 254.311 cv
165.928 251.216 li
167.596 252.204 li
166.252 255.234 li
166.176 255.396 166.138 255.536 166.138 255.655 cv
166.138 255.795 166.198 255.866 166.317 255.866 cv
166.565 255.866 166.792 255.639 166.997 255.186 cv
168.876 250.957 li
170.561 252.204 li
169.055 255.591 li
169 255.699 168.974 255.785 168.974 255.85 cv
168.974 255.99 169.06 256.06 169.233 256.06 cv
169.546 256.06 169.94 255.888 170.415 255.541 cv
170.891 255.196 171.198 254.867 171.339 254.554 cv
171.776 255.12 li
171.776 255.137 li
cp
f
176.102 255.963 mo
177.511 252.788 li
177.543 252.69 li
177.543 252.561 177.451 252.496 177.268 252.496 cv
177.03 252.496 176.868 252.599 176.782 252.804 cv
175.405 255.883 li
175.329 256.055 175.291 256.211 175.291 256.352 cv
175.291 256.503 175.356 256.579 175.486 256.579 cv
175.713 256.579 175.917 256.374 176.102 255.963 cv
cp
181.237 255.12 mo
180.956 255.737 180.351 256.298 179.423 256.805 cv
178.537 257.302 177.716 257.551 176.96 257.551 cv
176.614 257.551 176.414 257.389 176.36 257.065 cv
175.972 257.41 175.534 257.583 175.048 257.583 cv
173.903 257.583 173.331 257.194 173.331 256.417 cv
173.331 256.006 173.477 255.472 173.769 254.813 cv
173.995 254.311 li
174.33 253.555 174.767 252.929 175.308 252.431 cv
175.956 251.838 176.636 251.541 177.349 251.541 cv
177.878 251.541 178.283 251.718 178.564 252.075 cv
178.71 251.751 li
180.2 251.751 li
179.487 253.355 li
179.271 253.851 178.942 254.597 178.499 255.591 cv
178.456 255.687 178.434 255.774 178.434 255.85 cv
178.434 255.99 178.515 256.06 178.677 256.06 cv
179.001 256.06 179.398 255.888 179.868 255.541 cv
180.337 255.196 180.648 254.867 180.799 254.554 cv
181.237 255.12 li
cp
f
186.583 255.137 mo
186.312 255.752 185.697 256.319 184.735 256.838 cv
183.85 257.313 183.088 257.551 182.451 257.551 cv
181.22 257.551 li
180.054 257.551 179.47 257.168 179.47 256.4 cv
179.47 256.001 179.622 255.472 179.924 254.813 cv
180.442 253.647 li
180.702 253.063 181.053 252.577 181.495 252.188 cv
181.992 251.757 182.527 251.541 183.099 251.541 cv
184.703 251.541 li
185.394 251.541 185.74 251.811 185.74 252.35 cv
185.74 252.47 185.724 252.609 185.691 252.772 cv
183.277 253.647 li
183.666 252.788 li
183.683 252.69 li
183.683 252.561 183.591 252.496 183.407 252.496 cv
183.18 252.496 183.024 252.599 182.937 252.804 cv
181.56 255.883 li
181.485 256.055 181.447 256.206 181.447 256.336 cv
181.447 256.498 181.512 256.579 181.641 256.579 cv
182.111 256.579 li
183.148 256.579 184.136 256.271 185.076 255.655 cv
185.627 255.288 185.988 254.921 186.161 254.554 cv
186.583 255.12 li
186.583 255.137 li
cp
f
190.162 255.137 mo
189.892 255.742 189.293 256.298 188.364 256.805 cv
187.479 257.302 186.658 257.551 185.902 257.551 cv
185.578 257.551 185.324 257.459 185.14 257.276 cv
184.957 257.092 184.865 256.86 184.865 256.579 cv
184.865 256.374 184.913 256.158 185.011 255.931 cv
186.55 252.48 li
185.934 252.48 li
186.291 251.702 li
186.89 251.702 li
188.98 247.037 li
191.329 247.037 li
189.255 251.702 li
189.903 251.702 li
189.547 252.48 li
188.899 252.48 li
187.36 255.931 li
187.344 256.012 li
187.344 256.087 187.397 256.125 187.505 256.125 cv
187.84 256.125 188.256 255.949 188.753 255.599 cv
189.25 255.248 189.573 254.899 189.725 254.554 cv
190.162 255.137 li
cp
f
194.148 249.483 mo
194.018 249.775 193.764 250.007 193.386 250.179 cv
193.073 250.32 192.76 250.39 192.447 250.39 cv
192.198 250.39 191.977 250.337 191.783 250.229 cv
191.588 250.12 191.491 249.969 191.491 249.775 cv
191.491 249.688 191.512 249.591 191.556 249.483 cv
191.685 249.202 191.939 248.975 192.317 248.803 cv
192.63 248.652 192.943 248.576 193.257 248.576 cv
193.505 248.576 193.726 248.63 193.921 248.738 cv
194.115 248.846 194.212 249.002 194.212 249.208 cv
194.212 249.294 194.191 249.386 194.148 249.483 cv
cp
193.969 255.137 mo
193.71 255.731 193.111 256.287 192.171 256.805 cv
191.286 257.302 190.465 257.551 189.709 257.551 cv
189.428 257.551 189.196 257.445 189.012 257.235 cv
188.829 257.024 188.737 256.779 188.737 256.498 cv
188.737 256.314 188.775 256.136 188.85 255.963 cv
190.972 251.216 li
192.754 252.204 li
191.248 255.591 li
191.205 255.699 191.183 255.785 191.183 255.85 cv
191.183 255.99 191.264 256.06 191.426 256.06 cv
191.75 256.06 192.147 255.888 192.617 255.541 cv
193.086 255.196 193.397 254.867 193.548 254.554 cv
193.986 255.12 li
193.969 255.137 li
cp
f
197.793 254.813 mo
197.469 255.548 196.944 256.185 196.221 256.725 cv
195.465 257.297 194.725 257.583 194.002 257.583 cv
192.846 257.583 192.268 257.194 192.268 256.417 cv
192.268 256.017 192.419 255.483 192.722 254.813 cv
194.083 251.751 li
196.205 251.751 li
194.358 255.883 li
194.282 256.055 194.245 256.211 194.245 256.352 cv
194.245 256.503 194.309 256.579 194.439 256.579 cv
194.666 256.579 194.866 256.374 195.038 255.963 cv
197.161 251.216 li
198.959 252.204 li
197.793 254.813 li
cp
f
201.356 254.116 mo
201.955 252.788 li
201.972 252.69 li
201.972 252.561 201.88 252.496 201.696 252.496 cv
201.469 252.496 201.313 252.599 201.226 252.804 cv
200.627 254.116 li
201.356 254.116 li
cp
204.872 255.137 mo
204.601 255.752 203.986 256.319 203.025 256.838 cv
202.139 257.313 201.378 257.551 200.74 257.551 cv
199.51 257.551 li
198.343 257.551 197.76 257.168 197.76 256.4 cv
197.76 256.001 197.911 255.472 198.214 254.813 cv
198.732 253.647 li
198.991 253.063 199.342 252.577 199.785 252.188 cv
200.282 251.757 200.816 251.541 201.389 251.541 cv
202.993 251.541 li
203.683 251.541 204.029 251.805 204.029 252.334 cv
204.029 252.659 203.84 253.247 203.462 254.1 cv
203.192 254.715 202.657 255.024 201.858 255.024 cv
200.239 255.024 li
199.85 255.883 li
199.774 256.055 199.736 256.206 199.736 256.336 cv
199.736 256.498 199.801 256.579 199.93 256.579 cv
200.4 256.579 li
201.448 256.579 202.436 256.271 203.365 255.655 cv
203.916 255.277 204.278 254.91 204.45 254.554 cv
204.872 255.12 li
204.872 255.137 li
cp
f
450 450 mo
225 450 li
225 225 li
450 225 li
450 450 li
.870588 .313726 .0941176 rgb
f
400.899 304.662 mo
394.249 291.624 383.694 280.909 370.775 274.061 cv
371.353 258.273 384.333 245.652 400.263 245.652 cv
416.56 245.652 429.771 258.863 429.771 275.161 cv
429.771 291.245 416.902 304.324 400.899 304.662 cv
.901961 .439216 .188235 rgb
f
400.263 429.582 mo
383.965 429.582 370.754 416.371 370.754 400.074 cv
370.754 399.98 370.755 399.885 370.756 399.792 cv
383.224 393.188 393.49 382.985 400.173 370.565 cv
400.203 370.565 400.233 370.565 400.263 370.565 cv
416.56 370.565 429.771 383.776 429.771 400.074 cv
429.771 416.371 416.56 429.582 400.263 429.582 cv
f
275.163 429.582 mo
258.865 429.582 245.655 416.371 245.655 400.074 cv
245.655 383.873 258.707 370.723 274.87 370.567 cv
281.621 383.113 292.031 393.397 304.671 399.994 cv
304.671 400.021 304.671 400.047 304.671 400.074 cv
304.671 416.371 291.46 429.582 275.163 429.582 cv
f
337.521 408.021 mo
325.67 408.021 314.497 405.123 304.671 399.994 cv
304.628 383.734 291.434 370.565 275.163 370.565 cv
275.065 370.565 274.967 370.566 274.87 370.567 cv
269.481 360.551 266.421 349.092 266.421 336.921 cv
266.421 297.654 298.253 265.822 337.521 265.822 cv
349.534 265.822 360.852 268.802 370.775 274.061 cv
370.761 274.426 370.754 274.793 370.754 275.161 cv
370.754 291.458 383.965 304.669 400.263 304.669 cv
400.476 304.669 400.687 304.667 400.899 304.662 cv
405.837 314.345 408.621 325.307 408.621 336.921 cv
408.621 349.092 405.563 360.55 400.173 370.565 cv
384.01 370.613 370.906 383.653 370.756 399.792 cv
360.838 405.046 349.526 408.021 337.521 408.021 cv
.819608 .25098 .0745098 rgb
f
400.263 304.669 mo
383.965 304.669 370.754 291.458 370.754 275.161 cv
370.754 274.793 370.761 274.426 370.775 274.061 cv
383.694 280.909 394.249 291.624 400.899 304.662 cv
400.687 304.667 400.476 304.669 400.263 304.669 cv
.862745 .352941 .14902 rgb
f
370.756 399.792 mo
370.906 383.653 384.01 370.613 400.173 370.565 cv
393.49 382.985 383.224 393.188 370.756 399.792 cv
f
304.671 399.994 mo
292.031 393.397 281.621 383.113 274.87 370.567 cv
274.967 370.566 275.065 370.565 275.163 370.565 cv
291.434 370.565 304.628 383.734 304.671 399.994 cv
f
285.322 397.037 mo
285.024 397.685 284.259 397.974 283.613 397.676 cv
283.362 397.53 li
280.478 395.329 li
280.461 395.314 li
271.073 396.658 li
270.687 396.713 270.316 396.593 270.044 396.353 cv
269.924 396.248 li
263.402 390.544 li
260.888 388.343 li
260.071 387.627 259.987 386.385 260.705 385.568 cv
260.932 385.309 261.211 385.122 261.513 385.011 cv
262.167 384.776 262.921 384.894 263.479 385.383 cv
263.584 385.485 li
271.602 393.629 li
280.109 393.596 li
280.622 393.592 li
280.778 393.592 280.929 393.625 281.066 393.687 cv
281.116 393.71 li
284.681 395.329 li
285.329 395.623 285.615 396.388 285.322 397.037 cv
cp
1 .792157 .619608 rgb
f
265.434 401.321 mo
281.381 404.375 li
281.602 404.415 li
282.524 404.593 283.157 405.416 283.124 406.325 cv
282.966 410.843 li
282.886 413.101 li
282.866 413.854 282.822 414.606 282.779 415.36 cv
282.736 416.112 282.698 416.864 282.64 417.617 cv
282.588 418.371 282.522 419.123 282.491 419.876 cv
282.462 420.629 282.395 421.382 282.395 422.135 cv
282.389 422.512 282.374 422.888 282.384 423.264 cv
282.395 424.394 li
282.384 424.236 li
282.439 424.586 282.54 424.931 282.695 425.269 cv
282.827 425.518 li
282.98 425.768 li
283.165 426.01 li
283.396 426.25 li
281.581 424.544 li
287.414 426.013 li
287.899 426.133 288.193 426.628 288.072 427.115 cv
287.976 427.491 287.658 427.753 287.294 427.795 cv
281.317 428.465 li
280.814 428.521 li
280.116 428.6 279.486 428.098 279.407 427.4 cv
279.381 427.176 279.419 426.955 279.499 426.76 cv
279.541 426.666 279.573 426.572 279.598 426.479 cv
279.626 426.387 279.637 426.297 279.658 426.203 cv
279.672 426.112 279.679 426.023 279.689 425.932 cv
279.702 425.84 279.696 425.751 279.7 425.661 cv
279.706 425.48 279.689 425.304 279.669 425.127 cv
279.647 424.953 279.614 424.777 279.572 424.605 cv
279.557 424.396 li
279.513 424.019 279.476 423.641 279.416 423.267 cv
279.368 422.89 279.293 422.513 279.227 422.137 cv
279.166 421.76 279.087 421.384 279 421.008 cv
278.753 419.88 li
278.592 419.126 278.412 418.371 278.281 417.622 cv
278.22 417.245 278.141 416.868 278.096 416.492 cv
278.042 416.116 278.009 415.74 277.974 415.363 cv
277.946 414.986 277.923 414.609 277.914 414.233 cv
277.897 413.857 277.907 413.481 277.902 413.104 cv
277.919 412.727 277.918 412.353 277.949 411.974 cv
277.971 411.599 278.005 411.223 278.048 410.845 cv
278.095 410.468 278.141 410.094 278.21 409.715 cv
278.273 409.34 278.349 408.964 278.44 408.586 cv
278.523 408.21 278.651 407.833 278.755 407.457 cv
278.886 407.082 279.015 406.705 279.194 406.328 cv
280.937 408.28 li
264.711 407.67 li
262.942 407.605 261.562 406.117 261.629 404.349 cv
261.695 402.58 263.183 401.199 264.95 401.267 cv
265.109 401.272 265.282 401.294 265.434 401.321 cv
cp
.25098 .25098 .25098 rgb
f
269 394.897 mo
268.933 395.49 268.872 396.084 268.805 396.662 cv
268.762 397.072 268.721 397.472 268.677 397.864 cv
268.652 398.103 268.626 398.333 268.604 398.564 cv
268.583 398.79 268.575 399.014 268.545 399.232 cv
268.502 399.667 268.461 400.078 268.426 400.454 cv
268.414 400.546 268.407 400.635 268.395 400.722 cv
268.26 402.088 268.167 402.982 268.167 402.982 cv
268.039 404.258 li
267.809 406.54 265.878 408.194 263.732 407.948 cv
261.584 407.701 260.031 405.653 260.261 403.371 cv
260.276 403.243 260.294 403.108 260.32 402.982 cv
260.32 402.982 260.368 402.73 260.453 402.286 cv
260.544 401.845 260.642 401.214 260.78 400.454 cv
260.844 400.078 260.917 399.667 260.991 399.232 cv
261.009 399.121 261.034 399.012 261.047 398.901 cv
261.053 398.79 261.034 398.677 261.03 398.564 cv
261.009 398.333 260.991 398.103 260.972 397.864 cv
260.891 396.92 260.807 395.908 260.723 394.897 cv
260.386 390.856 260.239 386.107 260.239 386.107 cv
260.061 383.983 260.991 382.349 262.577 381.529 cv
262.577 381.523 li
263.148 381.231 263.807 381.044 264.526 380.974 cv
265.395 380.893 266.226 381.055 266.971 381.402 cv
269.172 385.296 li
269.172 385.296 269.107 393.918 269 394.897 cv
cp
.231373 .258824 .301961 rgb
f
280.478 395.329 mo
280.461 395.314 li
271.073 396.658 li
270.687 396.713 270.316 396.593 270.044 396.353 cv
269.924 396.248 li
263.402 390.544 li
261.513 385.011 li
262.167 384.776 262.921 384.894 263.479 385.383 cv
263.584 385.485 li
271.602 393.629 li
280.109 393.596 li
280.452 395.204 li
280.474 395.314 li
280.478 395.329 li
cp
1 1 1 rgb
f
266.971 381.402 mo
267.182 382.968 267.889 384.859 267.889 384.859 cv
267.889 384.859 259.851 383.961 261.592 382.861 cv
262.016 382.595 262.335 382.11 262.577 381.529 cv
262.577 381.523 li
262.885 380.78 263.065 379.875 263.167 379.072 cv
263.236 378.537 263.274 378.046 263.288 377.676 cv
263.288 377.673 li
263.31 377.262 263.31 377 263.31 377 cv
267.889 379.369 li
267.6 379.317 267.388 379.375 267.239 379.516 cv
267.128 379.611 267.051 379.749 267 379.919 cv
266.883 380.297 266.892 380.827 266.971 381.402 cv
cp
1 .854902 .729412 rgb
f
270.498 374.289 mo
270.498 374.855 270.26 376.333 270.204 376.549 cv
269.681 378.554 268.637 379.749 268.637 379.749 cv
268.637 379.749 265.013 379.067 263.393 377.865 cv
262.155 376.949 261.248 375.728 261.248 374.282 cv
261.251 370.946 261.685 368.249 265.878 368.249 cv
268.742 368.249 269.848 369.509 270.264 371.369 cv
270.455 372.234 270.498 373.227 270.498 374.289 cv
cp
f
270.264 371.369 mo
269.297 371.478 267.818 370.25 266.913 371.062 cv
266.042 371.851 266.238 373.246 266.18 374.341 cv
265.912 374.382 265.584 374.352 265.338 374.255 cv
265.452 373.638 265.033 373.275 264.451 373.309 cv
263.739 373.35 263.558 373.919 263.386 374.528 cv
263.254 374.993 263.922 375.461 263.941 375.926 cv
263.965 376.574 263.38 377.219 263.393 377.865 cv
262.155 376.949 261.248 375.728 261.248 374.282 cv
261.251 370.946 261.602 367.639 265.796 367.639 cv
268.662 367.639 270.787 368.773 270.264 371.369 cv
cp
.129412 .0980392 .0705882 rgb
f
269.311 392.013 mo
269.214 392.938 269.107 393.918 269 394.897 cv
268.933 395.49 268.872 396.084 268.805 396.662 cv
268.762 397.072 268.721 397.472 268.677 397.864 cv
268.652 398.103 268.626 398.333 268.604 398.564 cv
268.583 398.79 268.575 399.014 268.545 399.232 cv
268.502 399.667 268.461 400.078 268.426 400.454 cv
268.414 400.546 268.407 400.635 268.395 400.722 cv
268.074 400.655 267.755 400.593 267.458 400.568 cv
266.512 400.487 265.49 400.341 264.53 400.198 cv
263.498 400.045 262.188 399.414 260.991 399.232 cv
261.009 399.121 261.034 399.012 261.047 398.901 cv
261.053 398.79 261.034 398.677 261.03 398.564 cv
261.009 398.333 260.991 398.103 260.972 397.864 cv
260.891 396.92 260.807 395.908 260.723 394.897 cv
260.386 390.856 260.239 386.107 260.239 386.107 cv
260.061 383.983 260.991 382.349 262.577 381.529 cv
262.577 381.523 li
262.885 380.78 263.065 379.875 263.167 379.072 cv
264.153 379.122 265.747 380.508 266.892 380.827 cv
266.776 381.204 266.892 380.827 266.971 381.402 cv
269.172 385.296 li
269.172 391.472 li
269.172 391.472 269.344 391.729 269.311 392.013 cv
cp
.890196 .890196 .890196 rgb
f
291.723 399.124 mo
282.983 399.124 li
282.983 397.432 li
291.723 396.429 li
291.723 399.124 li
cp
1 1 1 rgb
f
286.843 398.554 mo
286.517 399.189 285.74 399.44 285.105 399.115 cv
284.871 398.961 li
281.886 396.502 li
281.413 396.502 li
272.025 396.524 li
271.446 396.524 li
271.197 396.526 270.964 396.458 270.764 396.338 cv
270.633 396.257 270.516 396.154 270.421 396.037 cv
270.327 395.92 li
262.272 385.931 li
261.592 385.085 261.723 383.846 262.57 383.165 cv
263.412 382.484 264.649 382.619 265.332 383.463 cv
265.415 383.571 li
272.399 393.59 li
281.779 394.765 li
282.234 394.824 li
282.362 394.839 282.482 394.876 282.591 394.929 cv
282.644 394.959 li
286.278 396.817 li
286.911 397.143 287.164 397.92 286.843 398.554 cv
cp
1 .792157 .619608 rgb
f
254.849 400.815 mo
253.059 403.222 254.944 407.633 257.231 409.082 cv
259.468 407.679 255.742 404.634 256.069 402.28 cv
254.849 400.815 li
cp
.231373 .258824 .301961 rgb
f
259.16 401.836 mo
259.16 403.555 257.764 404.95 256.045 404.95 cv
254.324 404.95 252.931 403.555 252.931 401.836 cv
252.931 391.111 li
252.931 389.391 254.324 387.996 256.045 387.996 cv
257.764 387.996 259.16 389.391 259.16 391.111 cv
259.16 401.836 li
cp
1 1 1 rgb
f
265.034 423.876 mo
265.034 411.92 li
265.034 411.415 264.626 411.004 264.119 411.004 cv
263.615 411.004 263.204 411.415 263.204 411.92 cv
263.204 423.841 li
256.932 428.885 li
256.512 429.165 256.398 429.734 256.68 430.153 cv
256.856 430.42 257.147 430.561 257.442 430.561 cv
257.618 430.561 257.796 430.512 257.95 430.407 cv
264.085 425.454 li
266.727 427.469 269.471 429.619 270.049 430.166 cv
270.208 430.452 270.51 430.639 270.851 430.639 cv
270.927 430.638 li
271.305 430.605 271.635 430.338 271.742 429.972 cv
271.957 429.241 271.976 429.15 265.034 423.876 cv
cp
.231373 .258824 .301961 rgb
f
256.045 409.667 mo
256.045 411.616 257.625 413.195 259.574 413.195 cv
269.6 413.195 li
271.549 413.195 273.128 411.616 273.128 409.667 cv
273.128 407.718 271.549 406.139 269.6 406.139 cv
259.574 406.139 li
257.625 406.139 256.045 407.718 256.045 409.667 cv
cp
.890196 .890196 .890196 rgb
f
312.895 401.453 mo
277.357 401.453 li
277.357 399.061 li
312.895 399.061 li
312.895 401.453 li
cp
.231373 .258824 .301961 rgb
f
288.714 429.724 mo
287.353 429.724 li
287.353 400.815 li
288.714 400.815 li
288.714 429.724 li
cp
.2 .2 .2 rgb
f
312.895 429.724 mo
311.536 429.724 li
311.536 399.061 li
312.895 399.061 li
312.895 429.724 li
cp
f
293.694 391.267 mo
298.027 390.695 li
303.886 373.694 li
300.818 370.6 li
293.694 391.267 li
cp
1 1 1 rgb
f
304.434 399.036 mo
293.694 399.036 li
293.694 397.936 li
303.335 397.936 li
303.335 381.486 li
300.561 381.486 li
300.561 380.385 li
304.434 380.385 li
304.434 399.036 li
cp
f
281.779 394.765 mo
281.413 396.502 li
281.124 397.866 li
272.025 396.524 li
270.764 396.338 li
270.633 396.257 270.516 396.154 270.421 396.037 cv
270.327 395.92 li
262.272 385.931 li
261.592 385.085 261.723 383.846 262.57 383.165 cv
263.412 382.484 264.649 382.619 265.332 383.463 cv
265.415 383.571 li
272.399 393.59 li
281.779 394.765 li
cp
f
286.957 427.113 mo
286.862 427.488 286.538 427.754 286.176 427.795 cv
280.199 428.465 li
279.7 428.524 li
278.999 428.6 278.369 428.098 278.29 427.399 cv
278.266 427.175 278.302 426.956 278.383 426.76 cv
278.423 426.666 278.456 426.571 278.481 426.479 cv
278.507 426.387 278.523 426.297 278.54 426.205 cv
278.555 426.112 278.562 426.02 278.576 425.929 cv
278.581 425.661 li
278.593 425.481 278.576 425.306 278.552 425.126 cv
278.536 425.015 278.515 424.911 278.493 424.801 cv
277.357 424.897 li
276.98 416.492 li
276.924 416.114 276.892 415.74 276.859 415.363 cv
276.825 414.986 276.804 414.607 276.797 414.234 cv
276.777 413.857 276.79 413.479 276.785 413.106 cv
276.8 412.729 276.8 412.35 276.834 411.974 cv
276.856 411.599 276.887 411.223 276.933 410.845 cv
276.976 410.467 277.024 410.094 277.094 409.718 cv
277.155 409.339 277.233 408.963 277.324 408.589 cv
277.353 408.453 277.39 408.32 277.43 408.19 cv
263.591 407.673 li
261.826 407.606 260.445 406.118 260.512 404.349 cv
260.577 402.578 262.065 401.199 263.834 401.264 cv
263.991 401.271 264.163 401.294 264.317 401.32 cv
280.266 404.375 li
280.485 404.415 li
281.406 404.591 282.039 405.416 282.007 406.323 cv
281.849 410.843 li
281.769 413.103 li
281.761 413.407 281.746 413.715 281.734 414.022 cv
281.779 413.995 li
281.586 424.431 li
281.582 424.544 li
281.34 424.563 li
281.395 424.779 li
286.298 426.014 li
286.779 426.133 287.077 426.629 286.957 427.113 cv
cp
.231373 .258824 .301961 rgb
f
286.957 427.113 mo
286.862 427.488 286.538 427.754 286.176 427.795 cv
280.199 428.465 li
279.7 428.524 li
278.999 428.6 278.369 428.098 278.29 427.399 cv
278.266 427.175 278.302 426.956 278.383 426.76 cv
278.423 426.666 278.456 426.571 278.481 426.479 cv
278.507 426.387 278.523 426.297 278.54 426.205 cv
278.555 426.112 278.562 426.02 278.576 425.929 cv
278.581 425.661 li
278.593 425.481 278.576 425.306 278.552 425.126 cv
278.536 425.015 278.515 424.911 278.493 424.801 cv
281.586 424.431 li
281.582 424.544 li
281.34 424.563 li
281.395 424.779 li
286.298 426.014 li
286.779 426.133 287.077 426.629 286.957 427.113 cv
cp
.2 .2 .2 rgb
f
312.432 394.683 mo
314.509 394.661 li
313.6 309.361 li
311.524 309.384 li
312.432 394.683 li
cp
f
285.131 307.762 mo
312.258 307.762 li
350.94 338.221 li
329.738 345.313 li
285.131 307.762 li
cp
.25098 .25098 .25098 rgb
f
294.922 311.861 mo
312.368 310.76 li
343.428 336.813 li
329.738 340.253 li
294.922 311.861 li
cp
1 1 1 rgb
f
332.675 337.05 mo
331.776 336.79 li
332.874 333.029 li
323.601 323.465 li
319.23 328.437 li
313.633 323.928 li
318.306 321.739 li
313.536 317.811 li
304.404 318.587 li
301.034 315.261 li
301.802 315.041 li
311.961 312.126 312.391 312.347 312.578 312.446 cv
312.368 312.863 li
312.276 313.317 li
312.255 313.315 li
311.608 313.315 307.082 314.512 302.83 315.721 cv
304.755 317.62 li
313.837 316.848 li
320.044 321.957 li
315.384 324.14 li
319.121 327.147 li
323.566 322.087 li
333.923 332.77 li
332.675 337.05 li
cp
.25098 .25098 .25098 rgb
f
364.339 351.294 mo
339.994 355.959 li
339.655 356.02 li
338.247 356.293 337.283 357.548 337.332 358.935 cv
337.574 365.83 li
337.696 369.278 li
337.727 370.428 337.793 371.579 337.857 372.727 cv
337.923 373.877 337.983 375.026 338.07 376.173 cv
338.151 377.323 338.25 378.473 338.299 379.624 cv
338.342 380.772 338.442 381.922 338.444 383.071 cv
338.456 383.644 338.475 384.218 338.462 384.794 cv
338.444 386.517 li
338.462 386.279 li
338.378 386.81 338.224 387.336 337.984 387.852 cv
337.928 387.982 337.866 388.111 337.786 388.236 cv
337.707 388.365 337.635 388.49 337.552 388.615 cv
337.455 388.739 337.374 388.865 337.268 388.987 cv
337.166 389.113 337.045 389.234 336.917 389.349 cv
339.689 386.749 li
330.783 388.991 li
330.044 389.179 329.592 389.928 329.779 390.673 cv
329.922 391.248 330.41 391.648 330.966 391.711 cv
340.093 392.733 li
340.859 392.821 li
341.926 392.94 342.885 392.173 343.006 391.107 cv
343.044 390.766 342.989 390.427 342.864 390.131 cv
342.801 389.989 342.751 389.845 342.717 389.703 cv
342.673 389.562 342.654 389.421 342.62 389.28 cv
342.603 389.143 342.589 389.005 342.576 388.865 cv
342.557 388.726 342.568 388.592 342.561 388.454 cv
342.549 388.178 342.576 387.91 342.605 387.638 cv
342.64 387.371 342.693 387.105 342.755 386.842 cv
342.778 386.523 li
342.844 385.948 342.9 385.373 342.993 384.798 cv
343.065 384.224 343.181 383.649 343.281 383.076 cv
343.375 382.5 343.494 381.923 343.627 381.352 cv
344.004 379.627 li
344.251 378.477 344.524 377.328 344.723 376.18 cv
344.819 375.605 344.939 375.03 345.006 374.457 cv
345.088 373.881 345.142 373.308 345.193 372.732 cv
345.238 372.157 345.272 371.582 345.286 371.005 cv
345.313 370.432 345.297 369.859 345.301 369.283 cv
345.277 368.71 345.277 368.136 345.23 367.561 cv
345.198 366.986 345.144 366.412 345.081 365.837 cv
345.01 365.264 344.937 364.689 344.831 364.111 cv
344.736 363.537 344.619 362.964 344.48 362.388 cv
344.357 361.815 344.161 361.241 344.002 360.664 cv
343.801 360.091 343.604 359.515 343.333 358.94 cv
340.67 361.918 li
365.441 360.989 li
368.142 360.891 370.25 358.62 370.147 355.919 cv
370.046 353.218 367.774 351.11 365.075 351.213 cv
364.834 351.222 364.57 351.251 364.339 351.294 cv
cp
.0588235 .0588235 .0588235 rgb
f
358.893 341.487 mo
358.995 342.395 359.091 343.303 359.191 344.185 cv
359.257 344.81 359.316 345.419 359.387 346.021 cv
359.426 346.383 359.465 346.735 359.497 347.086 cv
359.53 347.435 359.543 347.775 359.586 348.106 cv
359.654 348.77 359.715 349.397 359.77 349.971 cv
359.79 350.113 359.797 350.248 359.817 350.381 cv
360.025 352.468 360.165 353.834 360.165 353.834 cv
360.361 355.78 li
360.71 359.264 363.658 361.786 366.937 361.41 cv
370.215 361.035 372.586 357.909 372.232 354.428 cv
372.211 354.232 372.183 354.024 372.145 353.834 cv
372.145 353.834 372.072 353.448 371.944 352.77 cv
371.803 352.093 371.652 351.131 371.442 349.971 cv
371.343 349.397 371.233 348.77 371.118 348.106 cv
371.089 347.938 371.052 347.771 371.035 347.604 cv
371.025 347.435 371.052 347.261 371.056 347.086 cv
371.089 346.735 371.118 346.383 371.146 346.021 cv
371.27 344.578 371.401 343.032 371.529 341.487 cv
372.043 335.319 372.268 328.072 372.268 328.072 cv
372.54 324.824 371.118 322.331 368.698 321.08 cv
368.698 321.074 li
367.827 320.628 366.824 320.344 365.724 320.235 cv
364.398 320.112 363.129 320.356 361.992 320.889 cv
358.633 326.834 li
358.633 326.834 358.73 339.995 358.893 341.487 cv
cp
.2 .2 .2 rgb
f
331.995 341.922 mo
332.429 342.919 333.59 343.382 334.587 342.948 cv
334.722 342.887 334.854 342.813 334.971 342.728 cv
339.435 339.452 li
339.463 339.428 li
353.752 341.741 li
354.339 341.837 354.912 341.661 355.332 341.305 cv
355.517 341.147 li
365.633 332.622 li
369.53 329.329 li
370.798 328.261 370.962 326.368 369.887 325.102 cv
369.548 324.699 369.129 324.405 368.669 324.228 cv
367.677 323.853 366.523 324.01 365.658 324.74 cv
365.494 324.895 li
353.032 337.103 li
340.048 336.813 li
339.264 336.795 li
339.025 336.79 338.792 336.838 338.586 336.929 cv
338.506 336.962 li
333.02 339.332 li
332.024 339.762 331.563 340.924 331.995 341.922 cv
cp
.968627 .733333 .533333 rgb
f
339.435 339.452 mo
339.463 339.428 li
353.752 341.741 li
354.339 341.837 354.912 341.661 355.332 341.305 cv
355.517 341.147 li
365.633 332.622 li
368.669 324.228 li
367.677 323.853 366.523 324.01 365.658 324.74 cv
365.494 324.895 li
353.032 337.103 li
340.048 336.813 li
339.476 339.26 li
339.442 339.426 li
339.435 339.452 li
cp
.890196 .890196 .890196 rgb
f
361.992 320.889 mo
361.667 323.277 360.588 326.163 360.588 326.163 cv
360.588 326.163 372.859 324.793 370.203 323.117 cv
369.554 322.709 369.069 321.966 368.698 321.08 cv
368.698 321.074 li
368.23 319.939 367.955 318.558 367.798 317.332 cv
367.692 316.515 367.635 315.766 367.614 315.202 cv
367.614 315.193 li
367.579 314.568 367.579 314.165 367.579 314.165 cv
360.588 317.782 li
361.028 317.705 361.355 317.796 361.584 318.006 cv
361.753 318.154 361.869 318.366 361.947 318.624 cv
362.127 319.199 362.11 320.012 361.992 320.889 cv
cp
1 .854902 .729412 rgb
f
358.417 337.087 mo
358.568 338.496 358.73 339.995 358.893 341.487 cv
358.995 342.395 359.091 343.303 359.191 344.185 cv
359.257 344.81 359.316 345.419 359.387 346.021 cv
359.426 346.383 359.465 346.735 359.497 347.086 cv
359.53 347.435 359.543 347.775 359.586 348.106 cv
359.654 348.77 359.715 349.397 359.77 349.971 cv
359.79 350.113 359.797 350.248 359.817 350.381 cv
360.31 350.283 360.795 350.186 361.246 350.145 cv
362.69 350.024 364.251 349.8 365.717 349.582 cv
367.294 349.348 369.291 348.383 371.118 348.106 cv
371.089 347.938 371.052 347.771 371.035 347.604 cv
371.025 347.435 371.052 347.261 371.056 347.086 cv
371.089 346.735 371.118 346.383 371.146 346.021 cv
371.27 344.578 371.401 343.032 371.529 341.487 cv
372.043 335.319 372.268 328.072 372.268 328.072 cv
372.54 324.824 371.118 322.331 368.698 321.08 cv
368.698 321.074 li
368.23 319.939 367.955 318.558 367.798 317.332 cv
366.293 317.408 363.859 319.524 362.11 320.012 cv
362.291 320.587 362.11 320.012 361.992 320.889 cv
358.633 326.834 li
358.633 336.259 li
358.633 336.259 358.368 336.655 358.417 337.087 cv
cp
1 1 1 rgb
f
324.362 331.563 mo
327.723 313.703 li
329.821 313.703 li
325.704 331.847 li
324.362 331.563 li
cp
.2 .2 .2 rgb
f
324.376 326.113 mo
324.254 327.196 325.029 328.174 326.108 328.294 cv
326.249 328.319 326.4 328.314 326.537 328.299 cv
332.411 327.708 li
333.012 328.107 li
344.915 336.09 li
345.65 336.58 li
345.963 336.795 346.318 336.903 346.674 336.92 cv
346.91 336.929 347.146 336.898 347.366 336.829 cv
347.583 336.762 li
366.274 330.9 li
367.855 330.402 368.738 328.716 368.238 327.137 cv
367.749 325.555 366.062 324.678 364.479 325.171 cv
364.28 325.242 li
346.925 332.044 li
334.018 325.592 li
333.391 325.281 li
333.215 325.19 333.032 325.135 332.846 325.113 cv
332.756 325.106 li
326.567 324.387 li
325.486 324.264 324.506 325.036 324.376 326.113 cv
cp
1 .792157 .619608 rgb
f
380.495 350.523 mo
383.228 354.198 380.349 360.933 376.86 363.145 cv
373.442 361 379.137 356.357 378.631 352.761 cv
380.495 350.523 li
cp
.2 .2 .2 rgb
f
373.916 352.082 mo
373.916 354.708 376.046 356.834 378.671 356.834 cv
381.297 356.834 383.426 354.708 383.426 352.082 cv
383.426 335.708 li
383.426 333.083 381.297 330.954 378.671 330.954 cv
376.046 330.954 373.916 333.083 373.916 335.708 cv
373.916 352.082 li
cp
.231373 .258824 .301961 rgb
f
286.525 307.817 mo
286.496 307.519 285.903 302.376 289.089 299.825 cv
290.364 298.803 292.033 298.628 294.058 299.3 cv
293.674 300.457 li
292.043 299.913 290.792 300.017 289.847 300.774 cv
287.176 302.917 287.807 309.464 287.814 309.527 cv
286.525 307.817 li
cp
.25098 .25098 .25098 rgb
f
301.352 299.88 mo
301.352 301.824 299.777 303.399 297.833 303.399 cv
294.834 303.399 li
292.89 303.399 291.313 301.824 291.313 299.88 cv
291.313 297.934 292.89 296.357 294.834 296.357 cv
297.833 296.357 li
299.777 296.357 301.352 297.934 301.352 299.88 cv
cp
1 1 1 rgb
f
364.945 385.727 mo
364.945 367.478 li
364.945 366.704 365.574 366.079 366.342 366.079 cv
367.117 366.079 367.742 366.704 367.742 367.478 cv
367.742 385.674 li
377.315 393.372 li
377.956 393.803 378.13 394.67 377.703 395.313 cv
377.431 395.716 376.988 395.937 376.537 395.937 cv
376.269 395.937 375.999 395.859 375.761 395.7 cv
366.396 388.139 li
362.361 391.215 358.174 394.495 357.29 395.33 cv
357.051 395.764 356.587 396.053 356.069 396.053 cv
355.952 396.051 li
355.374 396.001 354.87 395.592 354.707 395.035 cv
354.38 393.918 354.352 393.778 364.945 385.727 cv
cp
.2 .2 .2 rgb
f
378.671 364.038 mo
378.671 367.014 376.26 369.424 373.282 369.424 cv
357.977 369.424 li
355.004 369.424 352.589 367.014 352.589 364.038 cv
352.589 361.062 355.004 358.653 357.977 358.653 cv
373.282 358.653 li
376.26 358.653 378.671 361.062 378.671 364.038 cv
cp
.231373 .258824 .301961 rgb
f
334.018 325.592 mo
333.012 328.107 li
332.225 330.084 li
344.915 336.09 li
346.674 336.92 li
346.91 336.929 347.146 336.898 347.366 336.829 cv
347.583 336.762 li
366.274 330.9 li
367.855 330.402 368.738 328.716 368.238 327.137 cv
367.749 325.555 366.062 324.678 364.479 325.171 cv
364.28 325.242 li
346.925 332.044 li
334.018 325.592 li
cp
1 1 1 rgb
f
331.481 390.67 mo
331.626 391.246 332.12 391.648 332.672 391.711 cv
341.796 392.733 li
342.561 392.823 li
343.629 392.94 344.591 392.173 344.711 391.107 cv
344.75 390.766 344.692 390.431 344.571 390.133 cv
344.509 389.989 344.458 389.842 344.419 389.703 cv
344.379 389.562 344.357 389.423 344.328 389.282 cv
344.306 389.143 344.295 389.002 344.278 388.862 cv
344.263 388.73 344.276 388.587 344.266 388.454 cv
344.248 388.18 344.278 387.914 344.31 387.638 cv
344.335 387.471 344.369 387.307 344.401 387.14 cv
346.135 387.285 li
346.711 374.452 li
346.795 373.88 346.846 373.308 346.896 372.732 cv
346.948 372.157 346.977 371.58 346.992 371.01 cv
347.021 370.432 347.002 369.859 347.006 369.287 cv
346.984 368.712 346.984 368.136 346.934 367.558 cv
346.901 366.986 346.853 366.412 346.782 365.837 cv
346.716 365.261 346.645 364.689 346.54 364.116 cv
346.442 363.537 346.327 362.962 346.185 362.391 cv
346.142 362.186 346.084 361.982 346.025 361.779 cv
367.151 360.992 li
369.846 360.892 371.954 358.622 371.854 355.919 cv
371.752 353.218 369.481 351.11 366.779 351.208 cv
366.541 351.222 366.276 351.251 366.042 351.294 cv
341.694 355.959 li
341.359 356.018 li
339.953 356.29 338.986 357.548 339.037 358.935 cv
339.28 365.83 li
339.401 369.281 li
339.413 369.746 339.435 370.217 339.457 370.686 cv
339.384 370.644 li
339.681 386.574 li
339.686 386.749 li
340.054 386.778 li
340.026 386.891 340.006 386.996 339.971 387.105 cv
332.489 388.991 li
331.749 389.179 331.298 389.933 331.481 390.67 cv
cp
.2 .2 .2 rgb
f
331.481 390.67 mo
331.626 391.246 332.12 391.648 332.672 391.711 cv
341.796 392.733 li
342.561 392.823 li
343.629 392.94 344.591 392.173 344.711 391.107 cv
344.75 390.766 344.692 390.431 344.571 390.133 cv
344.509 389.989 344.458 389.842 344.419 389.703 cv
344.379 389.562 344.357 389.423 344.328 389.282 cv
344.306 389.143 344.295 389.002 344.278 388.862 cv
344.263 388.73 344.276 388.587 344.266 388.454 cv
344.248 388.18 344.278 387.914 344.31 387.638 cv
344.335 387.471 344.369 387.307 344.401 387.14 cv
339.681 386.574 li
339.686 386.749 li
340.054 386.778 li
340.026 386.891 340.006 386.996 339.971 387.105 cv
332.489 388.991 li
331.749 389.179 331.298 389.933 331.481 390.67 cv
cp
.25098 .25098 .25098 rgb
f
356.421 310.03 mo
356.421 310.894 356.779 313.15 356.867 313.481 cv
357.667 316.539 359.261 318.366 359.261 318.366 cv
359.261 318.366 364.792 317.322 367.266 315.491 cv
369.158 314.089 370.538 312.223 370.538 310.02 cv
370.537 304.924 369.875 300.812 363.474 300.812 cv
359.1 300.812 357.413 302.733 356.779 305.574 cv
356.484 306.892 356.421 308.411 356.421 310.03 cv
cp
1 .854902 .729412 rgb
f
356.779 305.574 mo
355.346 305.41 363.299 306.372 361.891 305.106 cv
360.558 303.903 362.924 308.437 363.01 310.11 cv
363.418 310.173 363.921 310.128 364.297 309.975 cv
364.123 309.036 364.762 308.482 365.651 308.532 cv
366.737 308.595 367.014 309.465 367.277 310.396 cv
367.475 311.105 366.459 311.816 366.43 312.529 cv
366.392 313.521 367.284 314.503 367.266 315.491 cv
369.158 314.089 370.538 312.223 370.538 310.02 cv
370.537 304.924 370 299.88 363.598 299.88 cv
359.224 299.88 355.982 301.608 356.779 305.574 cv
cp
.129412 .0980392 .0705882 rgb
f
412.496 384.355 mo
402.131 391.229 li
403.325 391.058 li
393.263 389.044 li
393.869 389.683 li
393.319 384.993 li
393.236 384.285 392.594 383.779 391.885 383.861 cv
391.176 383.945 390.669 384.588 390.753 385.296 cv
390.802 385.532 li
392.217 390.034 li
392.224 390.06 li
392.318 390.358 392.549 390.578 392.822 390.673 cv
402.53 394.001 li
402.894 394.126 403.275 394.08 403.587 393.905 cv
403.722 393.83 li
414.556 387.717 li
415.505 387.181 415.839 385.979 415.304 385.028 cv
414.768 384.08 413.565 383.746 412.616 384.28 cv
412.496 384.355 li
cp
.968627 .733333 .533333 rgb
f
388.625 424.627 mo
388.478 424.877 388.286 425.133 388.025 425.366 cv
388.625 424.627 li
cp
383.398 428.271 mo
383.597 428.616 383.987 428.779 384.356 428.709 cv
386.174 428.359 li
386.187 428.359 li
390.526 427.531 li
390.532 427.531 li
390.66 427.508 li
391.109 427.42 li
391.286 427.367 li
391.399 427.315 li
391.525 427.256 391.634 427.176 391.716 427.07 cv
391.786 426.981 li
391.85 426.884 li
391.933 426.715 li
391.996 426.538 392.013 426.346 391.978 426.148 cv
391.919 425.95 li
391.821 425.7 391.769 425.455 391.745 425.209 cv
391.739 425.07 391.739 424.923 391.739 424.783 cv
391.739 424.596 391.769 424.409 391.798 424.229 cv
391.816 424.13 391.826 424.042 391.85 423.95 cv
391.885 423.815 li
391.89 423.792 li
391.902 423.692 li
391.902 423.681 li
391.909 423.648 li
391.926 423.581 li
391.955 423.454 391.984 423.32 392.02 423.191 cv
392.071 422.951 392.129 422.712 392.194 422.473 cv
392.23 422.352 li
392.525 421.371 li
393.298 419.185 li
393.42 418.816 393.566 418.448 393.664 418.081 cv
393.77 417.714 393.898 417.353 393.978 416.985 cv
394.072 416.611 394.155 416.242 394.212 415.87 cv
394.283 415.503 394.323 415.129 394.369 414.757 cv
394.406 414.377 394.44 414.01 394.451 413.631 cv
394.457 413.491 li
394.451 413.509 li
394.469 413.257 li
394.48 413.071 394.497 412.884 394.497 412.696 cv
394.521 412.319 394.521 411.939 394.521 411.559 cv
394.51 411.18 394.487 410.795 394.451 410.409 cv
394.422 410.066 394.369 409.727 394.313 409.382 cv
398.709 408.649 li
405.883 407.447 li
407.997 407.097 li
409.046 406.922 409.897 406.251 410.341 405.365 cv
410.487 405.079 410.593 404.77 410.639 404.449 cv
410.668 404.273 410.686 404.1 410.686 403.919 cv
410.686 403.749 410.668 403.573 410.639 403.399 cv
410.616 403.282 li
410.271 401.591 408.649 400.471 406.942 400.757 cv
406.771 400.781 406.603 400.826 406.445 400.879 cv
405.897 401.06 li
405.897 401.066 li
399.251 403.282 li
395.763 404.449 li
391.558 405.855 li
391.331 405.937 li
390.631 406.169 390.163 406.788 390.088 407.477 cv
389.592 411.956 li
389.535 412.517 li
389.504 412.794 li
389.494 412.867 li
389.482 412.987 li
389.482 413.008 li
389.476 413.041 li
389.469 413.181 li
389.412 414.308 li
389.394 415.06 389.376 415.814 389.354 416.564 cv
389.342 417.316 389.349 418.069 389.335 418.822 cv
389.272 421.08 li
389.214 421.834 li
389.191 422.201 li
389.079 423.326 li
389.074 423.366 li
389.074 423.372 li
389.074 423.384 li
389.074 423.396 li
389.068 423.424 li
389.044 423.53 li
389.026 423.623 389 423.711 388.973 423.799 cv
388.898 424.037 li
383.731 427.03 li
383.491 427.169 383.339 427.391 383.293 427.641 cv
383.251 427.846 383.281 428.075 383.398 428.271 cv
cp
.0588235 .0588235 .0588235 rgb
f
383.398 428.271 mo
383.595 428.616 383.986 428.778 384.352 428.707 cv
390.66 427.506 li
391.109 427.423 li
391.7 427.306 392.091 426.738 391.975 426.147 cv
391.919 425.951 li
391.821 425.699 391.769 425.455 391.746 425.213 cv
391.737 425.07 391.737 424.927 391.739 424.786 cv
391.739 424.599 391.767 424.413 391.796 424.229 cv
391.815 424.134 391.83 424.041 391.85 423.948 cv
391.885 423.814 li
391.888 423.794 li
391.888 423.791 li
391.903 423.691 li
391.903 423.683 li
391.91 423.648 li
391.928 423.581 li
391.954 423.452 391.983 423.318 392.016 423.191 cv
389.215 421.835 li
389.189 422.204 li
389.079 423.322 li
389.075 423.366 li
389.075 423.372 li
389.074 423.384 li
389.074 423.394 li
389.068 423.425 li
389.068 423.409 li
389.043 423.53 li
389.024 423.62 389 423.71 388.973 423.8 cv
388.895 424.037 li
383.728 427.03 li
383.493 427.169 383.342 427.391 383.293 427.641 cv
383.249 427.847 383.283 428.072 383.398 428.271 cv
cp
.968627 .733333 .533333 rgb
f
383.398 428.271 mo
383.595 428.616 383.986 428.778 384.352 428.707 cv
390.66 427.506 li
391.109 427.423 li
391.7 427.306 392.091 426.738 391.975 426.147 cv
391.919 425.951 li
391.821 425.699 391.769 425.455 391.746 425.213 cv
383.728 427.03 li
383.293 427.641 li
383.249 427.847 383.283 428.072 383.398 428.271 cv
cp
.901961 .901961 .901961 rgb
f
407.623 386.658 mo
404.696 388.044 407.091 391.36 406.597 395.45 cv
406.474 396.472 406.351 397.491 406.236 398.45 cv
406.209 398.692 406.177 398.924 406.151 399.157 cv
406.121 399.386 406.076 399.605 406.053 399.828 cv
405.998 400.263 405.944 400.677 405.894 401.062 cv
405.698 402.592 405.568 403.611 405.568 403.611 cv
405.4 404.898 li
405.106 407.202 406.73 409.308 409.032 409.606 cv
411.335 409.9 413.441 408.276 413.741 405.972 cv
413.758 405.842 413.767 405.703 413.773 405.572 cv
413.773 405.572 413.782 405.312 413.795 404.857 cv
413.802 404.399 413.849 403.752 413.882 402.973 cv
413.904 402.58 413.927 402.159 413.95 401.716 cv
413.957 401.604 413.96 401.491 413.974 401.376 cv
413.99 401.264 414.034 401.159 414.067 401.048 cv
414.144 400.826 414.216 400.603 414.293 400.374 cv
414.6 399.463 414.926 398.492 415.252 397.518 cv
416.558 393.623 417.861 389.735 417.861 389.735 cv
417.905 389.6 li
418.051 389.162 418.139 388.719 418.164 388.28 cv
416.255 383.828 li
416.146 383.733 li
416.111 383.62 416.084 383.504 416.062 383.381 cv
415.673 381.437 416.365 378.604 416.365 378.604 cv
411.344 379.846 li
412.52 379.922 412.103 381.402 411.443 382.788 cv
411.443 382.788 411.013 385.055 407.623 386.658 cv
cp
1 1 1 rgb
f
390.556 425.123 mo
390.457 425.325 li
390.339 425.529 li
390.171 425.817 389.954 426.09 389.64 426.346 cv
390.235 425.553 li
390.556 425.123 li
cp
385.042 430.36 mo
385.17 430.5 li
385.328 430.605 li
385.433 430.658 li
385.632 430.732 385.854 430.739 386.051 430.669 cv
386.144 430.634 li
386.156 430.634 li
389.167 429.614 li
390.981 428.995 li
392.748 428.388 li
392.906 428.336 li
393.407 428.168 393.677 427.625 393.507 427.122 cv
393.42 426.872 393.384 426.627 393.378 426.389 cv
393.366 426.225 393.372 426.067 393.384 425.915 cv
393.42 425.529 393.513 425.152 393.641 424.783 cv
393.762 424.418 393.893 424.049 394.031 423.681 cv
394.228 423.203 li
394.487 422.59 li
395.49 420.419 li
395.653 420.059 395.829 419.703 395.98 419.335 cv
396.12 418.967 396.288 418.613 396.417 418.238 cv
396.622 417.661 396.803 417.08 396.948 416.496 cv
396.988 416.331 397.029 416.167 397.065 416.005 cv
397.141 415.626 397.228 415.247 397.283 414.867 cv
397.35 414.481 397.39 414.096 397.439 413.712 cv
397.474 413.327 397.503 412.936 397.52 412.544 cv
397.533 412.154 397.533 411.758 397.515 411.362 cv
397.515 411.256 397.509 411.158 397.498 411.046 cv
397.498 411.04 li
397.484 410.854 397.467 410.662 397.443 410.469 cv
397.65 410.469 li
410.167 410.3 li
411.853 410.277 413.212 408.97 413.329 407.32 cv
413.338 407.225 413.338 407.132 413.338 407.039 cv
413.329 405.965 412.786 405.02 411.975 404.449 cv
411.951 404.431 li
411.579 404.175 411.146 403.994 410.686 403.919 cv
410.492 403.878 410.289 403.866 410.084 403.866 cv
409.904 403.866 409.717 403.883 409.547 403.919 cv
406.642 404.449 li
405.431 404.671 li
395.033 406.571 li
394.79 406.619 li
394.004 406.765 393.42 407.395 393.298 408.147 cv
392.561 412.731 li
392.194 415.025 li
391.879 417.33 li
391.781 418.099 391.692 418.869 391.6 419.639 cv
391.272 421.944 li
391.126 422.759 li
391.068 423.086 li
390.828 424.216 li
390.772 424.498 390.701 424.766 390.59 425.034 cv
389.761 425.659 li
386.187 428.359 li
386.174 428.359 li
385.218 429.088 li
384.815 429.392 384.739 429.964 385.042 430.36 cv
cp
.2 .2 .2 rgb
f
385.04 430.358 mo
385.278 430.681 385.694 430.795 386.055 430.669 cv
392.498 428.477 li
392.906 428.336 li
393.41 428.168 393.677 427.624 393.505 427.123 cv
393.421 426.871 393.384 426.625 393.378 426.385 cv
393.37 426.227 393.372 426.069 393.386 425.915 cv
393.418 425.528 393.513 425.155 393.641 424.78 cv
393.762 424.415 393.895 424.046 394.036 423.681 cv
394.234 423.202 li
391.273 421.942 li
391.068 423.084 li
390.828 424.22 li
390.773 424.496 390.701 424.767 390.591 425.037 cv
385.216 429.092 li
384.815 429.393 384.737 429.963 385.04 430.358 cv
cp
1 .792157 .619608 rgb
f
388.766 379.364 mo
395.132 375.208 li
396.54 389.87 li
391.231 390.56 li
388.766 379.364 li
cp
.890196 .890196 .890196 rgb
f
399.307 378.299 mo
388.766 379.364 li
391.427 394.133 li
399.701 395.164 li
399.307 378.299 li
cp
1 1 1 rgb
f
413.814 386.491 mo
403.205 392.294 li
404.282 392.183 li
393.77 390.087 li
394.243 390.417 li
391.857 386.241 li
391.504 385.621 390.714 385.405 390.095 385.759 cv
389.476 386.114 389.261 386.905 389.615 387.524 cv
389.751 387.717 li
392.861 391.386 li
392.881 391.409 li
393.005 391.558 393.166 391.66 393.334 391.718 cv
403.496 395.13 li
403.815 395.236 404.147 395.211 404.432 395.082 cv
404.569 395.021 li
415.577 390.019 li
416.569 389.569 417.01 388.398 416.558 387.404 cv
416.106 386.413 414.938 385.974 413.944 386.426 cv
413.814 386.491 li
cp
1 .792157 .619608 rgb
f
407.952 376.235 mo
407.931 376.833 408.117 378.412 408.169 378.642 cv
408.64 380.791 409.697 382.101 409.697 382.101 cv
409.697 382.101 413.568 381.528 415.333 380.325 cv
416.685 379.403 417.697 378.147 417.758 376.616 cv
417.896 373.079 417.547 370.202 413.105 370.026 cv
410.067 369.909 408.842 371.195 408.323 373.149 cv
408.083 374.058 407.997 375.11 407.952 376.235 cv
cp
1 .854902 .729412 rgb
f
408.361 373.109 mo
410.761 373.138 412.13 372.443 413.093 375.517 cv
413.557 377.005 413.195 378.549 413.273 380.132 cv
413.386 382.473 416.899 389.588 419.959 387.442 cv
416.982 385.462 418.14 382.664 418.802 379.8 cv
419.543 376.6 419.153 371.287 416.096 369.268 cv
413.826 367.769 407.439 369.721 408.361 373.109 cv
cp
.129412 .0980392 .0705882 rgb
f
411.766 417.292 mo
411.766 417.292 406.594 428.199 412.082 429.486 cv
417.572 430.773 417.273 432.061 407.221 431.693 cv
397.172 431.324 397.542 430.221 402.96 429.302 cv
408.38 428.384 407.495 419.01 405.365 417.907 cv
411.766 417.292 li
cp
.2 .2 .2 rgb
f
397.914 409.641 mo
398.845 407.117 407.221 405.742 411.776 405.174 cv
413.59 397.454 416.715 384.398 417.127 384.299 cv
417.712 384.156 423.354 381.554 423.772 385.119 cv
420.511 412.746 li
418.228 422.669 396.998 418.275 396.998 418.275 cv
396.998 418.275 396.629 413.129 397.914 409.641 cv
cp
.890196 .890196 .890196 rgb
f
385.04 430.358 mo
385.278 430.681 385.694 430.795 386.306 430.586 cv
392.75 428.391 li
392.906 428.336 li
393.41 428.168 393.677 427.624 393.505 427.123 cv
393.421 426.871 393.384 426.625 393.378 426.385 cv
390.977 427.399 387.116 428.925 385.216 429.092 cv
384.815 429.393 384.737 429.963 385.04 430.358 cv
cp
1 1 1 rgb
f
255.386 249.288 mo
255.386 249.126 255.304 249.045 255.142 249.045 cv
254.786 249.045 254.414 249.234 254.024 249.612 cv
254.37 249.741 254.581 249.806 254.656 249.806 cv
254.959 249.806 255.175 249.709 255.304 249.514 cv
255.386 249.288 li
cp
251.448 255.184 mo
251.448 255.055 251.367 254.607 251.206 253.839 cv
250.546 254.078 250.045 254.337 249.699 254.617 cv
249.299 254.942 248.975 255.39 248.727 255.962 cv
248.652 256.124 248.614 256.292 248.614 256.464 cv
248.614 256.723 248.687 256.942 248.833 257.12 cv
248.978 257.299 249.17 257.388 249.407 257.388 cv
249.753 257.388 250.103 257.269 250.46 257.032 cv
250.817 256.793 251.07 256.508 251.221 256.173 cv
251.373 255.838 251.448 255.508 251.448 255.184 cv
cp
249.262 258.457 mo
248.537 258.457 247.944 258.311 247.479 258.019 cv
246.983 257.695 246.734 257.248 246.734 256.675 cv
246.734 256.35 246.821 255.994 246.994 255.606 cv
247.555 254.342 248.511 253.43 249.861 252.868 cv
250.293 252.685 250.649 252.592 250.93 252.592 cv
250.854 252.247 250.817 251.944 250.817 251.685 cv
250.817 251.254 250.93 250.864 251.156 250.519 cv
251.254 250.292 251.438 249.99 251.708 249.612 cv
251.448 249.418 251.19 249.223 250.93 249.028 cv
250.552 248.758 250.266 248.623 250.072 248.623 cv
249.866 248.623 249.58 248.696 249.213 248.842 cv
248.846 248.988 248.652 249.061 248.63 249.061 cv
248.478 249.061 248.403 248.942 248.403 248.705 cv
248.403 248.521 248.5 248.38 248.695 248.283 cv
249.256 248.024 249.828 247.894 250.412 247.894 cv
250.844 247.894 251.254 247.986 251.643 248.17 cv
251.967 248.364 252.296 248.559 252.631 248.753 cv
253.246 248.181 254.111 247.894 255.223 247.894 cv
256.131 247.894 256.585 248.181 256.585 248.753 cv
256.585 248.926 256.535 249.126 256.439 249.353 cv
256.254 249.774 255.971 250.106 255.588 250.348 cv
255.205 250.592 254.802 250.713 254.38 250.713 cv
254.078 250.713 253.825 250.648 253.619 250.519 cv
253.382 250.821 253.263 251.086 253.263 251.313 cv
253.263 251.486 253.327 251.675 253.457 251.879 cv
253.565 252.031 253.674 252.187 253.781 252.35 cv
253.997 252.458 254.241 252.511 254.51 252.511 cv
254.683 252.511 254.845 252.485 254.996 252.43 cv
254.64 253.224 li
254.489 253.332 254.262 253.392 253.96 253.403 cv
254.057 253.607 254.106 253.829 254.106 254.067 cv
254.106 254.423 253.965 254.914 253.684 255.541 cv
253.442 256.108 li
253.085 256.875 252.469 257.475 251.594 257.906 cv
250.849 258.273 250.072 258.457 249.262 258.457 cv
cp
f
256.956 254.925 mo
257.556 253.597 li
257.572 253.499 li
257.572 253.37 257.48 253.305 257.296 253.305 cv
257.07 253.305 256.913 253.408 256.827 253.613 cv
256.228 254.925 li
256.956 254.925 li
cp
260.472 255.946 mo
260.202 256.561 259.586 257.128 258.625 257.647 cv
257.739 258.122 256.978 258.36 256.34 258.36 cv
255.11 258.36 li
253.943 258.36 253.36 257.976 253.36 257.209 cv
253.36 256.81 253.511 256.281 253.814 255.622 cv
254.332 254.455 li
254.591 253.872 254.942 253.386 255.385 252.997 cv
255.881 252.566 256.416 252.35 256.989 252.35 cv
258.593 252.35 li
259.284 252.35 259.629 252.614 259.629 253.143 cv
259.629 253.468 259.441 254.056 259.063 254.909 cv
258.792 255.524 258.258 255.833 257.458 255.833 cv
255.839 255.833 li
255.45 256.691 li
255.374 256.864 255.337 257.015 255.337 257.145 cv
255.337 257.307 255.402 257.388 255.531 257.388 cv
256.001 257.388 li
257.049 257.388 258.037 257.08 258.965 256.464 cv
259.517 256.086 259.878 255.719 260.051 255.363 cv
260.472 255.929 li
260.472 255.946 li
cp
f
261.477 256.999 mo
263.048 253.468 li
263.004 253.403 262.923 253.37 262.805 253.37 cv
262.567 253.37 262.405 253.468 262.319 253.662 cv
260.893 256.886 li
260.828 257.026 260.796 257.145 260.796 257.242 cv
260.796 257.372 260.855 257.436 260.974 257.436 cv
261.18 257.436 261.346 257.29 261.477 256.999 cv
cp
266.774 255.994 mo
266.504 256.589 265.905 257.145 264.976 257.663 cv
264.09 258.149 263.27 258.392 262.514 258.392 cv
262.037 258.392 261.789 258.241 261.768 257.939 cv
261.346 258.262 260.958 258.425 260.601 258.425 cv
259.457 258.425 258.885 258.035 258.885 257.258 cv
258.885 256.858 259.03 256.329 259.321 255.67 cv
259.548 255.152 li
259.883 254.396 260.321 253.77 260.861 253.273 cv
261.498 252.69 262.178 252.398 262.902 252.398 cv
263.107 252.398 263.301 252.43 263.486 252.496 cv
265.559 247.846 li
267.908 247.846 li
263.988 256.659 li
263.971 256.723 li
263.971 256.843 264.041 256.901 264.182 256.901 cv
264.463 256.901 264.836 256.745 265.3 256.432 cv
265.548 256.259 265.899 255.914 266.353 255.395 cv
266.774 255.978 li
266.774 255.994 li
cp
f
268.459 254.925 mo
269.058 253.597 li
269.074 253.499 li
269.074 253.37 268.982 253.305 268.799 253.305 cv
268.572 253.305 268.415 253.408 268.328 253.613 cv
267.729 254.925 li
268.459 254.925 li
cp
271.974 255.946 mo
271.703 256.561 271.088 257.128 270.127 257.647 cv
269.242 258.122 268.48 258.36 267.843 258.36 cv
266.612 258.36 li
265.446 258.36 264.862 257.976 264.862 257.209 cv
264.862 256.81 265.013 256.281 265.316 255.622 cv
265.834 254.455 li
266.093 253.872 266.444 253.386 266.887 252.997 cv
267.385 252.566 267.919 252.35 268.491 252.35 cv
270.095 252.35 li
270.786 252.35 271.132 252.614 271.132 253.143 cv
271.132 253.468 270.942 254.056 270.564 254.909 cv
270.295 255.524 269.759 255.833 268.961 255.833 cv
267.341 255.833 li
266.952 256.691 li
266.877 256.864 266.839 257.015 266.839 257.145 cv
266.839 257.307 266.903 257.388 267.033 257.388 cv
267.502 257.388 li
268.55 257.388 269.538 257.08 270.468 256.464 cv
271.018 256.086 271.38 255.719 271.552 255.363 cv
271.974 255.929 li
271.974 255.946 li
cp
f
278.324 255.946 mo
278.065 256.54 277.466 257.096 276.526 257.614 cv
275.641 258.111 274.82 258.36 274.064 258.36 cv
273.912 258.36 273.751 258.317 273.577 258.23 cv
273.221 258.068 273.043 257.803 273.043 257.436 cv
273.043 257.242 273.098 257.02 273.205 256.772 cv
274.63 253.597 li
274.664 253.435 li
274.664 253.316 274.587 253.257 274.437 253.257 cv
274.199 253.257 274.026 253.375 273.918 253.613 cv
271.812 258.36 li
269.446 258.36 li
272.266 252.025 li
273.756 252.819 li
274.199 252.365 274.809 252.139 275.587 252.139 cv
276.342 252.139 276.72 252.533 276.72 253.322 cv
276.72 253.71 276.624 254.126 276.428 254.569 cv
275.602 256.4 li
275.559 256.508 275.537 256.594 275.537 256.659 cv
275.537 256.799 275.619 256.869 275.781 256.869 cv
276.105 256.869 276.502 256.697 276.972 256.35 cv
277.441 256.005 277.752 255.676 277.903 255.363 cv
278.341 255.929 li
278.324 255.946 li
cp
f
281.92 255.946 mo
281.65 256.551 281.051 257.107 280.122 257.614 cv
279.237 258.111 278.416 258.36 277.66 258.36 cv
277.336 258.36 277.082 258.268 276.898 258.085 cv
276.715 257.901 276.623 257.669 276.623 257.388 cv
276.623 257.183 276.671 256.967 276.769 256.74 cv
278.308 253.289 li
277.692 253.289 li
278.049 252.511 li
278.648 252.511 li
280.738 247.846 li
283.087 247.846 li
281.013 252.511 li
281.662 252.511 li
281.305 253.289 li
280.657 253.289 li
279.118 256.74 li
279.102 256.821 li
279.102 256.896 279.155 256.934 279.264 256.934 cv
279.598 256.934 280.014 256.758 280.511 256.408 cv
281.008 256.057 281.331 255.708 281.483 255.363 cv
281.92 255.946 li
cp
f
283.314 256.772 mo
284.724 253.597 li
284.755 253.499 li
284.755 253.37 284.664 253.305 284.48 253.305 cv
284.242 253.305 284.08 253.408 283.994 253.613 cv
282.617 256.691 li
282.541 256.864 282.503 257.02 282.503 257.161 cv
282.503 257.312 282.569 257.388 282.699 257.388 cv
282.925 257.388 283.129 257.183 283.314 256.772 cv
cp
288.448 255.929 mo
288.168 256.546 287.563 257.107 286.634 257.614 cv
285.748 258.111 284.928 258.36 284.172 258.36 cv
283.827 258.36 283.627 258.198 283.572 257.874 cv
283.184 258.219 282.746 258.392 282.261 258.392 cv
281.116 258.392 280.544 258.003 280.544 257.226 cv
280.544 256.815 280.689 256.281 280.981 255.622 cv
281.208 255.12 li
281.542 254.364 281.98 253.737 282.519 253.24 cv
283.168 252.647 283.848 252.35 284.561 252.35 cv
285.09 252.35 285.495 252.527 285.777 252.884 cv
285.922 252.56 li
287.412 252.56 li
286.699 254.164 li
286.483 254.66 286.155 255.406 285.712 256.4 cv
285.668 256.496 285.646 256.583 285.646 256.659 cv
285.646 256.799 285.727 256.869 285.889 256.869 cv
286.213 256.869 286.61 256.697 287.08 256.35 cv
287.55 256.005 287.86 255.676 288.012 255.363 cv
288.448 255.929 li
cp
f
294.734 255.946 mo
294.464 256.54 293.864 257.096 292.936 257.614 cv
292.05 258.111 291.229 258.36 290.473 258.36 cv
289.793 258.36 289.453 258.052 289.453 257.436 cv
289.453 257.231 289.501 257.015 289.599 256.788 cv
290.733 254.261 li
290.749 254.18 li
290.619 253.977 li
290.361 253.889 li
290.231 253.889 290.106 254.024 289.988 254.294 cv
289.47 255.45 288.615 256.345 287.428 256.982 cv
287.072 257.177 286.77 257.285 286.521 257.307 cv
288.919 251.944 li
292.386 253.904 li
292.634 254.045 292.758 254.277 292.758 254.601 cv
292.709 254.796 li
291.997 256.415 li
291.953 256.513 291.932 256.599 291.932 256.675 cv
291.932 256.815 292.013 256.886 292.175 256.886 cv
292.498 256.886 292.896 256.713 293.365 256.367 cv
293.835 256.022 294.146 255.687 294.297 255.363 cv
294.734 255.946 li
cp
f
294.378 259.607 mo
294.529 259.239 294.771 258.694 295.107 257.971 cv
294.729 258.23 294.448 258.478 294.264 258.716 cv
294.135 258.889 293.978 259.186 293.794 259.607 cv
293.778 259.672 li
293.778 259.79 293.859 259.85 294.021 259.85 cv
294.183 259.85 294.302 259.769 294.378 259.607 cv
cp
300.858 255.946 mo
300.619 256.486 300.102 256.994 299.303 257.468 cv
298.611 257.889 297.948 258.16 297.31 258.279 cv
296.889 259.234 li
296.629 259.828 296.192 260.292 295.576 260.627 cv
295.026 260.93 294.443 261.082 293.827 261.082 cv
293.384 261.082 293.006 260.987 292.694 260.798 cv
292.38 260.609 292.223 260.336 292.223 259.979 cv
292.223 259.785 292.272 259.58 292.368 259.364 cv
292.715 258.586 293.368 258.079 294.329 257.841 cv
293.584 257.701 293.211 257.307 293.211 256.659 cv
293.211 256.259 293.351 255.746 293.632 255.12 cv
295.009 252.025 li
296.678 253.013 li
295.334 256.043 li
295.258 256.205 295.219 256.345 295.219 256.464 cv
295.219 256.604 295.279 256.675 295.399 256.675 cv
295.647 256.675 295.873 256.448 296.079 255.994 cv
297.958 251.766 li
299.642 253.013 li
298.136 256.4 li
298.082 256.508 298.055 256.594 298.055 256.659 cv
298.055 256.799 298.141 256.869 298.314 256.869 cv
298.628 256.869 299.022 256.697 299.496 256.35 cv
299.973 256.005 300.28 255.676 300.421 255.363 cv
300.858 255.929 li
300.858 255.946 li
cp
f
310.643 253.483 mo
310.696 253.343 310.723 253.198 310.723 253.046 cv
310.723 252.841 310.653 252.738 310.512 252.738 cv
310.286 252.738 310.173 252.846 310.173 253.062 cv
310.173 253.171 310.21 253.27 310.286 253.362 cv
310.361 253.454 310.447 253.499 310.546 253.499 cv
310.643 253.483 li
cp
313.542 253.694 mo
313.013 254.234 312.203 254.564 311.112 254.682 cv
310.416 256.254 li
309.983 257.215 309.104 257.874 307.776 258.23 cv
307.408 258.339 307.116 258.392 306.9 258.392 cv
306.22 258.392 305.744 258.268 305.475 258.019 cv
304.999 258.268 304.535 258.392 304.082 258.392 cv
302.926 258.392 302.348 258.003 302.348 257.226 cv
302.348 256.826 302.493 256.292 302.785 255.622 cv
304.389 252.025 li
306.074 253.013 li
304.422 256.691 li
304.346 256.864 304.308 257.02 304.308 257.161 cv
304.308 257.312 304.372 257.388 304.503 257.388 cv
304.729 257.388 304.935 257.183 305.118 256.772 cv
306.658 253.338 li
308.31 254.325 li
307.257 256.691 li
307.181 256.864 307.143 257.02 307.143 257.161 cv
307.143 257.312 307.208 257.388 307.338 257.388 cv
307.554 257.388 307.753 257.183 307.937 256.772 cv
309.136 254.083 li
309.017 254.007 308.958 253.872 308.958 253.678 cv
308.958 253.473 309.022 253.229 309.152 252.949 cv
309.465 252.236 309.989 251.879 310.723 251.879 cv
311.414 251.879 311.761 252.155 311.761 252.706 cv
311.761 252.976 311.657 253.279 311.453 253.613 cv
311.646 253.657 311.803 253.678 311.922 253.678 cv
312.17 253.678 312.548 253.526 313.056 253.224 cv
313.542 253.694 li
cp
f
316.199 253.483 mo
316.264 253.343 316.297 253.198 316.297 253.046 cv
316.297 252.841 316.226 252.738 316.087 252.738 cv
315.86 252.738 315.746 252.846 315.746 253.062 cv
315.746 253.171 315.783 253.27 315.86 253.362 cv
315.934 253.454 316.021 253.499 316.118 253.499 cv
316.199 253.483 li
cp
313.543 256.982 mo
314.806 254.131 li
314.612 254.078 314.515 253.894 314.515 253.581 cv
314.515 253.473 314.531 253.386 314.562 253.322 cv
314.39 253.418 314.265 253.559 314.191 253.743 cv
312.748 256.982 li
312.705 257.08 312.683 257.171 312.683 257.258 cv
312.683 257.42 312.759 257.501 312.91 257.501 cv
313.17 257.501 313.38 257.329 313.543 256.982 cv
cp
319.115 253.694 mo
318.586 254.245 317.776 254.574 316.686 254.682 cv
316.599 254.876 316.47 255.174 316.297 255.573 cv
315.464 257.431 314.515 258.36 313.445 258.36 cv
311.615 258.36 li
310.977 258.36 310.658 258.063 310.658 257.468 cv
310.658 257.09 310.788 256.604 311.048 256.01 cv
311.696 254.585 li
311.955 254.002 312.316 253.499 312.781 253.078 cv
313.31 252.592 313.856 252.35 314.417 252.35 cv
315.081 252.35 li
315.427 252.047 315.848 251.896 316.345 251.896 cv
316.994 251.896 317.317 252.166 317.317 252.706 cv
317.317 252.976 317.22 253.279 317.025 253.613 cv
317.209 253.657 317.36 253.678 317.479 253.678 cv
317.739 253.678 318.122 253.526 318.629 253.224 cv
319.115 253.694 li
cp
f
324.396 255.946 mo
324.126 256.54 323.526 257.096 322.598 257.614 cv
321.712 258.111 320.892 258.36 320.136 258.36 cv
319.454 258.36 319.115 258.052 319.115 257.436 cv
319.115 257.231 319.164 257.015 319.261 256.788 cv
320.395 254.261 li
320.411 254.18 li
320.281 253.977 li
320.022 253.889 li
319.892 253.889 319.768 254.024 319.65 254.294 cv
319.131 255.45 318.278 256.345 317.09 256.982 cv
316.733 257.177 316.431 257.285 316.183 257.307 cv
318.581 251.944 li
322.047 253.904 li
322.295 254.045 322.42 254.277 322.42 254.601 cv
322.371 254.796 li
321.659 256.415 li
321.615 256.513 321.594 256.599 321.594 256.675 cv
321.594 256.815 321.675 256.886 321.836 256.886 cv
322.161 256.886 322.557 256.713 323.027 256.367 cv
323.497 256.022 323.807 255.687 323.959 255.363 cv
324.396 255.946 li
cp
f
327.765 253.499 mo
327.782 253.418 li
327.782 253.311 327.712 253.257 327.572 253.257 cv
327.215 253.257 326.767 253.57 326.227 254.196 cv
326.324 254.131 326.621 254.035 327.119 253.904 cv
327.474 253.808 327.69 253.672 327.765 253.499 cv
cp
330.893 255.946 mo
330.633 256.54 330.034 257.096 329.094 257.614 cv
328.208 258.111 327.387 258.36 326.632 258.36 cv
326.47 258.36 326.303 258.317 326.13 258.23 cv
325.784 258.057 325.611 257.798 325.611 257.453 cv
325.611 257.171 325.733 256.783 325.976 256.286 cv
326.219 255.79 326.34 255.493 326.34 255.395 cv
326.34 255.276 326.27 255.217 326.13 255.217 cv
325.892 255.217 325.719 255.336 325.611 255.573 cv
324.38 258.36 li
322.015 258.36 li
326.697 247.846 li
329.045 247.846 li
326.843 252.803 li
327.296 252.328 327.896 252.09 328.641 252.09 cv
329.267 252.09 329.58 252.307 329.58 252.738 cv
329.58 252.911 329.532 253.111 329.434 253.338 cv
329.23 253.791 328.803 254.153 328.155 254.423 cv
328.435 254.499 328.576 254.704 328.576 255.038 cv
328.576 255.352 328.462 255.762 328.236 256.27 cv
328.171 256.41 328.138 256.529 328.138 256.626 cv
328.138 256.788 328.224 256.869 328.398 256.869 cv
328.722 256.869 329.11 256.697 329.564 256.35 cv
330.017 256.005 330.319 255.676 330.471 255.363 cv
330.908 255.929 li
330.893 255.946 li
cp
f
400.802 269.151 mo
400.503 269.801 399.734 270.091 399.083 269.793 cv
398.833 269.647 li
395.939 267.437 li
395.92 267.422 li
386.497 268.772 li
386.111 268.827 385.736 268.705 385.465 268.465 cv
385.343 268.36 li
378.796 262.632 li
376.273 260.422 li
375.453 259.707 375.368 258.458 376.089 257.64 cv
376.315 257.378 376.596 257.19 376.902 257.08 cv
377.555 256.844 378.314 256.961 378.873 257.453 cv
378.978 257.555 li
387.027 265.729 li
395.568 265.698 li
396.082 265.693 li
396.239 265.693 396.39 265.728 396.527 265.79 cv
396.58 265.81 li
400.158 267.437 li
400.808 267.73 401.095 268.5 400.802 269.151 cv
cp
.74902 .52549 .329412 rgb
f
403.561 299.376 mo
403.463 299.746 403.146 300.003 402.784 300.049 cv
396.781 300.701 li
396.278 300.754 li
395.569 300.833 394.942 300.339 394.862 299.659 cv
394.871 299.385 li
394.871 299.251 394.906 299.137 394.959 299.031 cv
394.994 298.933 395.032 298.845 395.055 298.757 cv
395.083 298.659 395.092 298.572 395.118 298.483 cv
395.144 298.217 li
395.154 297.952 li
395.163 297.775 395.144 297.598 395.127 297.43 cv
395.101 297.255 395.065 297.085 395.032 296.909 cv
395.012 296.705 li
394.969 296.333 394.932 295.971 394.871 295.602 cv
394.827 295.23 394.747 294.857 394.684 294.486 cv
394.623 294.123 394.543 293.753 394.455 293.38 cv
394.208 292.277 li
394.039 291.532 393.864 290.799 393.73 290.058 cv
393.668 289.686 393.589 289.324 393.544 288.952 cv
393.493 288.582 393.457 288.209 393.421 287.838 cv
393.394 287.476 393.376 287.104 393.358 286.732 cv
393.35 286.361 393.358 285.988 393.35 285.627 cv
393.368 285.256 393.368 284.885 393.403 284.513 cv
393.421 284.143 393.457 283.779 393.5 283.408 cv
393.544 283.038 393.589 282.666 393.66 282.295 cv
393.722 281.933 393.8 281.561 393.888 281.189 cv
393.916 281.056 393.951 280.933 393.996 280.801 cv
380.106 280.289 li
378.338 280.226 376.949 278.766 377.011 277.034 cv
377.083 275.292 378.577 273.939 380.356 274.002 cv
380.514 274.01 380.681 274.028 380.831 274.055 cv
396.841 277.052 li
397.063 277.096 li
397.991 277.273 398.628 278.078 398.593 278.972 cv
398.434 283.4 li
398.355 285.619 li
398.338 286.361 398.293 287.095 398.248 287.838 cv
398.204 288.582 398.168 289.315 398.107 290.058 cv
398.054 290.792 397.991 291.532 397.957 292.277 cv
397.929 293.009 397.858 293.753 397.858 294.486 cv
397.858 294.857 397.842 295.23 397.849 295.602 cv
397.858 296.564 li
398.026 296.882 401.6 297.925 402.624 298.217 cv
402.8 298.269 402.898 298.298 402.898 298.298 cv
403.385 298.411 403.684 298.896 403.561 299.376 cv
cp
f
403.561 299.376 mo
403.463 299.746 403.146 300.003 402.784 300.049 cv
396.781 300.701 li
396.278 300.754 li
395.569 300.833 394.942 300.339 394.862 299.659 cv
394.871 299.385 li
395.924 299.022 397.372 299.11 398.257 299.031 cv
399.362 298.933 400.574 298.924 401.643 298.649 cv
401.916 298.579 402.288 298.474 402.527 298.306 cv
402.624 298.217 li
402.8 298.269 402.898 298.298 402.898 298.298 cv
403.385 298.411 403.684 298.896 403.561 299.376 cv
cp
.639216 .231373 .231373 rgb
f
384.416 267.002 mo
384.348 267.599 384.286 268.195 384.22 268.774 cv
384.177 269.188 384.135 269.587 384.091 269.982 cv
384.066 270.221 384.04 270.453 384.018 270.685 cv
383.997 270.914 383.988 271.136 383.958 271.354 cv
383.916 271.791 383.875 272.204 383.839 272.581 cv
383.827 272.674 383.821 272.762 383.808 272.851 cv
383.672 274.223 383.581 275.12 383.581 275.12 cv
383.452 276.4 li
383.222 278.691 381.284 280.349 379.126 280.104 cv
376.972 279.857 375.413 277.801 375.645 275.511 cv
375.659 275.38 375.676 275.245 375.703 275.12 cv
375.703 275.12 375.749 274.865 375.835 274.422 cv
375.928 273.978 376.027 273.343 376.162 272.581 cv
376.228 272.204 376.301 271.791 376.375 271.354 cv
376.394 271.244 376.42 271.133 376.431 271.022 cv
376.437 270.914 376.42 270.798 376.416 270.685 cv
376.394 270.453 376.375 270.221 376.358 269.982 cv
376.276 269.034 376.19 268.019 376.106 267.002 cv
375.769 262.945 375.621 258.179 375.621 258.179 cv
375.443 256.045 376.859 255.006 378.452 254.182 cv
377.969 253.579 li
378.542 253.283 379.201 253.098 379.924 253.027 cv
380.797 252.944 381.389 253.494 382.136 253.843 cv
384.589 257.366 li
384.589 257.366 384.523 266.02 384.416 267.002 cv
cp
.231373 .258824 .301961 rgb
f
395.939 267.437 mo
395.92 267.422 li
386.497 268.772 li
386.111 268.827 385.736 268.705 385.465 268.465 cv
385.343 268.36 li
378.796 262.632 li
376.902 257.08 li
377.555 256.844 378.314 256.961 378.873 257.453 cv
378.978 257.555 li
387.027 265.729 li
395.568 265.698 li
395.912 267.313 li
395.934 267.422 li
395.939 267.437 li
cp
.890196 .890196 .890196 rgb
f
382.378 253.458 mo
382.591 255.028 385.88 256.762 386.42 258.825 cv
386.962 260.889 375.232 256.023 376.978 254.922 cv
377.406 254.653 377.725 254.166 377.969 253.581 cv
377.969 253.579 li
378.278 252.831 378.456 251.923 378.56 251.117 cv
378.63 250.58 378.667 250.087 378.681 249.716 cv
378.681 249.714 li
378.703 249.301 378.703 249.036 378.703 249.036 cv
383.3 251.416 li
383.011 251.364 382.797 251.424 382.645 251.562 cv
382.535 251.66 382.459 251.797 382.407 251.966 cv
382.289 252.348 382.301 252.88 382.378 253.458 cv
cp
1 .854902 .729412 rgb
f
385.918 246.315 mo
385.918 246.885 385.683 248.37 385.625 248.585 cv
385.1 250.597 384.051 251.797 384.051 251.797 cv
384.051 251.797 380.414 251.112 378.788 249.906 cv
377.544 248.985 376.634 247.759 376.634 246.31 cv
376.637 242.959 377.071 240.253 381.28 240.253 cv
384.157 240.253 385.268 241.519 385.684 243.385 cv
385.876 244.253 385.918 245.251 385.918 246.315 cv
cp
f
385.684 243.385 mo
385.894 242.344 381.772 245.38 381.277 246.026 cv
380.286 247.317 380.094 249.643 379.56 251.117 cv
378.624 253.702 375.069 255.005 372.648 252.489 cv
375.107 252.932 374.253 246.447 374.766 245.092 cv
375.356 243.525 376.62 242.108 377.939 241.108 cv
380.223 239.378 386.573 238.955 385.684 243.385 cv
cp
.129412 .0980392 .0705882 rgb
f
384.729 264.109 mo
384.629 265.037 384.523 266.02 384.416 267.002 cv
384.348 267.599 384.286 268.195 384.22 268.774 cv
384.177 269.188 384.135 269.587 384.091 269.982 cv
384.066 270.221 384.04 270.453 384.018 270.685 cv
383.997 270.914 383.988 271.136 383.958 271.354 cv
383.916 271.791 383.875 272.204 383.839 272.581 cv
383.827 272.674 383.821 272.762 383.808 272.851 cv
383.484 272.784 383.165 272.723 382.867 272.695 cv
381.918 272.615 380.892 272.469 379.928 272.325 cv
378.892 272.17 377.578 271.538 376.375 271.354 cv
376.394 271.244 376.42 271.133 376.431 271.022 cv
376.437 270.914 376.42 270.798 376.416 270.685 cv
376.394 270.453 376.375 270.221 376.358 269.982 cv
376.276 269.034 376.19 268.019 376.106 267.002 cv
375.769 262.947 375.621 258.182 375.621 258.179 cv
375.56 256.194 376.471 253.317 378.865 253.682 cv
381.155 254.029 386.414 259.319 386.42 258.825 cv
386.998 259.791 384.589 262.449 384.589 263.564 cv
384.589 263.564 384.762 263.825 384.729 264.109 cv
cp
.890196 .890196 .890196 rgb
f
408.843 271.248 mo
398.453 271.248 li
398.453 269.548 li
408.843 268.541 li
408.843 271.248 li
cp
1 1 1 rgb
f
402.327 270.675 mo
402 271.31 401.219 271.563 400.584 271.236 cv
400.349 271.081 li
397.352 268.616 li
396.876 268.616 li
387.452 268.637 li
386.872 268.637 li
386.622 268.639 386.387 268.57 386.188 268.449 cv
386.055 268.367 385.938 268.264 385.842 268.147 cv
385.747 268.03 li
377.661 258.003 li
376.978 257.155 377.111 255.911 377.96 255.226 cv
378.806 254.543 380.05 254.679 380.734 255.524 cv
380.817 255.634 li
387.827 265.691 li
397.244 266.872 li
397.7 266.931 li
397.828 266.945 397.951 266.982 398.059 267.035 cv
398.113 267.065 li
401.759 268.931 li
402.397 269.258 402.65 270.038 402.327 270.675 cv
cp
1 .792157 .619608 rgb
f
370.21 272.945 mo
368.414 275.36 370.307 279.789 372.603 281.244 cv
374.848 279.834 371.106 276.778 371.437 274.415 cv
370.21 272.945 li
cp
.231373 .258824 .301961 rgb
f
374.536 273.968 mo
374.536 275.695 373.138 277.094 371.411 277.094 cv
369.684 277.094 368.284 275.695 368.284 273.968 cv
368.284 263.202 li
368.284 261.476 369.684 260.074 371.411 260.074 cv
373.138 260.074 374.536 261.476 374.536 263.202 cv
374.536 273.968 li
cp
1 1 1 rgb
f
380.436 296.093 mo
380.436 284.091 li
380.436 283.584 380.024 283.172 379.518 283.172 cv
379.008 283.172 378.598 283.584 378.598 284.091 cv
378.598 296.058 li
372.301 301.122 li
371.88 301.403 371.766 301.974 372.047 302.397 cv
372.225 302.664 372.518 302.804 372.815 302.804 cv
372.99 302.804 373.166 302.756 373.324 302.651 cv
379.481 297.68 li
382.136 299.701 384.889 301.858 385.468 302.408 cv
385.627 302.693 385.931 302.882 386.272 302.882 cv
386.348 302.882 li
386.729 302.848 387.062 302.578 387.169 302.214 cv
387.383 301.48 387.404 301.386 380.436 296.093 cv
cp
.231373 .258824 .301961 rgb
f
371.411 281.831 mo
371.411 283.787 372.997 285.373 374.952 285.373 cv
385.018 285.373 li
386.975 285.373 388.56 283.787 388.56 281.831 cv
388.56 279.873 386.975 278.288 385.018 278.288 cv
374.952 278.288 li
372.997 278.288 371.411 279.873 371.411 281.831 cv
cp
.890196 .890196 .890196 rgb
f
428.48 273.582 mo
392.805 273.582 li
392.805 271.184 li
428.48 271.184 li
428.48 273.582 li
cp
.231373 .258824 .301961 rgb
f
404.205 301.963 mo
402.84 301.963 li
402.84 272.945 li
404.205 272.945 li
404.205 301.963 li
cp
f
428.48 301.963 mo
427.115 301.963 li
427.115 271.184 li
428.48 271.184 li
428.48 301.963 li
cp
f
397.244 266.872 mo
396.876 268.616 li
396.586 269.982 li
387.452 268.637 li
386.188 268.449 li
386.055 268.367 385.938 268.264 385.842 268.147 cv
385.747 268.03 li
377.661 258.003 li
376.978 257.155 377.111 255.911 377.96 255.226 cv
378.806 254.543 380.05 254.679 380.734 255.524 cv
380.817 255.634 li
387.827 265.691 li
397.244 266.872 li
cp
1 1 1 rgb
f
402.438 299.339 mo
402.342 299.72 402.023 299.985 401.66 300.029 cv
395.657 300.701 li
395.154 300.754 li
394.455 300.833 393.818 300.33 393.739 299.632 cv
393.722 299.401 393.757 299.18 393.835 298.988 cv
393.871 298.896 393.908 298.801 393.935 298.704 cv
393.959 298.614 393.978 298.526 393.996 298.43 cv
394.004 298.34 394.014 298.244 394.023 298.153 cv
394.031 297.89 li
394.049 297.705 394.023 297.526 394.004 297.351 cv
393.987 297.236 393.969 297.131 393.943 297.024 cv
392.421 288.678 li
392.371 288.298 392.341 287.927 392.308 287.545 cv
392.271 287.166 392.253 286.786 392.246 286.413 cv
392.228 286.034 392.237 285.654 392.228 285.281 cv
392.246 284.902 392.246 284.522 392.28 284.143 cv
392.298 283.771 392.333 283.39 392.378 283.011 cv
392.421 282.631 392.467 282.26 392.537 281.88 cv
392.599 281.498 392.679 281.119 392.775 280.748 cv
392.803 280.615 392.838 280.483 392.881 280.349 cv
390.574 280.263 li
380.646 279.89 li
378.764 278.478 li
378.279 278.459 378.696 279.069 378.29 278.857 cv
378.928 277.852 378.257 278.163 378.211 278.146 cv
377.214 277.573 375.844 277.733 375.899 276.495 cv
375.961 274.718 377.454 273.331 379.231 273.392 cv
379.391 273.399 379.559 273.429 379.718 273.454 cv
391.821 275.77 li
395.729 276.521 li
395.948 276.557 li
396.869 276.733 397.506 277.565 397.47 278.476 cv
397.312 283.011 li
397.232 285.275 li
397.223 285.584 397.214 285.892 397.195 286.202 cv
397.24 286.175 li
396.807 296.786 li
396.86 296.996 li
401.776 298.244 li
402.262 298.36 402.562 298.854 402.438 299.339 cv
cp
1 .792157 .619608 rgb
f
402.441 299.344 mo
402.345 299.722 402.022 299.986 401.659 300.026 cv
395.66 300.7 li
395.156 300.758 li
394.629 300.817 394.141 300.547 393.896 300.114 cv
393.815 299.971 393.761 299.804 393.742 299.63 cv
393.712 299.338 393.877 298.242 394.103 298.035 cv
394.441 297.728 395.338 298.22 395.727 298.328 cv
396.402 298.512 397.086 298.673 397.774 298.701 cv
398.705 298.743 399.145 298.258 399.936 297.975 cv
400.498 297.774 401.177 298.087 401.78 298.238 cv
402.263 298.361 402.562 298.858 402.441 299.344 cv
cp
.890196 .890196 .890196 rgb
f
391.821 275.77 mo
390.574 280.263 li
390.301 281.244 li
380.646 279.89 li
377.64 279.467 li
377.613 279.467 li
377.508 279.403 li
376.507 278.83 375.844 277.733 375.899 276.495 cv
375.961 274.718 377.454 273.331 379.231 273.392 cv
379.391 273.399 379.559 273.429 379.718 273.454 cv
391.821 275.77 li
cp
.231373 .258824 .301961 rgb
f
426.082 271.184 mo
412.525 271.184 li
412.525 268.541 li
426.082 268.541 li
426.082 271.184 li
cp
.2 .2 .2 rgb
f
423.911 268.59 mo
411.975 268.59 li
411.975 265.547 li
423.911 265.547 li
423.911 268.59 li
cp
1 1 1 rgb
f
425.458 265.679 mo
413.521 265.679 li
413.521 264.159 li
425.458 264.159 li
425.458 265.679 li
cp
.231373 .258824 .301961 rgb
f
423.278 264.159 mo
411.344 264.159 li
411.344 261.118 li
423.278 261.118 li
423.278 264.159 li
cp
.2 .2 .2 rgb
f
425.162 261.552 mo
413.227 261.552 li
413.227 260.031 li
425.162 260.031 li
425.162 261.552 li
cp
1 1 1 rgb
f
450 225 mo
225 225 li
225 0 li
450 0 li
450 225 li
.262745 .709804 .741176 rgb
f
401.132 79.4689 mo
400.873 79.4689 400.615 79.4655 400.357 79.4589 cv
393.84 67.1622 383.818 57.003 371.626 50.3171 cv
371.625 50.198 371.624 50.0799 371.624 49.9605 cv
371.624 33.6635 384.835 20.4521 401.132 20.4521 cv
417.43 20.4521 430.641 33.6635 430.641 49.9605 cv
430.641 66.2576 417.43 79.4689 401.132 79.4689 cv
.388235 .776471 .803922 rgb
f
400.232 205.139 mo
383.935 205.139 370.724 191.928 370.724 175.631 cv
370.724 175.612 370.724 175.592 370.724 175.573 cv
383.266 168.93 393.583 158.642 400.263 146.123 cv
416.547 146.139 429.741 159.344 429.741 175.631 cv
429.741 191.928 416.53 205.139 400.232 205.139 cv
f
274.622 79.4646 mo
258.559 79.1927 245.624 66.0875 245.624 49.9605 cv
245.624 33.6635 258.835 20.4521 275.132 20.4521 cv
291.32 20.4521 304.462 33.4857 304.639 49.6303 cv
291.864 56.2982 281.366 66.7356 274.622 79.4646 cv
f
337.491 183.802 mo
298.223 183.802 266.391 151.97 266.391 112.702 cv
266.391 100.695 269.366 89.384 274.622 79.4646 cv
274.791 79.4674 274.962 79.4689 275.132 79.4689 cv
291.43 79.4689 304.641 66.2576 304.641 49.9605 cv
304.641 49.8501 304.64 49.7404 304.639 49.6303 cv
314.465 44.5015 325.639 41.6021 337.491 41.6021 cv
349.863 41.6021 361.493 44.7604 371.626 50.3171 cv
371.815 66.1906 384.537 79.0503 400.357 79.4589 cv
405.614 89.3798 408.591 100.692 408.591 112.702 cv
408.591 124.784 405.579 136.159 400.263 146.123 cv
400.253 146.123 400.242 146.122 400.232 146.122 cv
383.954 146.122 370.755 159.303 370.724 175.573 cv
360.806 180.827 349.496 183.802 337.491 183.802 cv
.211765 .592157 .635294 rgb
f
400.357 79.4589 mo
384.537 79.0503 371.815 66.1906 371.626 50.3171 cv
383.818 57.003 393.84 67.1622 400.357 79.4589 cv
.309804 .686274 .72549 rgb
f
370.724 175.573 mo
370.755 159.303 383.954 146.122 400.232 146.122 cv
400.242 146.122 400.253 146.123 400.263 146.123 cv
393.583 158.642 383.266 168.93 370.724 175.573 cv
f
275.132 79.4689 mo
274.962 79.4689 274.791 79.4674 274.622 79.4646 cv
281.366 66.7356 291.864 56.2982 304.639 49.6303 cv
304.64 49.7404 304.641 49.8501 304.641 49.9605 cv
304.641 66.2576 291.43 79.4689 275.132 79.4689 cv
f
396.689 40.9122 mo
396.906 41.5239 397.536 41.8293 398.093 41.589 cv
398.309 41.4651 li
400.878 39.5424 li
401.097 39.5666 li
409.231 40.4627 li
409.509 40.4934 409.776 40.4015 409.981 40.2288 cv
410.087 40.1401 li
417.803 33.6819 li
418.529 33.0737 418.668 31.9351 418.116 31.137 cv
417.557 30.3377 416.519 30.1847 415.794 30.7938 cv
415.696 30.8826 li
408.767 37.6778 li
400.718 37.9657 li
400.614 37.9679 400.508 37.9925 400.416 38.0325 cv
400.363 38.0566 li
400.25 38.1067 li
397.3 39.3701 li
396.744 39.6084 396.469 40.2996 396.689 40.9122 cv
cp
.968627 .733333 .533333 rgb
f
400.25 38.1067 mo
401.02 39.4313 li
401.02 39.4343 li
401.097 39.5666 li
409.231 40.4627 li
409.509 40.4934 409.776 40.4015 409.981 40.2288 cv
410.087 40.1401 li
417.803 33.6819 li
418.529 33.0737 418.668 31.9351 418.116 31.137 cv
417.557 30.3377 416.519 30.1847 415.794 30.7938 cv
415.696 30.8826 li
408.767 37.6778 li
400.718 37.9657 li
400.614 37.9679 400.508 37.9925 400.416 38.0325 cv
400.363 38.0566 li
400.25 38.1067 li
cp
.2 .2 .2 rgb
f
398.727 78.7997 mo
398.786 79.1526 399.036 79.4114 399.339 79.4733 cv
404.321 80.4643 li
404.728 80.5439 li
405.316 80.6647 405.878 80.2389 405.981 79.5951 cv
406.016 79.3925 405.998 79.1895 405.941 79.0058 cv
405.828 78.627 405.815 78.2715 405.84 77.9225 cv
405.842 77.8962 li
405.867 77.5366 405.948 77.1913 406.056 76.8551 cv
406.156 76.5114 406.269 76.173 406.386 75.8364 cv
406.765 74.8314 li
407.606 72.8376 li
407.743 72.5054 407.89 72.1732 408.017 71.8401 cv
408.139 71.5021 408.276 71.1694 408.384 70.8319 cv
408.607 70.1534 408.786 69.4665 408.931 68.77 cv
408.992 68.4229 409.065 68.0761 409.111 67.7215 cv
409.168 67.3717 409.205 67.014 409.24 66.6607 cv
409.271 66.3016 409.298 65.9474 409.31 65.5844 cv
409.319 65.2267 409.319 64.8611 409.308 64.4954 cv
409.298 64.1307 409.259 63.7572 409.217 63.3854 cv
409.186 63.1221 409.144 62.8576 409.087 62.5909 cv
419.009 51.7381 li
420.06 50.5841 420.064 48.7103 419.015 47.5532 cv
417.962 46.3935 416.254 46.3935 415.199 47.5497 cv
415.112 47.6424 415.024 47.7593 414.947 47.8634 cv
406.143 60.7038 li
406.026 60.8713 li
405.885 61.0712 405.804 61.3046 405.769 61.5389 cv
405.153 65.7589 li
404.844 67.8695 li
404.579 69.9899 li
404.496 70.6992 404.421 71.4085 404.343 72.1156 cv
404.069 74.2399 li
403.897 75.2875 li
403.695 76.3326 li
403.657 76.5598 403.601 76.7808 403.526 76.9965 cv
399.339 77.825 li
398.926 77.9102 398.649 78.3435 398.727 78.7997 cv
cp
.890196 .890196 .890196 rgb
f
412.615 34.2852 mo
412.615 34.2852 413.009 38.0505 413.404 41.8162 cv
413.504 42.7575 413.601 43.697 413.694 44.5812 cv
413.72 44.8 413.739 45.0167 413.764 45.2311 cv
413.778 45.3722 413.784 45.5142 413.798 45.653 cv
413.815 45.8543 li
413.855 46.256 413.893 46.6378 413.925 46.9933 cv
413.933 47.0918 413.943 47.1867 413.951 47.282 cv
414.077 48.5293 414.157 49.3448 414.157 49.3448 cv
414.271 50.5319 li
414.479 52.6579 416.215 54.1977 418.152 53.9718 cv
420.089 53.7416 421.494 51.8357 421.286 49.7127 cv
421.274 49.5892 421.255 49.4636 421.234 49.3448 cv
421.234 49.3448 421.192 49.1093 421.114 48.6997 cv
421.031 48.2858 420.941 47.6978 420.817 46.9933 cv
420.758 46.6378 420.695 46.256 420.626 45.8543 cv
420.612 45.7506 420.591 45.6512 420.58 45.548 cv
420.58 45.4162 li
420.594 45.2311 li
420.602 45.1112 420.612 44.9942 420.621 44.877 cv
420.63 44.7785 420.636 44.6792 420.645 44.5812 cv
420.717 43.697 420.793 42.7575 420.87 41.8162 cv
421.176 38.0505 421.48 34.2852 421.48 34.2852 cv
421.491 34.1591 li
421.523 33.7346 421.508 33.3194 421.444 32.9198 cv
419.017 29.3436 li
418.908 29.2808 li
418.811 29.0677 li
418.772 28.9837 li
418.076 27.3265 418.091 24.641 418.091 24.641 cv
414.235 26.8282 li
415.208 26.645 415.156 28.0608 414.889 29.4407 cv
414.889 29.4407 414.398 30.1887 413.871 31.1287 cv
413.266 32.2145 412.615 33.5461 412.615 34.2852 cv
cp
1 .854902 .729412 rgb
f
412.615 34.2852 mo
412.615 34.2852 413.009 38.0505 413.404 41.8162 cv
413.504 42.7575 413.601 43.697 413.694 44.5812 cv
413.72 44.8 413.739 45.0167 413.764 45.2311 cv
413.778 45.3722 413.784 45.5142 413.798 45.653 cv
413.815 45.8543 li
413.855 46.256 413.893 46.6378 413.925 46.9933 cv
413.933 47.0918 413.943 47.1867 413.951 47.282 cv
420.58 45.4162 li
420.594 45.2311 li
420.602 45.1112 420.612 44.9942 420.621 44.877 cv
420.63 44.7785 420.636 44.6792 420.645 44.5812 cv
420.717 43.697 420.793 42.7575 420.87 41.8162 cv
421.176 38.0505 421.48 34.2852 421.48 34.2852 cv
421.491 34.1591 li
421.523 33.7346 421.508 33.3194 421.444 32.9198 cv
419.017 29.3436 li
418.908 29.2808 li
418.811 29.0677 li
417.392 30.2058 414.844 32.0058 413.871 31.1287 cv
413.266 32.2145 412.615 33.5461 412.615 34.2852 cv
cp
.2 .2 .2 rgb
f
411.421 23.4448 mo
411.513 23.9889 411.96 25.3643 412.044 25.563 cv
412.83 27.3938 413.936 28.3561 413.936 28.3561 cv
413.936 28.3561 416.998 27.0505 418.218 25.61 cv
419.152 24.5075 419.748 23.1728 419.513 21.7837 cv
418.966 18.5832 418.148 16.0721 414.478 16.8218 cv
411.975 17.3338 411.21 18.7405 411.15 20.6006 cv
411.122 21.4642 411.247 22.4258 411.421 23.4448 cv
cp
1 .854902 .729412 rgb
f
411.15 20.6006 mo
412.012 20.5308 413.106 19.0876 414.029 19.7077 cv
414.922 20.3071 414.98 21.6835 415.205 22.7259 cv
415.448 22.7166 415.73 22.6292 415.931 22.4912 cv
415.73 21.9164 416.036 21.495 416.553 21.4215 cv
417.18 21.3372 417.432 21.8491 417.681 22.4064 cv
417.871 22.8261 417.365 23.396 417.424 23.8447 cv
417.506 24.4723 418.126 24.9881 418.218 25.61 cv
419.152 24.5075 419.748 23.1728 419.513 21.7837 cv
418.966 18.5832 418.119 15.4709 414.45 16.2185 cv
411.944 16.7309 410.27 18.1991 411.15 20.6006 cv
cp
.129412 .0980392 .0705882 rgb
f
381.123 72.1024 mo
380.373 71.5109 li
399.789 41.7968 li
398.706 41.2277 li
378.741 72.1015 li
377.986 71.5131 li
398.403 39.9441 li
401.182 41.4035 li
381.123 72.1024 li
cp
.25098 .25098 .25098 rgb
f
361.364 78.5145 mo
363.713 74.0311 li
380.989 69.5474 li
380.989 78.5145 li
361.364 78.5145 li
cp
1 1 1 rgb
f
380.682 69.55 mo
380.682 78.5157 li
395.832 78.5157 li
398.613 75.9793 li
396.508 67.6116 li
395.505 63.6279 li
384.106 67.0038 li
380.682 69.55 li
cp
.231373 .258824 .301961 rgb
f
370.16 79.1807 mo
370.16 80.532 369.16 81.6297 367.929 81.6297 cv
366.696 81.6297 365.698 80.532 365.698 79.1807 cv
365.698 77.828 366.696 76.7307 367.929 76.7307 cv
369.16 76.7307 370.16 77.828 370.16 79.1807 cv
cp
.25098 .25098 .25098 rgb
f
383.422 78.6884 mo
383.422 80.5553 382.044 82.0679 380.344 82.0679 cv
378.643 82.0679 377.263 80.5553 377.263 78.6884 cv
377.263 76.8208 378.643 75.3073 380.344 75.3073 cv
382.044 75.3073 383.422 76.8208 383.422 78.6884 cv
cp
f
398.239 42.8076 mo
398.49 43.4061 399.131 43.6671 399.679 43.3907 cv
399.878 43.258 li
402.474 41.1025 li
402.495 41.1025 li
411.252 41.5116 li
411.533 41.5213 411.794 41.4167 411.996 41.2313 cv
412.089 41.1398 li
419.798 33.9008 li
420.489 33.2482 420.571 32.1008 419.978 31.3401 cv
419.384 30.578 418.339 30.4862 417.644 31.1383 cv
417.556 31.2302 li
410.655 38.7576 li
402.238 39.5393 li
402.131 39.5455 402.026 39.5762 401.932 39.6229 cv
401.887 39.647 li
401.796 39.6945 li
398.767 41.2264 li
398.222 41.502 397.986 42.2113 398.239 42.8076 cv
cp
1 .792157 .619608 rgb
f
415.321 49.6393 mo
415.335 49.768 415.359 49.91 415.387 50.0361 cv
419.004 66.2665 li
419.052 66.4611 li
419.124 66.7995 419.293 67.0843 419.521 67.2944 cv
422.408 69.971 li
422.768 70.3059 li
422.948 70.4759 li
422.993 70.5155 li
423.072 70.588 li
423.084 70.5977 li
423.109 70.6175 li
423.203 70.6957 li
423.96 71.3149 li
424.473 71.7192 424.99 72.1156 425.505 72.5186 cv
426.02 72.9185 426.548 73.3003 427.069 73.6936 cv
428.607 74.9017 li
429.092 75.3143 li
429.354 75.5415 li
429.618 75.7819 li
430.08 76.2012 li
430.112 76.2284 li
430.116 76.2315 li
430.124 76.2425 li
430.208 76.3326 li
430.365 76.529 li
430.424 76.6099 li
428.91 80.9736 li
428.762 81.4047 428.959 81.8903 429.354 82.0552 cv
429.66 82.1839 429.997 82.0788 430.199 81.8244 cv
433.545 77.6549 li
433.815 77.3143 li
434.209 76.8243 434.169 76.0794 433.721 75.6465 cv
433.583 75.5108 433.411 75.422 433.241 75.379 cv
432.886 75.2898 432.604 75.1215 432.349 74.9175 cv
432.213 74.8195 432.098 74.7049 431.98 74.5906 cv
431.814 74.4034 li
431.734 74.3084 li
431.723 74.2962 li
431.72 74.2927 li
431.662 74.236 li
431.655 74.2285 li
431.633 74.2043 li
431.593 74.1573 li
431.425 73.9652 431.26 73.7671 431.096 73.5662 cv
430.947 73.3825 li
430.646 72.9791 li
430.338 72.5634 li
429.17 70.8473 li
428.974 70.57 428.786 70.2721 428.581 70.0049 cv
428.373 69.7368 428.175 69.4529 427.959 69.1989 cv
427.745 68.9392 427.525 68.6874 427.293 68.4509 cv
427.151 68.2985 427.007 68.153 426.859 68.0146 cv
426.769 67.9267 426.68 67.8471 426.59 67.7615 cv
426.346 67.5404 426.103 67.3215 425.848 67.1221 cv
425.752 67.0442 li
425.783 67.0768 li
425.595 66.9191 li
425.468 66.811 425.348 66.6985 425.218 66.6 cv
424.965 66.3935 424.705 66.1983 424.435 66.005 cv
424.162 65.8169 423.888 65.6358 423.605 65.4631 cv
423.319 65.2944 423.019 65.1441 422.717 64.9933 cv
422.54 64.9125 422.363 64.8334 422.182 64.7591 cv
420.685 49.0236 li
420.636 48.516 420.473 48.0489 420.223 47.6578 cv
419.686 46.7939 418.741 46.2735 417.724 46.393 cv
416.245 46.5601 415.166 48.0125 415.321 49.6393 cv
cp
f
415.387 50.0361 mo
418.453 67.6169 li
429.618 75.7819 li
431.096 73.5662 li
426.859 68.0146 li
423.605 65.4631 li
423.319 65.2944 423.019 65.1441 422.717 64.9933 cv
422.54 64.9125 422.363 64.8334 422.182 64.7591 cv
420.685 49.0236 li
420.636 48.516 420.473 48.0489 420.223 47.6578 cv
415.387 50.0361 li
cp
1 1 1 rgb
f
413.798 45.653 mo
413.815 45.8543 li
413.855 46.256 413.893 46.6378 413.925 46.9933 cv
414.065 48.4049 414.157 49.3448 414.157 49.3448 cv
414.271 50.5319 li
414.479 52.6579 416.215 54.1977 418.152 53.9718 cv
420.089 53.7416 421.494 51.8357 421.286 49.7127 cv
421.274 49.5892 421.255 49.4636 421.234 49.3448 cv
421.234 49.3448 421.192 49.1093 421.114 48.6997 cv
421.031 48.2858 420.941 47.6978 420.817 46.9933 cv
420.758 46.6378 420.695 46.256 420.626 45.8543 cv
420.612 45.7506 420.591 45.6512 420.58 45.548 cv
420.571 45.4395 420.586 45.3357 420.594 45.2311 cv
420.602 45.1112 420.612 44.9942 420.621 44.877 cv
413.798 45.653 li
cp
f
417.238 46.1817 mo
417.79 33.2561 li
416.282 33.5057 li
415.387 47.6793 li
417.238 46.1817 li
cp
f
430.424 76.6099 mo
424.697 74.0311 li
428.216 67.6169 li
433.241 75.379 li
433.411 75.422 433.583 75.5108 433.721 75.6465 cv
434.169 76.0794 434.209 76.8243 433.815 77.3143 cv
433.545 77.6549 li
430.199 81.8244 li
429.997 82.0788 429.66 82.1839 429.354 82.0552 cv
428.959 81.8903 428.762 81.4047 428.91 80.9736 cv
430.424 76.6099 li
cp
.25098 .25098 .25098 rgb
f
399.339 77.825 mo
403.526 76.9965 li
403.601 76.7808 403.657 76.5598 403.695 76.3326 cv
403.392 71.0697 li
408.325 72.9791 li
405.943 79.0075 li
405.941 79.0058 li
405.998 79.1895 406.016 79.3925 405.981 79.5951 cv
405.878 80.2389 405.316 80.6647 404.728 80.5439 cv
404.321 80.4643 li
399.339 79.4733 li
399.036 79.4114 398.786 79.1526 398.727 78.7997 cv
398.649 78.3435 398.926 77.9102 399.339 77.825 cv
cp
.2 .2 .2 rgb
f
401.796 39.6945 mo
402.461 41.0313 li
402.487 41.0893 li
402.495 41.1025 li
411.252 41.5116 li
411.533 41.5213 411.794 41.4167 411.996 41.2313 cv
412.089 41.1398 li
419.798 33.9008 li
420.489 33.2482 420.571 32.1008 419.978 31.3401 cv
419.384 30.578 418.339 30.4862 417.644 31.1383 cv
417.556 31.2302 li
410.655 38.7576 li
402.238 39.5393 li
402.131 39.5455 402.026 39.5762 401.932 39.6229 cv
401.887 39.647 li
401.796 39.6945 li
cp
f
336.463 77.9945 mo
325.564 94.7813 li
327.111 93.7354 li
310.154 98.9517 li
311.579 99.4003 li
307.225 93.386 li
306.501 92.3836 305.1 92.163 304.099 92.8872 cv
303.098 93.6101 302.873 95.0102 303.599 96.0117 cv
303.69 96.1334 303.799 96.2529 303.908 96.354 cv
309.4 101.348 li
309.448 101.393 li
309.834 101.742 310.349 101.874 310.825 101.798 cv
328.325 98.8668 li
328.896 98.7724 329.378 98.4648 329.707 98.0389 cv
329.872 97.8218 li
342.038 81.9303 li
343.183 80.4335 342.9 78.2907 341.402 77.1438 cv
339.905 75.9968 337.764 76.2816 336.616 77.7805 cv
336.463 77.9945 li
cp
.968627 .733333 .533333 rgb
f
305.092 168.429 mo
305.212 169.091 305.738 169.588 306.365 169.703 cv
316.638 171.563 li
317.479 171.714 li
318.686 171.935 319.844 171.138 320.058 169.925 cv
320.129 169.551 320.1 169.163 319.984 168.818 cv
319.734 168.089 319.724 167.406 319.776 166.732 cv
319.826 166.057 319.994 165.411 320.212 164.774 cv
320.423 164.132 320.651 163.495 320.893 162.865 cv
320.912 162.82 li
321.676 160.969 li
322.716 158.725 li
323.41 157.224 li
323.691 156.598 323.998 155.975 324.258 155.346 cv
324.504 154.716 324.791 154.088 325.014 153.449 cv
325.473 152.18 325.849 150.888 326.141 149.575 cv
326.269 148.92 326.422 148.276 326.516 147.605 cv
326.631 146.95 326.708 146.283 326.789 145.611 cv
326.848 144.945 326.904 144.272 326.923 143.591 cv
326.947 142.918 326.942 142.23 326.916 141.543 cv
326.897 140.857 326.823 140.157 326.731 139.457 cv
326.667 138.961 326.584 138.465 326.465 137.961 cv
340.719 123.751 li
346.82 117.67 li
346.928 117.564 li
349.104 115.394 349.108 111.876 346.94 109.698 cv
344.772 107.525 341.249 107.518 339.073 109.687 cv
338.894 109.865 338.709 110.085 338.558 110.279 cv
338.061 110.934 li
338.061 110.941 li
337.972 111.056 li
322.279 131.9 li
320.393 134.411 li
320.149 134.731 li
319.867 135.113 319.689 135.545 319.618 135.982 cv
318.349 143.915 li
317.713 147.883 li
317.165 151.876 li
316.993 153.203 316.846 154.539 316.682 155.877 cv
316.492 157.228 li
316.118 159.859 li
315.773 161.751 li
315.76 161.829 li
315.345 163.794 li
315.263 164.222 315.148 164.631 314.995 165.041 cv
306.365 166.599 li
305.506 166.757 304.94 167.576 305.092 168.429 cv
cp
f
305.092 168.429 mo
305.212 169.091 305.738 169.588 306.365 169.703 cv
316.638 171.563 li
317.479 171.714 li
318.686 171.935 319.844 171.138 320.058 169.925 cv
320.129 169.551 320.1 169.163 319.984 168.818 cv
319.734 168.089 319.724 167.406 319.776 166.732 cv
319.826 166.057 319.994 165.411 320.212 164.774 cv
320.423 164.132 320.651 163.495 320.893 162.865 cv
320.912 162.82 li
322.54 163.167 li
323.966 163.167 li
324.625 159.194 li
324.036 159.047 323.391 158.891 322.716 158.725 cv
320.816 158.265 318.64 157.739 316.492 157.228 cv
316.067 157.127 315.632 157.029 315.214 156.925 cv
314.267 161.436 li
315.773 161.751 li
315.76 161.829 li
315.345 163.794 li
315.263 164.222 315.148 164.631 314.995 165.041 cv
306.365 166.599 li
305.506 166.757 304.94 167.576 305.092 168.429 cv
cp
.2 .2 .2 rgb
f
312.675 164.923 mo
321.897 170.27 li
324.625 159.194 li
326.816 146.097 li
327.94 139.927 li
340.931 124.62 li
340.931 124.611 li
346.82 117.67 li
338.04 111.111 li
337.972 111.056 li
336.553 109.999 li
322.279 131.9 li
319.618 135.982 li
315.214 156.925 li
312.675 164.923 li
cp
.890196 .890196 .890196 rgb
f
332.008 82.4313 mo
332.008 82.4313 332.819 89.5043 333.633 96.5839 cv
333.774 97.7814 333.907 98.9771 334.04 100.14 cv
334.104 100.695 334.169 101.246 334.234 101.781 cv
334.281 102.196 334.325 102.603 334.379 103.003 cv
334.417 103.402 334.43 103.791 334.48 104.173 cv
334.562 104.929 334.638 105.648 334.706 106.316 cv
334.787 107.021 334.856 107.672 334.918 108.239 cv
334.918 108.244 li
335.084 109.789 335.185 110.737 335.185 110.737 cv
335.422 112.969 li
335.853 116.964 339.436 119.859 343.43 119.433 cv
347.423 118.999 350.319 115.419 349.891 111.424 cv
349.866 111.197 349.829 110.959 349.785 110.737 cv
349.785 110.737 349.695 110.293 349.535 109.522 cv
349.363 108.747 349.178 107.638 348.925 106.316 cv
348.907 106.232 li
348.792 105.591 348.663 104.898 348.531 104.173 cv
348.499 103.982 348.453 103.791 348.434 103.595 cv
348.415 103.395 348.449 103.199 348.462 103.003 cv
348.499 102.603 348.531 102.196 348.57 101.781 cv
348.613 101.246 348.663 100.695 348.715 100.14 cv
348.815 98.9771 348.925 97.7814 349.032 96.5839 cv
349.662 89.5043 350.292 82.4313 350.292 82.4313 cv
350.312 82.1892 li
350.383 81.3947 350.349 80.6128 350.215 79.8631 cv
345.211 73.139 li
344.988 73.0239 li
344.887 72.8447 344.79 72.6605 344.708 72.464 cv
344.428 71.8585 344.204 71.1848 344.027 70.4918 cv
343.277 67.5835 343.296 64.3029 343.296 64.3029 cv
335.346 68.4123 li
337.353 68.0674 337.246 70.7261 336.692 73.3227 cv
336.692 73.3227 332.008 79.8223 332.008 82.4313 cv
cp
1 .854902 .729412 rgb
f
334.04 100.14 mo
334.104 100.695 334.169 101.246 334.234 101.781 cv
334.281 102.196 334.325 102.603 334.379 103.003 cv
334.417 103.402 334.43 103.791 334.48 104.173 cv
334.562 104.929 334.638 105.648 334.706 106.316 cv
334.787 107.021 334.856 107.672 334.918 108.239 cv
334.918 108.244 li
335.084 109.789 335.185 110.737 335.185 110.737 cv
335.422 112.969 li
335.853 116.964 339.436 119.859 343.43 119.433 cv
347.423 118.999 350.319 115.419 349.891 111.424 cv
349.866 111.197 349.829 110.959 349.785 110.737 cv
349.785 110.737 349.695 110.293 349.535 109.522 cv
349.363 108.747 349.178 107.638 348.925 106.316 cv
348.907 106.232 li
348.792 105.591 348.663 104.898 348.531 104.173 cv
348.499 103.982 348.453 103.791 348.434 103.595 cv
348.415 103.395 348.449 103.199 348.462 103.003 cv
348.499 102.603 348.531 102.196 348.57 101.781 cv
348.613 101.246 348.663 100.695 348.715 100.14 cv
334.04 100.14 li
cp
1 1 1 rgb
f
332.008 82.4313 mo
332.008 82.4313 332.819 89.5043 333.633 96.5839 cv
333.838 98.3518 334.04 100.122 334.234 101.781 cv
334.281 102.196 334.325 102.603 334.379 103.003 cv
334.417 103.402 334.43 103.791 334.48 104.173 cv
334.562 104.929 334.638 105.648 334.706 106.316 cv
334.787 107.021 334.856 107.672 334.918 108.239 cv
334.918 108.244 li
348.907 106.232 li
350.349 106.025 li
351.953 78.9908 li
345.274 70.0137 li
344.027 70.4918 li
336.692 73.3227 li
336.692 73.3227 332.008 79.8223 332.008 82.4313 cv
cp
.2 .2 .2 rgb
f
336.832 78.4125 mo
336.832 102.283 li
313.504 102.283 li
313.504 78.4125 li
336.832 78.4125 li
cp
1 .854902 .729412 rgb
f
308.529 72.8148 mo
308.529 96.6863 li
313.504 102.283 li
313.504 78.4125 li
308.529 72.8148 li
cp
.74902 .52549 .329412 rgb
f
308.529 72.8148 mo
331.579 72.8148 li
336.555 78.4125 li
313.504 78.4125 li
308.529 72.8148 li
cp
1 .854902 .729412 rgb
f
309.952 99.6807 mo
310.054 99.8139 310.174 99.9427 310.297 100.044 cv
315.526 104.432 li
315.588 104.486 li
316.007 104.841 316.561 104.936 317.053 104.809 cv
319.881 104.046 li
334.962 99.9932 li
335.53 99.8415 335.98 99.49 336.266 99.0277 cv
336.407 98.8106 li
338.958 94.7192 li
347.482 81.0567 li
348.481 79.454 347.989 77.3508 346.395 76.3506 cv
344.79 75.3517 342.684 75.8404 341.685 77.4435 cv
341.565 77.6588 li
332.227 95.432 li
318.92 100.89 li
317.065 101.653 li
313.526 96.9767 li
312.776 95.9933 311.371 95.7951 310.384 96.547 cv
309.4 97.2896 309.209 98.6954 309.952 99.6807 cv
cp
1 .792157 .619608 rgb
f
318.92 100.89 mo
319.881 104.046 li
320.573 106.341 li
336.555 100.83 li
347.482 81.0567 li
348.481 79.454 347.989 77.3508 346.395 76.3506 cv
344.79 75.3517 342.684 75.8404 341.685 77.4435 cv
341.565 77.6588 li
332.227 95.432 li
318.92 100.89 li
cp
1 1 1 rgb
f
329.838 59.991 mo
329.841 61.0277 330.271 63.7444 330.376 64.1408 cv
331.337 67.8212 333.255 70.0145 333.255 70.0145 cv
333.255 70.0145 339.907 68.759 342.882 66.5569 cv
345.156 64.8743 346.82 62.6313 346.82 59.9774 cv
346.815 53.855 346.018 48.9046 338.32 48.9046 cv
333.065 48.9046 331.031 51.216 330.268 54.6288 cv
329.917 56.2183 329.838 58.0439 329.838 59.991 cv
cp
1 .854902 .729412 rgb
f
330.268 54.6288 mo
332.042 54.8302 334.757 52.5749 336.416 54.0668 cv
338.022 55.5126 337.661 58.0764 337.764 60.0878 cv
338.259 60.1637 338.858 60.1084 339.314 59.9269 cv
339.104 58.7931 339.873 58.1256 340.94 58.191 cv
342.246 58.2684 342.58 59.313 342.894 60.4349 cv
343.134 61.2808 341.911 62.1453 341.878 62.9947 cv
341.83 64.1866 342.904 65.3704 342.882 66.5569 cv
345.156 64.8743 346.82 62.6313 346.82 59.9774 cv
346.815 53.855 346.169 47.7835 338.468 47.7835 cv
333.208 47.7835 329.311 49.8621 330.268 54.6288 cv
cp
.129412 .0980392 .0705882 rgb
f
347.976 55.6128 mo
347.976 55.6128 323.644 55.6128 323.171 55.6128 cv
322.693 55.6128 323.171 54.6601 323.171 54.6601 cv
329.212 54.6601 li
329.212 54.6601 328.013 46.3904 338.47 46.3904 cv
348.931 46.3904 347.976 55.6128 347.976 55.6128 cv
cp
1 1 1 rgb
f
338.011 112.479 mo
338.036 112.723 338.086 112.997 338.146 113.224 cv
340.719 123.751 li
340.931 124.611 li
345.611 143.731 li
345.698 144.106 li
345.855 144.738 346.202 145.276 346.667 145.665 cv
352.626 150.702 li
353.207 151.194 li
353.372 151.327 li
353.74 151.642 li
353.837 151.72 li
353.993 151.861 li
354.02 151.879 li
354.072 151.909 li
354.266 152.058 li
355.825 153.221 li
356.883 153.987 357.951 154.727 359.015 155.486 cv
359.724 155.987 360.458 156.484 361.183 156.98 cv
361.531 157.217 361.887 157.449 362.24 157.691 cv
364.987 159.666 li
365.414 159.969 li
366.953 161.166 li
368.454 162.406 li
368.517 162.459 li
368.522 162.465 li
368.535 162.477 li
368.566 162.509 li
368.714 162.661 li
368.827 162.769 368.929 162.903 369.04 163.024 cv
369.146 163.158 li
369.16 163.176 li
366.042 171.381 li
365.732 172.193 366.139 173.105 366.953 173.411 cv
367.581 173.653 368.274 173.454 368.695 172.981 cv
375.597 165.144 li
376.156 164.505 li
376.971 163.583 376.883 162.181 375.96 161.362 cv
375.672 161.109 375.322 160.944 374.972 160.861 cv
374.53 160.766 374.139 160.606 373.783 160.411 cv
373.555 160.289 373.339 160.151 373.129 159.994 cv
372.856 159.81 372.614 159.601 372.374 159.38 cv
372.257 159.265 372.136 159.157 372.028 159.028 cv
371.864 158.852 li
371.845 158.824 li
371.838 158.824 li
371.711 158.714 li
371.696 158.698 li
371.658 158.654 li
371.571 158.567 li
371.164 158.139 370.762 157.7 370.366 157.247 cv
370.241 157.109 li
369.305 155.962 li
368.982 155.569 li
366.577 152.35 li
366.168 151.824 365.781 151.27 365.355 150.761 cv
364.928 150.258 364.53 149.725 364.079 149.246 cv
363.631 148.761 363.18 148.29 362.701 147.846 cv
362.24 147.391 361.749 146.961 361.253 146.543 cv
360.749 146.131 360.248 145.724 359.72 145.338 cv
359.521 145.193 li
359.471 145.157 li
359.587 145.258 li
359.2 144.956 li
358.944 144.766 358.695 144.552 358.422 144.361 cv
357.903 143.973 357.359 143.605 356.807 143.241 cv
356.253 142.895 355.681 142.55 355.095 142.23 cv
354.51 141.906 353.887 141.623 353.265 141.338 cv
352.901 141.186 352.533 141.041 352.159 140.908 cv
349.168 112.213 li
349.16 112.176 li
349.073 111.331 li
349.02 110.812 348.894 110.325 348.707 109.865 cv
348.613 109.63 348.514 109.414 348.397 109.211 cv
347.394 107.507 345.528 107.162 343.258 107.405 cv
340.731 107.672 338.487 108.55 338.061 110.934 cv
338.04 111.111 li
337.972 111.557 337.959 112.017 338.011 112.479 cv
cp
.941176 .745098 .572549 rgb
f
366.042 171.381 mo
365.732 172.193 366.139 173.105 366.953 173.411 cv
367.581 173.653 368.274 173.454 368.695 172.981 cv
375.597 165.144 li
376.156 164.505 li
376.971 163.583 376.883 162.181 375.96 161.362 cv
375.672 161.109 375.322 160.944 374.972 160.861 cv
374.242 160.702 373.659 160.376 373.129 159.994 cv
372.856 159.81 372.614 159.601 372.374 159.38 cv
372.257 159.265 372.136 159.157 372.028 159.028 cv
371.864 158.852 li
371.845 158.824 li
371.838 158.824 li
371.711 158.714 li
371.696 158.698 li
371.658 158.654 li
371.571 158.567 li
371.164 158.139 370.762 157.7 370.366 157.247 cv
371.353 156.116 li
370.343 155.075 li
369.305 155.962 li
364.987 159.666 li
364.941 159.711 li
366.953 161.166 li
368.454 162.406 li
368.517 162.459 li
368.522 162.465 li
368.535 162.477 li
368.566 162.509 li
368.714 162.661 li
368.827 162.769 368.929 162.903 369.04 163.024 cv
369.16 163.176 li
366.042 171.381 li
cp
.231373 .258824 .301961 rgb
f
317.287 80.9899 mo
317.287 86.3121 li
318.831 86.3121 li
318.831 80.9899 li
320.785 80.9899 li
320.785 86.3121 li
320.785 87.5514 li
315.364 87.5514 li
315.364 86.3121 li
315.335 86.3121 li
315.335 80.9899 li
317.287 80.9899 li
cp
.74902 .52549 .329412 rgb
f
338.011 112.479 mo
338.036 112.723 338.086 112.997 338.146 113.224 cv
340.719 123.751 li
340.931 124.611 li
345.611 143.731 li
345.698 144.106 li
345.855 144.738 346.202 145.276 346.667 145.665 cv
352.626 150.702 li
353.207 151.194 li
367.219 164.295 li
369.146 163.158 li
373.783 160.411 li
375.806 159.213 li
370.343 155.075 li
354.34 138.598 li
349.168 112.213 li
349.16 112.176 li
348.707 109.865 li
348.613 109.63 348.514 109.414 348.397 109.211 cv
347.394 107.507 345.528 107.162 343.258 107.405 cv
340.731 107.672 338.487 108.55 338.061 110.934 cv
338.04 111.111 li
337.972 111.557 337.959 112.017 338.011 112.479 cv
cp
1 1 1 rgb
f
410.666 160.382 mo
406.755 168.69 li
407.199 168.194 li
399.626 173.971 li
399.473 174.112 li
399.424 174.17 li
397.14 176.795 li
396.723 177.275 396.772 178.001 397.252 178.419 cv
397.73 178.836 398.458 178.786 398.874 178.305 cv
399.024 178.092 li
400.659 175.021 li
400.459 175.22 li
408.702 170.446 li
408.864 170.353 408.991 170.222 409.078 170.072 cv
409.15 169.951 li
413.767 162.01 li
414.254 161.172 413.97 160.1 413.131 159.612 cv
412.295 159.125 411.223 159.409 410.735 160.247 cv
410.666 160.382 li
cp
.968627 .733333 .533333 rgb
f
383.409 193.812 mo
383.683 193.812 383.952 193.673 384.105 193.422 cv
391.997 180.533 li
398.089 177.867 li
398.503 177.687 398.689 177.205 398.508 176.794 cv
398.329 176.379 397.846 176.19 397.435 176.372 cv
391.106 179.14 li
390.955 179.209 390.825 179.319 390.738 179.461 cv
382.713 192.57 li
382.477 192.955 382.599 193.457 382.983 193.692 cv
383.116 193.772 383.263 193.812 383.409 193.812 cv
cp
.309804 .309804 .309804 rgb
f
415.487 176.186 mo
415.484 176.313 415.495 176.453 415.506 176.574 cv
416.266 183.115 li
417.367 192.591 li
417.39 192.787 li
417.43 193.115 417.572 193.413 417.783 193.641 cv
420.498 196.584 li
420.837 196.953 li
421.009 197.136 li
421.049 197.181 li
421.122 197.263 li
421.135 197.272 li
421.156 197.296 li
421.249 197.381 li
421.97 198.073 li
422.461 198.529 422.957 198.977 423.445 199.428 cv
423.942 199.878 424.449 200.316 424.953 200.76 cv
426.424 202.117 li
426.906 202.602 li
427.132 202.827 li
427.814 203.554 li
427.859 203.601 li
427.866 203.614 li
427.932 203.699 li
428.076 203.904 li
428.131 203.989 li
426.016 207.969 li
425.808 208.365 425.956 208.854 426.352 209.063 cv
426.657 209.226 427.023 209.17 427.267 208.955 cv
431.28 205.403 li
431.607 205.112 li
432.081 204.695 432.122 203.973 431.705 203.5 cv
431.574 203.352 431.41 203.245 431.238 203.182 cv
430.876 203.052 430.599 202.854 430.353 202.624 cv
430.222 202.514 430.115 202.389 430.007 202.263 cv
429.854 202.063 li
429.781 201.961 li
429.772 201.949 li
429.766 201.945 li
429.708 201.881 li
429.707 201.872 li
429.686 201.848 li
429.651 201.796 li
429.52 201.622 429.394 201.443 429.27 201.262 cv
429.201 201.164 429.131 201.067 429.066 200.968 cv
428.52 200.107 li
427.502 198.312 li
427.326 198.017 427.165 197.71 426.978 197.426 cv
426.794 197.142 426.625 196.844 426.424 196.574 cv
426.226 196.296 426.032 196.027 425.815 195.771 cv
425.606 195.51 425.381 195.262 425.158 195.017 cv
424.929 194.772 424.696 194.532 424.453 194.305 cv
424.362 194.22 li
424.392 194.255 li
424.214 194.08 li
424.094 193.962 423.98 193.838 423.857 193.726 cv
423.614 193.494 423.363 193.269 423.103 193.05 cv
422.844 192.835 422.572 192.625 422.296 192.428 cv
422.016 192.225 421.722 192.043 421.419 191.858 cv
421.247 191.757 421.066 191.66 420.883 191.568 cv
421.193 176.303 li
421.227 174.726 419.977 173.424 418.399 173.391 cv
417.018 173.361 415.846 174.318 415.555 175.617 cv
415.555 175.621 li
415.514 175.804 415.488 175.992 415.487 176.186 cv
cp
.890196 .890196 .890196 rgb
f
409.369 163.19 mo
409.369 163.19 410.553 166.648 411.744 170.106 cv
412.041 170.971 412.339 171.836 412.614 172.646 cv
412.687 172.849 412.754 173.048 412.824 173.245 cv
412.886 173.439 412.936 173.632 413.004 173.819 cv
413.13 174.188 413.248 174.541 413.354 174.867 cv
413.421 175.066 li
413.821 176.255 414.081 177.032 414.081 177.032 cv
414.443 178.125 li
415.101 180.081 417.217 181.139 419.172 180.486 cv
421.125 179.827 422.182 177.714 421.531 175.758 cv
421.491 175.648 421.447 175.532 421.4 175.424 cv
421.4 175.424 421.309 175.212 421.141 174.845 cv
420.972 174.471 420.758 173.94 420.482 173.303 cv
420.349 172.982 420.204 172.637 420.049 172.27 cv
420.011 172.18 419.969 172.087 419.939 171.993 cv
419.9 171.817 li
419.886 171.693 li
419.886 171.682 li
419.862 171.48 419.831 171.278 419.806 171.069 cv
419.704 170.297 419.602 169.481 419.498 168.659 cv
419.467 168.411 li
419.002 164.794 418.538 161.179 418.538 161.179 cv
418.522 161.055 li
418.472 160.647 418.369 160.257 418.217 159.895 cv
418.021 159.723 li
417.158 158.975 li
415.641 157.663 li
414.967 157.077 li
414.843 157.045 li
414.773 156.967 414.706 156.886 414.641 156.793 cv
414.532 156.65 414.433 156.496 414.335 156.337 cv
413.474 154.902 413.035 152.859 413.035 152.859 cv
409.501 155.794 li
410.412 155.422 410.676 156.588 410.716 157.858 cv
410.719 158.107 li
410.719 158.107 409.575 160.747 409.369 162.374 cv
409.328 162.694 409.323 162.974 409.369 163.19 cv
cp
1 .854902 .729412 rgb
f
409.369 163.19 mo
409.369 163.19 410.553 166.648 411.744 170.106 cv
412.041 170.971 412.339 171.836 412.614 172.646 cv
412.687 172.849 412.754 173.048 412.824 173.245 cv
412.886 173.439 412.936 173.632 413.004 173.819 cv
413.13 174.188 413.248 174.541 413.354 174.867 cv
413.421 175.066 li
419.9 171.817 li
419.886 171.693 li
419.886 171.682 li
419.862 171.48 419.831 171.278 419.806 171.069 cv
419.704 170.297 419.602 169.481 419.498 168.659 cv
419.467 168.411 li
419.002 164.794 418.538 161.179 418.538 161.179 cv
418.522 161.055 li
418.472 160.647 418.369 160.257 418.217 159.895 cv
418.021 159.723 li
417.158 158.975 li
415.641 157.663 li
414.967 157.077 li
414.843 157.045 li
414.773 156.967 414.706 156.886 414.641 156.793 cv
414.532 156.65 414.433 156.496 414.335 156.337 cv
410.716 157.858 li
410.719 158.107 li
410.719 158.107 409.575 160.747 409.369 162.374 cv
409.328 162.694 409.323 162.974 409.369 163.19 cv
cp
.2 .2 .2 rgb
f
409.999 165.025 mo
409.999 165.025 410.553 166.648 411.744 170.106 cv
412.041 170.971 412.339 171.836 412.614 172.646 cv
412.687 172.849 412.754 173.048 412.824 173.245 cv
412.886 173.439 412.936 173.632 413.004 173.819 cv
413.13 174.188 413.248 174.541 413.354 174.867 cv
413.791 176.166 414.081 177.032 414.081 177.032 cv
414.443 178.125 li
415.101 180.081 417.217 181.139 419.172 180.486 cv
421.125 179.827 422.182 177.714 421.531 175.758 cv
421.491 175.648 421.447 175.532 421.4 175.424 cv
421.4 175.424 421.309 175.212 421.141 174.845 cv
420.972 174.471 420.758 173.94 420.482 173.303 cv
420.349 172.982 420.204 172.637 420.049 172.27 cv
420.011 172.18 419.969 172.087 419.939 171.993 cv
419.907 171.896 419.9 171.795 419.886 171.693 cv
419.886 171.682 li
419.862 171.48 419.831 171.278 419.806 171.069 cv
419.704 170.297 419.602 169.481 419.498 168.659 cv
418.128 168.663 416.144 169.038 416.144 169.038 cv
413.739 160.203 li
417.158 158.975 li
415.641 157.663 li
412.443 158.745 li
411.572 164.405 li
411.572 164.405 409.955 164.809 409.999 165.025 cv
cp
1 1 1 rgb
f
399.245 205.892 mo
399.317 206.232 399.592 206.477 399.913 206.526 cv
405.214 207.336 li
405.647 207.402 li
406.271 207.497 406.855 207.068 406.949 206.448 cv
406.977 206.252 406.954 206.056 406.89 205.879 cv
406.756 205.508 406.736 205.157 406.756 204.812 cv
406.771 204.466 406.851 204.13 406.952 203.799 cv
407.049 203.47 407.16 203.141 407.274 202.811 cv
407.394 202.491 li
407.649 201.828 li
408.487 199.881 li
408.622 199.557 408.77 199.232 408.894 198.906 cv
409.012 198.58 409.149 198.252 409.253 197.922 cv
409.472 197.263 409.646 196.592 409.775 195.922 cv
409.834 195.581 409.902 195.245 409.943 194.903 cv
409.99 194.563 410.021 194.22 410.053 193.877 cv
410.074 193.531 410.093 193.184 410.093 192.835 cv
410.095 192.488 410.085 192.136 410.064 191.784 cv
410.038 191.434 409.99 191.075 409.938 190.72 cv
409.895 190.468 409.846 190.213 409.782 189.956 cv
416.266 183.115 li
419.987 179.193 li
421.074 178.05 421.026 176.245 419.88 175.157 cv
418.735 174.073 416.93 174.123 415.846 175.265 cv
415.755 175.36 415.662 175.475 415.588 175.575 cv
415.555 175.617 li
415.555 175.621 li
406.612 188.218 li
406.491 188.387 li
406.35 188.584 406.268 188.813 406.236 189.034 cv
405.696 193.126 li
405.429 195.171 li
405.204 197.223 li
405.135 197.91 405.078 198.598 405.014 199.283 cv
404.779 201.334 li
404.722 201.722 li
404.628 202.353 li
404.442 203.37 li
404.404 203.588 404.354 203.803 404.278 204.011 cv
399.871 204.935 li
399.433 205.027 399.154 205.456 399.245 205.892 cv
cp
f
352.669 205.731 mo
352.669 209.769 355.943 213.044 359.98 213.044 cv
364.02 213.044 367.292 209.769 367.292 205.731 cv
367.292 201.694 364.02 198.419 359.98 198.419 cv
355.943 198.419 352.669 201.694 352.669 205.731 cv
cp
.2 .2 .2 rgb
f
359.98 209.778 mo
362.212 209.778 364.028 207.963 364.028 205.731 cv
364.028 203.5 362.212 201.685 359.98 201.685 cv
357.749 201.685 355.935 203.5 355.935 205.731 cv
355.935 207.963 357.749 209.778 359.98 209.778 cv
cp
.231373 .258824 .301961 rgb
f
383.328 187.506 mo
383.328 183.751 li
372.964 183.751 li
372.964 187.506 li
383.328 187.506 li
cp
.658824 .239216 .239216 rgb
f
370.027 184.625 mo
370.027 180.87 li
359.664 180.87 li
359.664 184.625 li
370.027 184.625 li
cp
f
364.845 190.69 mo
364.845 186.935 li
354.484 186.935 li
354.484 190.69 li
364.845 190.69 li
cp
f
376.448 181.093 mo
376.448 177.337 li
366.086 177.337 li
366.086 181.093 li
376.448 181.093 li
cp
f
379.97 184.433 mo
379.97 180.678 li
369.606 180.678 li
369.606 184.433 li
379.97 184.433 li
cp
1 .431373 .329412 rgb
f
374.642 186.31 mo
374.642 182.555 li
364.281 182.555 li
364.281 186.31 li
374.642 186.31 li
cp
.658824 .239216 .239216 rgb
f
361.929 192.567 mo
361.929 188.813 li
351.568 188.813 li
351.568 192.567 li
361.929 192.567 li
cp
1 .431373 .329412 rgb
f
366.625 187.506 mo
366.625 183.751 li
356.263 183.751 li
356.263 187.506 li
366.625 187.506 li
cp
f
375.305 188.813 mo
375.305 185.056 li
364.946 185.056 li
364.946 188.813 li
375.305 188.813 li
cp
f
384.819 204.866 mo
382.957 205.691 380.14 206.954 372.228 199.441 cv
372.063 199.326 li
373.767 198.89 li
374.598 198.679 li
376.859 198.108 li
380.445 197.199 li
383.129 196.521 li
383.335 197.045 384.018 198.838 384.507 200.696 cv
385.466 204.321 384.826 204.858 384.819 204.866 cv
cp
365.799 201.305 mo
365.792 201.305 li
364.741 201.683 363.602 202.093 362.424 202.514 cv
361.796 202.74 361.162 202.97 360.528 203.2 cv
360.861 201.785 li
361.603 198.608 li
361.796 197.789 li
365.6 199.114 368.757 200.157 368.757 200.157 cv
369.413 199.998 li
368.456 200.337 367.208 200.792 365.799 201.305 cv
cp
403.533 176.917 mo
403.38 176.597 403.054 176.417 402.719 176.449 cv
402.629 176.455 402.542 176.481 402.45 176.52 cv
398.999 178.141 li
398.993 178.141 li
397.834 178.685 li
397.827 178.685 li
395.419 179.818 li
395.297 179.869 395.194 179.953 395.118 180.055 cv
384.434 193.92 li
384.423 192.908 li
384.38 189.847 li
384.308 184.487 li
384.308 184.487 383.955 184.551 383.328 184.678 cv
381.874 184.961 378.909 185.536 375.311 186.261 cv
374.554 186.409 373.772 186.568 372.966 186.729 cv
372.082 186.907 371.172 187.094 370.242 187.285 cv
368.508 187.644 366.714 188.015 364.948 188.387 cv
364.845 188.406 li
364.217 188.542 363.595 188.674 362.98 188.803 cv
362.63 188.88 362.276 188.956 361.932 189.034 cv
361.317 189.161 360.713 189.297 360.124 189.424 cv
358.383 189.802 356.731 190.173 355.258 190.52 cv
355.007 190.578 354.759 190.635 354.521 190.693 cv
354.328 190.737 li
354.323 190.737 li
353.284 190.987 352.356 191.224 351.569 191.43 cv
349.833 191.896 348.783 192.262 348.783 192.447 cv
348.783 193.061 354.817 195.33 360.247 197.244 cv
359.972 198.423 li
359.189 201.759 li
358.696 203.866 li
357.794 204.193 356.897 204.513 356.045 204.827 cv
356.038 204.827 li
354.817 205.262 353.675 205.672 352.677 206.037 cv
352.081 206.249 351.544 206.441 351.068 206.613 cv
350.641 206.767 350.423 207.235 350.575 207.657 cv
350.697 207.991 351.004 208.196 351.344 208.196 cv
351.434 208.196 351.524 208.183 351.62 208.15 cv
351.62 208.15 352.106 207.971 352.931 207.676 cv
353.708 207.395 354.785 207.011 356.026 206.563 cv
356.879 206.256 357.821 205.915 358.798 205.563 cv
358.888 205.634 358.984 205.685 359.108 205.711 cv
359.292 205.73 li
359.665 205.73 359.995 205.48 360.087 205.103 cv
360.649 204.896 361.214 204.692 361.79 204.487 cv
362.379 204.269 362.976 204.057 363.557 203.846 cv
364.628 203.457 365.678 203.079 366.643 202.733 cv
367.413 202.457 368.13 202.202 368.777 201.965 cv
369.725 201.619 370.519 201.33 371.083 201.125 cv
371.23 201.073 371.359 201.023 371.48 200.978 cv
379.241 208.234 382.653 207.619 385.485 206.351 cv
387.945 205.256 385.934 199.191 384.755 196.187 cv
396.29 181.207 li
400.901 179.05 li
403.142 177.999 li
403.546 177.814 403.725 177.326 403.533 176.917 cv
cp
.231373 .258824 .301961 rgb
f
414.052 160.395 mo
409.555 169.788 li
409.886 169.378 li
403.431 175.519 li
403.302 175.662 li
403.265 175.717 li
401.094 178.636 li
400.714 179.144 400.819 179.865 401.328 180.244 cv
401.839 180.624 402.558 180.517 402.937 180.007 cv
403.062 179.794 li
404.557 176.477 li
404.389 176.675 li
411.615 171.461 li
411.727 171.38 411.814 171.281 411.881 171.17 cv
411.95 171.048 li
417.151 162.028 li
417.636 161.19 417.348 160.118 416.51 159.633 cv
415.671 159.15 414.601 159.439 414.115 160.277 cv
414.052 160.395 li
cp
1 .792157 .619608 rgb
f
405.812 152.176 mo
405.93 152.697 406.443 154.011 406.538 154.198 cv
407.426 155.938 408.628 156.828 408.628 156.828 cv
408.628 156.828 411.828 155.464 413.075 154.035 cv
414.03 152.938 414.617 151.631 414.325 150.301 cv
413.648 147.232 412.706 144.838 408.844 145.685 cv
406.209 146.264 405.444 147.646 405.437 149.442 cv
405.435 150.277 405.599 151.201 405.812 152.176 cv
cp
1 .854902 .729412 rgb
f
405.437 149.442 mo
406.349 149.345 407.461 147.917 408.458 148.483 cv
409.422 149.032 409.522 150.357 409.797 151.353 cv
410.053 151.338 410.348 151.243 410.553 151.102 cv
410.326 150.556 410.636 150.137 411.18 150.052 cv
411.844 149.948 412.126 150.434 412.407 150.961 cv
412.621 151.36 412.102 151.928 412.178 152.358 cv
412.287 152.96 412.955 153.437 413.075 154.035 cv
414.03 152.938 414.617 151.631 414.325 150.301 cv
413.648 147.232 412.656 144.259 408.796 145.106 cv
406.16 145.685 404.432 147.157 405.437 149.442 cv
cp
.129412 .0980392 .0705882 rgb
f
364.948 188.387 mo
376.858 198.108 li
380.444 197.201 li
370.247 187.288 li
368.507 187.644 366.715 188.015 364.948 188.387 cv
cp
.6 .6 .6 rgb
f
374.6 198.68 mo
362.977 188.805 li
362.008 189.015 361.055 189.22 360.128 189.424 cv
373.763 198.894 li
374.6 198.68 li
cp
f
428.131 203.989 mo
428.076 203.905 li
423.038 199.941 li
426.785 195.535 li
431.236 203.182 li
431.41 203.245 431.574 203.352 431.705 203.5 cv
432.122 203.973 432.081 204.695 431.607 205.112 cv
431.28 205.403 li
427.267 208.955 li
427.023 209.17 426.657 209.226 426.352 209.063 cv
425.956 208.854 425.808 208.365 426.016 207.969 cv
428.131 203.989 li
cp
.2 .2 .2 rgb
f
399.871 204.935 mo
404.278 204.011 li
404.281 204 li
405.148 194.989 li
409.999 196.186 li
406.949 206.448 li
406.855 207.068 406.271 207.497 405.647 207.402 cv
405.214 207.336 li
399.913 206.526 li
399.592 206.477 399.317 206.232 399.245 205.892 cv
399.154 205.456 399.433 205.027 399.871 204.935 cv
cp
.25098 .25098 .25098 rgb
f
403.559 151.122 mo
404.71 151.589 414.583 148.486 414.583 148.486 cv
414.804 148.406 li
414.651 147.894 414.433 147.42 414.165 146.985 cv
413.818 146.426 413.386 145.937 412.895 145.519 cv
411.21 144.099 408.789 143.54 406.533 144.079 cv
403.392 144.827 405.001 148.729 405.296 149.375 cv
405.047 149.559 404.592 149.914 403.797 150.556 cv
403.418 150.863 403.367 151.043 403.559 151.122 cv
cp
1 1 1 rgb
f
403.559 151.122 mo
404.71 151.589 414.583 148.486 414.583 148.486 cv
414.804 148.406 li
414.651 147.894 414.433 147.42 414.165 146.985 cv
411.49 147.524 li
410.998 146.855 li
408.796 147.19 li
409.127 148.57 li
405.775 150.121 li
403.559 151.122 li
cp
.890196 .890196 .890196 rgb
f
405.296 149.375 mo
405.296 149.375 404.061 142.322 412.895 145.519 cv
411.21 144.099 408.789 143.54 406.533 144.079 cv
403.392 144.827 405.001 148.729 405.296 149.375 cv
cp
f
259.835 196.981 mo
259.565 197.586 258.96 198.142 258.02 198.65 cv
257.134 199.146 256.313 199.395 255.557 199.395 cv
255.277 199.395 255.027 199.303 254.805 199.12 cv
254.584 198.936 254.473 198.709 254.473 198.439 cv
254.473 198.299 254.505 198.158 254.569 198.018 cv
257.972 190.371 li
258.025 190.264 258.053 190.172 258.053 190.096 cv
258.053 189.945 257.966 189.869 257.793 189.869 cv
257.437 189.869 257.016 190.071 256.53 190.477 cv
256.044 190.882 255.72 191.274 255.557 191.652 cv
252.107 199.395 li
249.758 199.395 li
253.76 190.371 li
253.814 190.252 253.841 190.156 253.841 190.08 cv
253.841 189.94 253.765 189.869 253.614 189.869 cv
253.269 189.869 252.852 190.085 252.367 190.517 cv
251.924 190.906 251.622 191.284 251.46 191.652 cv
248.009 199.395 li
245.547 199.395 li
249.564 190.371 li
249.581 190.258 li
249.581 190.15 249.521 190.048 249.402 189.95 cv
249.283 189.853 249.164 189.804 249.046 189.804 cv
246.243 189.804 li
245.984 189.804 245.854 189.653 245.854 189.351 cv
245.854 189.038 246 188.881 246.292 188.881 cv
250.228 188.881 li
251.297 188.881 251.929 189.07 252.124 189.448 cv
252.891 189.016 253.641 188.8 254.375 188.8 cv
254.765 188.8 255.137 188.838 255.493 188.913 cv
256.034 189.021 256.308 189.2 256.319 189.448 cv
256.773 189.016 257.465 188.8 258.393 188.8 cv
258.571 188.8 li
259.003 188.8 259.403 188.897 259.77 189.091 cv
260.202 189.318 260.418 189.61 260.418 189.967 cv
260.418 190.096 260.386 190.231 260.321 190.371 cv
257.032 197.775 li
257.016 197.856 li
257.016 197.931 257.065 197.969 257.162 197.969 cv
257.507 197.969 257.925 197.793 258.417 197.443 cv
258.909 197.092 259.236 196.743 259.397 196.398 cv
259.835 196.981 li
cp
1 1 1 rgb
f
263.512 194.519 mo
263.577 194.378 263.61 194.233 263.61 194.081 cv
263.61 193.876 263.54 193.773 263.399 193.773 cv
263.172 193.773 263.058 193.881 263.058 194.098 cv
263.058 194.206 263.097 194.305 263.172 194.397 cv
263.248 194.489 263.334 194.534 263.431 194.534 cv
263.512 194.519 li
cp
260.855 198.018 mo
262.119 195.166 li
261.924 195.113 261.828 194.929 261.828 194.616 cv
261.828 194.508 261.843 194.421 261.876 194.357 cv
261.703 194.454 261.579 194.594 261.504 194.778 cv
260.062 198.018 li
260.019 198.115 259.997 198.207 259.997 198.294 cv
259.997 198.455 260.072 198.536 260.224 198.536 cv
260.483 198.536 260.694 198.364 260.855 198.018 cv
cp
266.428 194.73 mo
265.899 195.28 265.089 195.609 263.998 195.718 cv
263.912 195.912 263.782 196.209 263.61 196.609 cv
262.778 198.466 261.828 199.395 260.759 199.395 cv
258.927 199.395 li
258.291 199.395 257.972 199.098 257.972 198.504 cv
257.972 198.126 258.101 197.64 258.361 197.045 cv
259.008 195.62 li
259.268 195.037 259.629 194.534 260.094 194.113 cv
260.623 193.627 261.168 193.385 261.731 193.385 cv
262.394 193.385 li
262.74 193.082 263.162 192.931 263.657 192.931 cv
264.306 192.931 264.63 193.201 264.63 193.741 cv
264.63 194.012 264.533 194.314 264.339 194.648 cv
264.522 194.692 264.673 194.713 264.792 194.713 cv
265.051 194.713 265.435 194.562 265.943 194.259 cv
266.428 194.73 li
cp
f
266.59 198.034 mo
268.162 194.503 li
268.119 194.438 268.038 194.405 267.918 194.405 cv
267.681 194.405 267.519 194.503 267.433 194.697 cv
266.008 197.921 li
265.943 198.062 265.91 198.18 265.91 198.277 cv
265.91 198.407 265.969 198.471 266.089 198.471 cv
266.293 198.471 266.461 198.325 266.59 198.034 cv
cp
271.887 197.03 mo
271.618 197.624 271.018 198.18 270.089 198.698 cv
269.203 199.184 268.382 199.427 267.626 199.427 cv
267.152 199.427 266.903 199.276 266.881 198.974 cv
266.461 199.297 266.072 199.46 265.716 199.46 cv
264.571 199.46 263.998 199.07 263.998 198.294 cv
263.998 197.894 264.144 197.365 264.436 196.705 cv
264.663 196.187 li
264.997 195.431 265.435 194.805 265.974 194.308 cv
266.612 193.725 267.293 193.433 268.016 193.433 cv
268.221 193.433 268.416 193.466 268.599 193.531 cv
270.673 188.881 li
273.021 188.881 li
269.101 197.694 li
269.085 197.758 li
269.085 197.878 269.155 197.937 269.296 197.937 cv
269.576 197.937 269.949 197.78 270.414 197.467 cv
270.662 197.294 271.013 196.949 271.466 196.43 cv
271.887 197.013 li
271.887 197.03 li
cp
f
273.572 195.96 mo
274.172 194.632 li
274.188 194.534 li
274.188 194.405 274.096 194.34 273.912 194.34 cv
273.686 194.34 273.529 194.443 273.443 194.648 cv
272.844 195.96 li
273.572 195.96 li
cp
277.088 196.981 mo
276.818 197.597 276.202 198.163 275.241 198.682 cv
274.355 199.158 273.594 199.395 272.956 199.395 cv
271.726 199.395 li
270.559 199.395 269.976 199.012 269.976 198.244 cv
269.976 197.845 270.127 197.316 270.43 196.657 cv
270.948 195.491 li
271.207 194.907 271.558 194.421 272.001 194.033 cv
272.497 193.601 273.032 193.385 273.605 193.385 cv
275.209 193.385 li
275.9 193.385 276.245 193.649 276.245 194.179 cv
276.245 194.503 276.057 195.091 275.679 195.944 cv
275.408 196.559 274.874 196.868 274.074 196.868 cv
272.455 196.868 li
272.066 197.727 li
271.99 197.899 271.953 198.05 271.953 198.18 cv
271.953 198.342 272.018 198.423 272.147 198.423 cv
272.617 198.423 li
273.665 198.423 274.653 198.115 275.581 197.499 cv
276.133 197.121 276.494 196.755 276.667 196.398 cv
277.088 196.965 li
277.088 196.981 li
cp
f
283.211 196.981 mo
282.941 197.575 282.341 198.131 281.413 198.65 cv
280.527 199.146 279.706 199.395 278.95 199.395 cv
278.27 199.395 277.93 199.087 277.93 198.471 cv
277.93 198.266 277.978 198.05 278.076 197.823 cv
279.21 195.296 li
279.226 195.216 li
279.096 195.013 li
278.838 194.924 li
278.708 194.924 278.583 195.059 278.465 195.329 cv
277.947 196.485 277.092 197.38 275.905 198.018 cv
275.549 198.212 275.247 198.32 274.998 198.342 cv
277.396 192.98 li
280.863 194.94 li
281.111 195.08 281.235 195.312 281.235 195.637 cv
281.186 195.831 li
280.474 197.451 li
280.43 197.548 280.408 197.634 280.408 197.71 cv
280.408 197.851 280.49 197.921 280.652 197.921 cv
280.975 197.921 281.373 197.748 281.842 197.402 cv
282.312 197.057 282.622 196.722 282.774 196.398 cv
283.211 196.981 li
cp
f
284.394 197.807 mo
285.804 194.632 li
285.836 194.534 li
285.836 194.405 285.744 194.34 285.561 194.34 cv
285.322 194.34 285.161 194.443 285.075 194.648 cv
283.697 197.727 li
283.622 197.899 283.584 198.055 283.584 198.196 cv
283.584 198.347 283.649 198.423 283.779 198.423 cv
284.006 198.423 284.21 198.218 284.394 197.807 cv
cp
289.529 196.965 mo
289.249 197.581 288.644 198.142 287.715 198.65 cv
286.829 199.146 286.008 199.395 285.252 199.395 cv
284.908 199.395 284.707 199.233 284.653 198.909 cv
284.264 199.254 283.827 199.427 283.341 199.427 cv
282.196 199.427 281.624 199.038 281.624 198.261 cv
281.624 197.851 281.77 197.316 282.062 196.657 cv
282.288 196.155 li
282.622 195.399 283.06 194.773 283.6 194.275 cv
284.248 193.682 284.929 193.385 285.641 193.385 cv
286.171 193.385 286.576 193.562 286.857 193.919 cv
287.003 193.595 li
288.493 193.595 li
287.78 195.199 li
287.564 195.695 287.235 196.441 286.792 197.435 cv
286.748 197.532 286.727 197.619 286.727 197.694 cv
286.727 197.834 286.808 197.904 286.969 197.904 cv
287.294 197.904 287.69 197.732 288.16 197.386 cv
288.631 197.04 288.941 196.712 289.092 196.398 cv
289.529 196.965 li
cp
f
293.175 196.981 mo
292.904 197.586 292.305 198.142 291.376 198.65 cv
290.49 199.146 289.669 199.395 288.914 199.395 cv
288.589 199.395 288.335 199.303 288.153 199.12 cv
287.968 198.936 287.876 198.704 287.876 198.423 cv
287.876 198.218 287.926 198.002 288.022 197.775 cv
289.561 194.324 li
288.946 194.324 li
289.302 193.547 li
289.901 193.547 li
291.992 188.881 li
294.34 188.881 li
292.268 193.547 li
292.914 193.547 li
292.558 194.324 li
291.911 194.324 li
290.372 197.775 li
290.355 197.856 li
290.355 197.931 290.41 197.969 290.517 197.969 cv
290.853 197.969 291.267 197.793 291.765 197.443 cv
292.261 197.092 292.586 196.743 292.737 196.398 cv
293.175 196.981 li
cp
f
295.2 195.96 mo
295.799 194.632 li
295.815 194.534 li
295.815 194.405 295.723 194.34 295.539 194.34 cv
295.312 194.34 295.156 194.443 295.069 194.648 cv
294.47 195.96 li
295.2 195.96 li
cp
298.715 196.981 mo
298.444 197.597 297.829 198.163 296.868 198.682 cv
295.982 199.158 295.221 199.395 294.583 199.395 cv
293.352 199.395 li
292.187 199.395 291.603 199.012 291.603 198.244 cv
291.603 197.845 291.754 197.316 292.057 196.657 cv
292.575 195.491 li
292.834 194.907 293.185 194.421 293.628 194.033 cv
294.125 193.601 294.659 193.385 295.231 193.385 cv
296.836 193.385 li
297.527 193.385 297.872 193.649 297.872 194.179 cv
297.872 194.503 297.683 195.091 297.305 195.944 cv
297.035 196.559 296.5 196.868 295.701 196.868 cv
294.082 196.868 li
293.693 197.727 li
293.618 197.899 293.579 198.05 293.579 198.18 cv
293.579 198.342 293.644 198.423 293.774 198.423 cv
294.243 198.423 li
295.291 198.423 296.279 198.115 297.208 197.499 cv
297.759 197.121 298.121 196.755 298.293 196.398 cv
298.715 196.965 li
298.715 196.981 li
cp
f
302.197 192.526 mo
303.235 190.225 li
303.25 190.161 li
303.25 190.053 303.169 189.998 303.008 189.998 cv
302.835 189.998 302.711 190.085 302.635 190.258 cv
302.278 191.068 301.733 192.289 300.999 193.919 cv
301.431 193.811 301.83 193.347 302.197 192.526 cv
cp
302.862 196.981 mo
302.56 197.662 301.976 198.244 301.112 198.73 cv
300.324 199.173 299.573 199.395 298.86 199.395 cv
298.353 199.395 297.926 199.259 297.581 198.99 cv
297.202 198.698 297.014 198.309 297.014 197.823 cv
297.014 197.662 297.045 197.505 297.11 197.354 cv
300.123 190.598 li
300.383 190.026 300.777 189.584 301.306 189.27 cv
301.792 188.989 302.328 188.849 302.91 188.849 cv
303.31 188.849 303.678 188.924 304.012 189.076 cv
304.411 189.259 304.611 189.507 304.611 189.821 cv
304.611 189.929 304.585 190.042 304.53 190.161 cv
303.477 192.526 li
302.851 193.93 301.792 194.919 300.303 195.491 cv
299.46 197.386 li
299.406 197.494 299.379 197.591 299.379 197.677 cv
299.379 197.916 299.546 198.034 299.881 198.034 cv
300.324 198.034 300.812 197.87 301.347 197.54 cv
301.881 197.211 302.241 196.83 302.424 196.398 cv
302.862 196.981 li
cp
f
302.828 200.642 mo
302.98 200.275 303.223 199.73 303.558 199.006 cv
303.18 199.266 302.899 199.513 302.716 199.752 cv
302.586 199.924 302.43 200.221 302.246 200.642 cv
302.229 200.707 li
302.229 200.826 302.311 200.885 302.473 200.885 cv
302.635 200.885 302.753 200.805 302.828 200.642 cv
cp
309.31 196.981 mo
309.071 197.521 308.554 198.029 307.754 198.504 cv
307.063 198.925 306.399 199.195 305.761 199.314 cv
305.34 200.269 li
305.081 200.863 304.643 201.328 304.027 201.662 cv
303.477 201.965 302.894 202.117 302.278 202.117 cv
301.835 202.117 301.457 202.022 301.144 201.833 cv
300.832 201.644 300.675 201.371 300.675 201.015 cv
300.675 200.82 300.723 200.615 300.82 200.399 cv
301.166 199.622 301.819 199.114 302.781 198.876 cv
302.036 198.737 301.663 198.342 301.663 197.694 cv
301.663 197.294 301.803 196.781 302.084 196.155 cv
303.461 193.061 li
305.13 194.048 li
303.785 197.078 li
303.709 197.241 303.671 197.38 303.671 197.499 cv
303.671 197.64 303.73 197.71 303.85 197.71 cv
304.098 197.71 304.324 197.483 304.53 197.03 cv
306.409 192.801 li
308.094 194.048 li
306.588 197.435 li
306.534 197.543 306.507 197.629 306.507 197.694 cv
306.507 197.834 306.593 197.904 306.766 197.904 cv
307.079 197.904 307.473 197.732 307.948 197.386 cv
308.424 197.04 308.731 196.712 308.872 196.398 cv
309.31 196.965 li
309.31 196.981 li
cp
f
313.635 197.807 mo
315.044 194.632 li
315.076 194.534 li
315.076 194.405 314.984 194.34 314.801 194.34 cv
314.564 194.34 314.401 194.443 314.315 194.648 cv
312.938 197.727 li
312.862 197.899 312.824 198.055 312.824 198.196 cv
312.824 198.347 312.889 198.423 313.019 198.423 cv
313.245 198.423 313.451 198.218 313.635 197.807 cv
cp
318.77 196.965 mo
318.489 197.581 317.884 198.142 316.956 198.65 cv
316.07 199.146 315.249 199.395 314.493 199.395 cv
314.147 199.395 313.948 199.233 313.894 198.909 cv
313.505 199.254 313.068 199.427 312.581 199.427 cv
311.437 199.427 310.864 199.038 310.864 198.261 cv
310.864 197.851 311.01 197.316 311.301 196.657 cv
311.528 196.155 li
311.864 195.399 312.3 194.773 312.841 194.275 cv
313.489 193.682 314.169 193.385 314.882 193.385 cv
315.411 193.385 315.816 193.562 316.096 193.919 cv
316.242 193.595 li
317.733 193.595 li
317.02 195.199 li
316.804 195.695 316.474 196.441 316.031 197.435 cv
315.989 197.532 315.967 197.619 315.967 197.694 cv
315.967 197.834 316.048 197.904 316.211 197.904 cv
316.534 197.904 316.931 197.732 317.401 197.386 cv
317.87 197.04 318.181 196.712 318.332 196.398 cv
318.77 196.965 li
cp
f
324.116 196.981 mo
323.845 197.597 323.23 198.163 322.268 198.682 cv
321.383 199.158 320.621 199.395 319.985 199.395 cv
318.753 199.395 li
317.587 199.395 317.003 199.012 317.003 198.244 cv
317.003 197.845 317.155 197.316 317.457 196.657 cv
317.976 195.491 li
318.235 194.907 318.585 194.421 319.028 194.033 cv
319.526 193.601 320.06 193.385 320.633 193.385 cv
322.237 193.385 li
322.927 193.385 323.274 193.655 323.274 194.194 cv
323.274 194.314 323.257 194.454 323.224 194.616 cv
320.811 195.491 li
321.199 194.632 li
321.215 194.534 li
321.215 194.405 321.124 194.34 320.94 194.34 cv
320.713 194.34 320.557 194.443 320.47 194.648 cv
319.094 197.727 li
319.018 197.899 318.98 198.05 318.98 198.18 cv
318.98 198.342 319.044 198.423 319.174 198.423 cv
319.644 198.423 li
320.681 198.423 321.669 198.115 322.609 197.499 cv
323.159 197.132 323.521 196.765 323.694 196.398 cv
324.116 196.965 li
324.116 196.981 li
cp
f
327.695 196.981 mo
327.426 197.586 326.826 198.142 325.897 198.65 cv
325.012 199.146 324.191 199.395 323.435 199.395 cv
323.11 199.395 322.857 199.303 322.673 199.12 cv
322.49 198.936 322.398 198.704 322.398 198.423 cv
322.398 198.218 322.447 198.002 322.544 197.775 cv
324.082 194.324 li
323.467 194.324 li
323.824 193.547 li
324.423 193.547 li
326.513 188.881 li
328.862 188.881 li
326.788 193.547 li
327.436 193.547 li
327.079 194.324 li
326.432 194.324 li
324.893 197.775 li
324.877 197.856 li
324.877 197.931 324.93 197.969 325.038 197.969 cv
325.373 197.969 325.789 197.793 326.287 197.443 cv
326.782 197.092 327.107 196.743 327.259 196.398 cv
327.695 196.981 li
cp
f
331.681 191.327 mo
331.551 191.619 331.297 191.851 330.919 192.023 cv
330.605 192.164 330.293 192.234 329.98 192.234 cv
329.731 192.234 329.51 192.181 329.315 192.073 cv
329.121 191.965 329.023 191.813 329.023 191.619 cv
329.023 191.532 329.045 191.435 329.088 191.327 cv
329.219 191.046 329.472 190.819 329.85 190.647 cv
330.163 190.496 330.476 190.42 330.79 190.42 cv
331.038 190.42 331.259 190.474 331.454 190.582 cv
331.648 190.69 331.745 190.847 331.745 191.052 cv
331.745 191.138 331.723 191.23 331.681 191.327 cv
cp
331.502 196.981 mo
331.244 197.575 330.644 198.131 329.704 198.65 cv
328.819 199.146 327.998 199.395 327.242 199.395 cv
326.962 199.395 326.729 199.289 326.545 199.079 cv
326.362 198.868 326.27 198.623 326.27 198.342 cv
326.27 198.158 326.308 197.98 326.383 197.807 cv
328.505 193.061 li
330.287 194.048 li
328.781 197.435 li
328.738 197.543 328.716 197.629 328.716 197.694 cv
328.716 197.834 328.797 197.904 328.959 197.904 cv
329.284 197.904 329.68 197.732 330.15 197.386 cv
330.619 197.04 330.93 196.712 331.082 196.398 cv
331.519 196.965 li
331.502 196.981 li
cp
f
335.325 196.657 mo
335.002 197.392 334.478 198.029 333.754 198.569 cv
332.998 199.141 332.258 199.427 331.535 199.427 cv
330.379 199.427 329.801 199.038 329.801 198.261 cv
329.801 197.861 329.952 197.327 330.255 196.657 cv
331.616 193.595 li
333.738 193.595 li
331.891 197.727 li
331.815 197.899 331.778 198.055 331.778 198.196 cv
331.778 198.347 331.843 198.423 331.972 198.423 cv
332.199 198.423 332.398 198.218 332.572 197.807 cv
334.694 193.061 li
336.492 194.048 li
335.325 196.657 li
cp
f
338.889 195.96 mo
339.489 194.632 li
339.505 194.534 li
339.505 194.405 339.413 194.34 339.229 194.34 cv
339.003 194.34 338.846 194.443 338.76 194.648 cv
338.16 195.96 li
338.889 195.96 li
cp
342.405 196.981 mo
342.135 197.597 341.519 198.163 340.558 198.682 cv
339.672 199.158 338.911 199.395 338.273 199.395 cv
337.043 199.395 li
335.876 199.395 335.293 199.012 335.293 198.244 cv
335.293 197.845 335.444 197.316 335.747 196.657 cv
336.265 195.491 li
336.524 194.907 336.875 194.421 337.318 194.033 cv
337.814 193.601 338.349 193.385 338.922 193.385 cv
340.526 193.385 li
341.216 193.385 341.562 193.649 341.562 194.179 cv
341.562 194.503 341.374 195.091 340.996 195.944 cv
340.725 196.559 340.191 196.868 339.391 196.868 cv
337.772 196.868 li
337.383 197.727 li
337.307 197.899 337.269 198.05 337.269 198.18 cv
337.269 198.342 337.334 198.423 337.464 198.423 cv
337.934 198.423 li
338.981 198.423 339.969 198.115 340.897 197.499 cv
341.449 197.121 341.811 196.755 341.984 196.398 cv
342.405 196.965 li
342.405 196.981 li
cp
f
267.906 85.9012 mo
268.02 86.2814 268.375 86.523 268.752 86.5195 cv
276.134 86.4206 li
276.693 86.4136 li
277.415 86.4031 277.99 85.8133 277.98 85.0939 cv
277.975 84.8166 277.887 84.5609 277.739 84.3521 cv
277.485 83.9993 277.367 83.6367 277.287 83.2711 cv
277.257 83.1177 li
277.2 82.7982 277.193 82.4748 277.204 82.1514 cv
277.212 81.7752 277.233 81.3973 277.257 81.0176 cv
277.367 79.8799 li
277.389 79.737 li
277.687 77.5942 li
277.739 77.215 277.798 76.8349 277.833 76.4534 cv
277.865 76.0738 277.915 75.6941 277.929 75.3161 cv
277.968 74.5637 277.957 73.8145 277.905 73.0657 cv
277.883 72.8609 277.865 72.6539 277.844 72.4526 cv
277.829 72.2848 277.809 72.1174 277.783 71.9512 cv
277.741 71.5768 277.67 71.2072 277.606 70.8381 cv
277.528 70.4724 277.45 70.1038 277.35 69.7364 cv
277.311 69.6002 li
277.222 69.282 277.126 68.963 277.012 68.643 cv
276.891 68.2809 276.735 67.9166 276.579 67.558 cv
276.461 67.3058 276.337 67.0531 276.194 66.8039 cv
278.964 61.6325 li
283.681 52.8258 li
283.815 52.5695 li
284.241 51.7768 284.284 50.8808 284.015 50.0915 cv
283.769 49.3778 283.261 48.7525 282.543 48.3657 cv
281.033 47.555 279.147 48.1236 278.337 49.6375 cv
278.271 49.7628 278.207 49.9078 278.157 50.0366 cv
277.992 50.4835 li
272.367 65.8907 li
272.302 66.066 li
272.289 66.1012 li
272.246 66.2247 272.218 66.3482 272.203 66.4774 cv
272.203 66.4844 li
272.19 66.6101 272.192 66.7331 272.207 66.8535 cv
272.258 67.2192 li
272.818 71.3048 li
273.123 73.5284 li
273.479 75.7503 li
273.604 76.489 273.739 77.2255 273.87 77.9656 cv
274.116 79.5494 li
274.216 80.1857 li
274.346 81.3019 li
274.442 82.4181 li
274.461 82.6563 li
274.467 82.7662 274.467 82.8721 274.464 82.9832 cv
268.487 84.8061 li
268.024 84.9489 267.764 85.4384 267.906 85.9012 cv
cp
.941176 .745098 .572549 rgb
f
268.487 84.8061 mo
274.464 82.9832 li
274.467 82.8721 274.467 82.7662 274.461 82.6563 cv
274.161 82.607 li
277.456 82.607 li
277.456 83.1389 li
278.168 83.1389 li
278.168 83.2676 li
277.257 83.1177 li
277.287 83.2711 li
277.367 83.6367 277.485 83.9993 277.739 84.3521 cv
277.887 84.5609 277.975 84.8166 277.98 85.0939 cv
277.99 85.8133 277.415 86.4031 276.693 86.4136 cv
276.134 86.4206 li
268.752 86.5195 li
268.375 86.523 268.02 86.2814 267.906 85.9012 cv
267.764 85.4384 268.024 84.9489 268.487 84.8061 cv
cp
.231373 .258824 .301961 rgb
f
272.203 66.4774 mo
272.203 66.4844 li
272.258 67.2192 li
273.153 79.4971 li
273.369 82.4748 li
274.461 82.6563 li
275.157 82.7697 li
275.42 82.8119 li
277.257 83.1177 li
278.743 83.363 li
278.487 79.8025 li
278.026 73.4119 li
277.844 72.4526 li
277.311 69.6002 li
277.222 69.282 277.126 68.963 277.012 68.643 cv
276.891 68.2809 276.735 67.9166 276.579 67.558 cv
276.461 67.3058 276.337 67.0531 276.194 66.8039 cv
278.964 61.6325 li
283.681 52.8258 li
283.815 52.5695 li
284.241 51.7768 284.284 50.8808 284.015 50.0915 cv
282.166 49.108 li
277.992 50.4835 li
272.367 65.8907 li
272.302 66.066 li
272.203 66.4774 li
cp
.2 .2 .2 rgb
f
276.206 33.3378 mo
270.116 42.7175 li
270.841 42.173 li
263.283 45.4654 li
263.037 45.6069 li
262.991 45.6425 li
259.948 47.8995 li
259.394 48.313 259.278 49.0953 259.69 49.6516 cv
260.102 50.2066 260.886 50.3227 261.442 49.9113 cv
261.647 49.7171 li
264.107 46.8347 li
263.815 47.011 li
271.799 44.9587 li
272.058 44.8932 272.272 44.7433 272.423 44.5469 cv
272.523 44.4164 li
279.321 35.5355 li
279.961 34.7001 279.801 33.5021 278.965 32.861 cv
278.13 32.222 276.931 32.3807 276.292 33.216 cv
276.206 33.3378 li
cp
.968627 .733333 .533333 rgb
f
274.801 35.154 mo
274.801 35.154 275.256 39.1069 275.711 43.0616 cv
275.826 44.0508 275.938 45.0383 276.046 45.9672 cv
276.075 46.1966 276.099 46.4247 276.128 46.6488 cv
276.134 46.7372 li
276.153 46.9283 276.159 47.1173 276.184 47.3027 cv
276.23 47.7246 276.274 48.1276 276.312 48.4998 cv
276.472 49.9838 276.579 50.9695 276.579 50.9695 cv
276.71 52.218 li
276.953 54.4487 278.953 56.0668 281.185 55.8285 cv
281.37 55.8035 li
281.988 55.7086 282.561 55.4765 283.048 55.1395 cv
284.241 54.3217 284.959 52.893 284.797 51.3545 cv
284.783 51.2258 284.761 51.0948 284.735 50.9695 cv
284.735 50.9695 284.686 50.7221 284.597 50.291 cv
284.501 49.8586 284.399 49.2403 284.256 48.4998 cv
284.188 48.1276 284.113 47.7246 284.036 47.3027 cv
284.018 47.1964 283.994 47.0887 283.982 46.9793 cv
283.972 46.8698 283.989 46.7582 283.997 46.6488 cv
284 46.6102 li
284.021 46.4036 284.036 46.1936 284.057 45.9796 cv
284.057 45.9672 li
284.139 45.0383 284.227 44.0508 284.316 43.0616 cv
284.669 39.1069 285.02 35.154 285.02 35.154 cv
285.031 35.0195 li
285.069 34.5744 285.053 34.1384 284.976 33.7179 cv
282.97 31.021 li
282.514 30.4079 li
282.18 29.961 li
282.056 29.8973 li
281.999 29.7985 281.946 29.6942 281.9 29.5831 cv
281.796 29.3567 281.704 29.1133 281.627 28.8554 cv
281.1 27.156 281.11 25.0259 281.11 25.0259 cv
276.668 27.3203 li
277.726 27.1384 277.734 28.4506 277.47 29.82 cv
277.42 30.0652 li
277.42 30.0652 274.965 33.4692 274.808 35.009 cv
274.801 35.154 li
cp
1 .854902 .729412 rgb
f
274.801 35.154 mo
274.801 35.154 275.256 39.1069 275.711 43.0616 cv
275.826 44.0508 275.938 45.0383 276.046 45.9672 cv
276.075 46.1966 276.099 46.4247 276.128 46.6488 cv
276.134 46.7372 li
278.055 47.6789 279.713 48.4862 279.713 48.4862 cv
279.713 48.4862 282.078 47.4719 284 46.6102 cv
284.021 46.4036 284.036 46.1936 284.057 45.9796 cv
284.057 45.9672 li
284.139 45.0383 284.227 44.0508 284.316 43.0616 cv
284.669 39.1069 285.02 35.154 285.02 35.154 cv
285.031 35.0195 li
285.069 34.5744 285.053 34.1384 284.976 33.7179 cv
282.97 31.021 li
282.514 30.4079 li
282.18 29.961 li
282.056 29.8973 li
281.999 29.7985 281.946 29.6942 281.9 29.5831 cv
281.796 29.3567 281.704 29.1133 281.627 28.8554 cv
277.47 29.82 li
277.42 30.0652 li
277.42 30.0652 273.749 33.4652 273.591 35.0055 cv
274.801 35.154 li
cp
1 1 1 rgb
f
273.591 35.0055 mo
274.103 34.9967 276.266 35.0055 277.117 35.0108 cv
279.927 30.6273 li
282.514 30.4079 li
282.97 31.021 li
280.055 30.9959 278.878 35.027 278.878 35.027 cv
280.655 44.575 li
280.655 44.575 282.613 45.4127 284.057 45.9796 cv
284.036 46.2072 284.018 46.4282 283.997 46.6488 cv
283.989 46.7582 283.972 46.8698 283.982 46.9793 cv
283.994 47.0887 284.018 47.1964 284.036 47.3027 cv
284.113 47.7246 284.188 48.1276 284.256 48.4998 cv
284.399 49.2403 284.501 49.8586 284.597 50.291 cv
284.686 50.7221 284.735 50.9695 284.735 50.9695 cv
284.761 51.0948 284.783 51.2258 284.797 51.3545 cv
284.959 52.893 284.241 54.3217 283.048 55.1395 cv
281.37 55.8035 li
281.185 55.8285 li
278.953 56.0668 276.953 54.4487 276.71 52.218 cv
276.579 50.9695 li
276.579 50.9695 276.472 49.9838 276.312 48.4998 cv
276.274 48.1276 276.23 47.7246 276.184 47.3027 cv
276.155 47.0887 276.149 46.8734 276.128 46.6488 cv
276.099 46.4247 276.075 46.1966 276.046 45.9672 cv
275.938 45.0383 275.826 44.0508 275.711 43.0616 cv
275.256 39.1069 273.587 35.0534 273.591 35.0055 cv
cp
.2 .2 .2 rgb
f
278.026 54.5709 mo
278.026 54.7242 278.036 54.8868 278.055 55.0336 cv
278.964 61.6325 li
280.243 70.9075 li
280.275 71.1369 li
280.307 71.3474 280.383 71.5447 280.485 71.7197 cv
280.615 71.9372 li
283.328 76.3546 li
283.842 77.3753 li
284.036 77.745 284.239 78.1137 284.437 78.4828 cv
284.828 79.2264 285.233 79.9576 285.649 80.6906 cv
286.069 81.4201 286.445 82.1689 286.844 82.9076 cv
287.018 83.2395 287.174 83.5822 287.338 83.918 cv
287.384 84.0128 li
287.395 84.0344 li
287.856 85.0698 li
287.906 85.1828 li
287.917 85.2034 li
283.758 86.6219 li
283.3 86.7793 283.055 87.2811 283.21 87.7386 cv
283.336 88.102 283.676 88.3336 284.042 88.3336 cv
290.355 88.3459 li
290.946 88.3459 li
291.788 88.3494 292.47 87.6678 292.473 86.825 cv
292.473 86.2493 292.153 85.7439 291.68 85.4864 cv
291.436 85.3326 li
291.226 85.1576 li
291.037 84.9687 li
290.871 84.7779 li
290.867 84.7709 li
290.753 84.6404 290.66 84.4936 290.568 84.3486 cv
290.507 84.248 290.457 84.1421 290.409 84.0397 cv
290.362 83.8929 290.32 83.7518 290.277 83.6051 cv
290.228 83.4425 290.18 83.275 290.138 83.1067 cv
290.112 83.0149 290.089 82.9182 290.064 82.8246 cv
289.921 82.1975 li
289.874 81.987 289.822 81.7822 289.786 81.5686 cv
289.328 79.0163 li
289.254 78.5909 289.144 78.1809 289.05 77.7621 cv
288.941 77.3543 288.82 76.95 288.681 76.5505 cv
288.61 76.3546 288.546 76.1532 288.464 75.9608 cv
288.385 75.7648 li
288.333 75.6374 288.283 75.5046 288.222 75.3816 cv
287.959 74.809 li
287.68 74.2474 li
287.564 74.0232 li
287.558 74.0122 li
287.438 73.822 287.304 73.6326 287.181 73.4401 cv
287.018 73.2107 li
286.939 73.0995 286.861 72.9896 286.783 72.8785 cv
286.513 72.5128 286.225 72.149 285.919 71.7974 cv
285.763 71.6278 285.613 71.4498 285.446 71.2837 cv
285.29 71.1088 285.113 70.9479 284.937 70.7819 cv
284.682 70.5362 li
284.401 70.3015 li
284.291 70.2096 284.178 70.1178 284.057 70.0277 cv
284.153 62.169 li
284.241 54.6451 li
284.249 53.9701 284.042 53.3417 283.681 52.8258 cv
283.125 52.0326 282.208 51.5131 281.171 51.4995 cv
279.454 51.4779 278.047 52.8539 278.026 54.5709 cv
cp
.74902 .52549 .329412 rgb
f
283.758 86.6219 mo
287.917 85.2034 li
287.906 85.1828 li
287.856 85.0698 li
286.698 85.1828 li
286.494 84.7393 li
291.273 84.7393 li
290.871 84.7779 li
291.037 84.9687 li
291.226 85.1576 li
291.436 85.3326 li
291.68 85.4864 li
292.153 85.7439 292.473 86.2493 292.473 86.825 cv
292.47 87.6678 291.788 88.3494 290.946 88.3459 cv
290.355 88.3459 li
284.042 88.3336 li
283.676 88.3336 283.336 88.102 283.21 87.7386 cv
283.055 87.2811 283.3 86.7793 283.758 86.6219 cv
cp
.231373 .258824 .301961 rgb
f
250.68 79.214 mo
250.958 79.214 251.223 79.0497 251.335 78.7759 cv
258.906 60.5408 270.438 33.0311 271.44 31.3708 cv
271.603 31.1919 271.672 30.9357 271.598 30.687 cv
271.487 30.3108 271.089 30.0973 270.713 30.2084 cv
270.286 30.3354 270.21 30.3566 266.874 38.116 cv
265.173 42.0741 262.84 47.5782 259.941 54.4808 cv
255.005 66.23 250.073 78.1124 250.024 78.2302 cv
249.873 78.594 250.045 79.0088 250.407 79.1596 cv
250.497 79.1965 250.589 79.214 250.68 79.214 cv
cp
.25098 .25098 .25098 rgb
f
264.992 35.7543 mo
265.064 36.4416 265.675 36.9418 266.364 36.8741 cv
266.626 36.8213 li
269.95 35.7368 li
276.641 43.7238 li
277.137 44.321 278.026 44.3988 278.623 43.897 cv
278.758 43.7875 278.863 43.6601 278.943 43.5173 cv
279.025 43.3741 li
282.308 37.5741 li
283.602 35.2846 li
284.121 34.3643 283.798 33.2024 282.88 32.6848 cv
281.963 32.1657 280.798 32.4887 280.278 33.4055 cv
280.198 33.5624 li
279.038 36.1499 li
277.209 40.2267 li
270.817 34.2338 li
270.618 34.0448 270.359 33.9671 270.106 33.9881 cv
270.058 33.997 li
266.116 34.3819 li
265.429 34.4544 264.925 35.0657 264.992 35.7543 cv
cp
1 .792157 .619608 rgb
f
273.591 22.6151 mo
273.593 23.1944 273.833 24.7113 273.891 24.9341 cv
274.429 26.9903 275.5 28.216 275.5 28.216 cv
275.5 28.216 279.218 27.5146 280.88 26.2854 cv
282.15 25.3419 283.08 24.0899 283.08 22.6081 cv
283.078 19.187 282.631 16.4206 278.332 16.4206 cv
275.393 16.4206 274.258 17.7135 273.831 19.6194 cv
273.636 20.5062 273.591 21.527 273.591 22.6151 cv
cp
1 .854902 .729412 rgb
f
273.911 19.7271 mo
274.158 19.2964 275.154 19.8281 275.821 20.0342 cv
276.832 20.3471 277.592 21.9683 277.997 22.9698 cv
278.628 24.5334 278.405 26.4529 279.375 27.7814 cv
280.51 29.3322 283.52 32.9392 286.266 31.6283 cv
283.673 30.0898 285.173 24.7733 284.744 22.1471 cv
284.355 19.7626 282.154 16.592 279.669 16.0695 cv
278.005 15.7197 274.136 16.6873 273.686 18.6882 cv
273.552 19.2801 273.493 20.4583 273.911 19.7271 cv
cp
.129412 .0980392 .0705882 rgb
f
257.609 81.0439 mo
244.102 75.586 li
240.73 78.9917 li
242.146 79.977 li
244.28 78.9917 li
243.746 81.0439 li
249.169 83.5313 li
251.211 81.2206 li
250.678 83.5313 li
253.698 84.5447 li
254.942 82.8206 li
254.942 84.5447 li
257.609 86.3587 li
259.208 81.7541 li
257.609 81.0439 li
cp
.2 .2 .2 rgb
f
278.026 54.5709 mo
278.026 54.7242 278.036 54.8868 278.055 55.0336 cv
278.964 61.6325 li
280.243 70.9075 li
280.275 71.1369 li
280.615 71.9372 li
286.176 84.0432 li
286.698 85.1828 li
287.856 85.0698 li
290.871 84.7779 li
293.095 84.5609 li
292.47 83.3915 li
288.385 75.7648 li
287.018 73.2107 li
284.797 69.0614 li
284.153 62.169 li
284.241 54.6451 li
284.249 53.9701 284.042 53.3417 283.681 52.8258 cv
283.125 52.0326 282.208 51.5131 281.171 51.4995 cv
279.454 51.4779 278.047 52.8539 278.026 54.5709 cv
cp
f
279.038 36.1499 mo
282.308 37.5741 li
283.602 35.2846 li
284.121 34.3643 283.798 33.2024 282.88 32.6848 cv
281.963 32.1657 280.798 32.4887 280.278 33.4055 cv
280.198 33.5624 li
279.038 36.1499 li
cp
1 1 1 rgb
f
225 225 mo
0 225 li
0 0 li
225 0 li
225 225 li
.588235 .705882 0 rgb
f
49.0482 78.9946 mo
33.0893 78.6061 20.2712 65.5476 20.2712 49.4951 cv
20.2712 33.198 33.4824 19.9867 49.7796 19.9867 cv
65.646 19.9867 78.5875 32.5085 79.2605 48.2093 cv
66.2829 55.0912 55.6906 65.873 49.0482 78.9946 cv
.678431 .772549 0 rgb
f
175.958 78.9228 mo
169.376 65.9577 158.939 55.2842 146.152 48.4071 cv
146.683 32.5764 159.684 19.9072 175.644 19.9072 cv
191.941 19.9072 205.153 33.1185 205.153 49.4156 cv
205.153 65.6082 192.111 78.755 175.958 78.9228 cv
f
49.7796 204.024 mo
33.4824 204.024 20.2712 190.813 20.2712 174.516 cv
20.2712 158.218 33.4824 145.007 49.7796 145.007 cv
49.8631 145.007 49.9472 145.007 50.0305 145.008 cv
56.7159 157.29 66.9177 167.383 79.2823 173.934 cv
79.2861 174.127 79.288 174.322 79.288 174.516 cv
79.288 190.813 66.0767 204.024 49.7796 204.024 cv
f
112.521 182.166 mo
100.514 182.166 89.2018 179.19 79.2823 173.934 cv
78.9746 157.988 66.0188 145.141 50.0305 145.008 cv
44.5399 134.921 41.4212 123.359 41.4212 111.066 cv
41.4212 99.5283 44.1708 88.6297 49.0482 78.9946 cv
49.2915 79.0005 49.5349 79.0035 49.7796 79.0035 cv
66.0767 79.0035 79.288 65.7923 79.288 49.4951 cv
79.288 49.0644 79.2787 48.6355 79.2605 48.2093 cv
89.1856 42.946 100.504 39.9659 112.521 39.9659 cv
124.687 39.9659 136.139 43.0217 146.152 48.4071 cv
146.141 48.7416 146.135 49.0784 146.135 49.4156 cv
146.135 65.7126 159.347 78.9244 175.644 78.9244 cv
175.748 78.9244 175.854 78.9239 175.958 78.9228 cv
180.858 88.5756 183.621 99.4996 183.621 111.066 cv
183.621 150.334 151.789 182.166 112.521 182.166 cv
.517647 .635294 0 rgb
f
49.7796 79.0035 mo
49.5349 79.0035 49.2915 79.0005 49.0482 78.9946 cv
55.6906 65.873 66.2829 55.0912 79.2605 48.2093 cv
79.2787 48.6355 79.288 49.0644 79.288 49.4951 cv
79.288 65.7923 66.0767 79.0035 49.7796 79.0035 cv
.6 .717647 0 rgb
f
175.644 78.9244 mo
159.347 78.9244 146.135 65.7126 146.135 49.4156 cv
146.135 49.0784 146.141 48.7416 146.152 48.4071 cv
158.939 55.2842 169.376 65.9577 175.958 78.9228 cv
175.854 78.9239 175.748 78.9244 175.644 78.9244 cv
f
79.2823 173.934 mo
66.9177 167.383 56.7159 157.29 50.0305 145.008 cv
66.0188 145.141 78.9746 157.988 79.2823 173.934 cv
f
176.48 34.0343 mo
181.429 43.4496 li
180.661 42.8203 li
189.381 46.4071 li
189.49 46.452 189.587 46.5139 189.669 46.5873 cv
189.714 46.6277 li
192.4 49.0315 li
192.889 49.4701 192.93 50.2238 192.492 50.7133 cv
192.053 51.2033 191.299 51.2446 190.809 50.8052 cv
190.631 50.6052 li
188.554 47.6596 li
188.886 47.8802 li
179.769 45.4768 li
179.471 45.3977 179.23 45.211 179.078 44.9697 cv
179.002 44.8483 li
173.337 35.8448 li
172.804 34.9967 173.059 33.8765 173.907 33.3418 cv
174.755 32.8091 175.876 33.0636 176.409 33.9117 cv
176.48 34.0343 li
cp
.968627 .733333 .533333 rgb
f
183.265 68.2018 mo
179.893 67.3787 li
178.735 67.0913 li
178.694 66.9788 178.662 66.8668 178.646 66.7476 cv
178.622 66.65 li
178.622 66.6355 li
178.614 66.6105 li
178.614 66.6021 li
178.597 66.4519 li
178.535 65.7316 li
178.511 65.4939 178.502 65.254 178.494 65.0136 cv
178.479 64.7662 178.455 64.5262 178.455 64.2867 cv
178.43 62.8404 li
178.415 61.8727 178.455 60.9064 178.43 59.9401 cv
178.415 58.486 li
178.375 57.2229 li
178.886 53.2041 li
178.974 52.548 178.654 51.8691 178.031 51.5254 cv
177.823 51.4059 li
174.475 49.5593 li
165.829 44.7816 li
165.686 44.7104 165.534 44.6378 165.382 44.5816 cv
163.84 44.0389 162.146 44.8457 161.603 46.3882 cv
161.267 47.3555 161.459 48.3772 162.035 49.1449 cv
162.362 49.6006 162.841 49.9592 163.416 50.1592 cv
165.574 50.926 li
172.286 53.2916 li
174.595 54.0988 li
174.547 54.2021 174.499 54.2988 174.459 54.4021 cv
174.388 54.5704 174.331 54.7299 174.267 54.9057 cv
174.156 55.2415 174.06 55.5684 173.972 55.912 cv
173.94 56.0803 173.9 56.2482 173.868 56.4161 cv
173.836 56.5919 173.804 56.7598 173.781 56.9272 cv
173.772 57.0718 li
173.781 57.3908 li
173.788 57.8782 173.821 58.3572 173.868 58.837 cv
173.9 59.0765 173.924 59.3165 173.964 59.5569 cv
173.995 59.7964 174.044 60.0358 174.092 60.2753 cv
174.14 60.5149 174.195 60.746 174.26 60.9864 cv
174.459 61.6979 li
174.515 61.929 174.603 62.1686 174.684 62.401 cv
174.915 63.112 li
175.394 64.5262 li
175.482 64.7578 175.539 64.9973 175.61 65.2377 cv
175.682 65.4688 175.746 65.7084 175.801 65.9399 cv
175.866 66.1794 175.922 66.4189 175.969 66.6584 cv
176.009 66.8351 li
176.009 66.8584 li
176.018 66.9459 li
176.025 66.9541 li
176.025 66.9625 li
176.034 67.0104 li
176.057 67.0979 li
176.082 67.2187 176.097 67.3374 176.114 67.4582 cv
176.153 67.6977 176.146 67.9372 176.137 68.1767 cv
176.129 68.2809 176.114 68.3767 176.089 68.4808 cv
176.065 68.6329 176.025 68.7849 175.962 68.937 cv
175.89 69.1119 175.857 69.3202 175.882 69.5285 cv
175.962 70.1662 176.545 70.6302 177.192 70.5511 cv
177.648 70.5014 li
183.161 69.8471 li
183.497 69.8075 183.792 69.568 183.872 69.216 cv
183.984 68.7683 183.712 68.3121 183.265 68.2018 cv
cp
f
183.872 69.216 mo
183.792 69.568 183.497 69.8075 183.161 69.8471 cv
177.648 70.5014 li
177.192 70.5511 li
176.545 70.6302 175.962 70.1662 175.882 69.5285 cv
175.857 69.3202 175.89 69.1119 175.962 68.937 cv
176.025 68.7849 176.065 68.6329 176.089 68.4808 cv
179.893 67.3787 li
183.265 68.2018 li
183.712 68.3121 183.984 68.7683 183.872 69.216 cv
cp
.2 .2 .2 rgb
f
174.474 49.5593 mo
172.285 53.2898 li
165.57 50.9242 li
162.031 49.1431 li
161.456 48.3781 161.266 47.3537 161.605 46.3864 cv
162.149 44.8457 163.84 44.038 165.38 44.5816 cv
165.533 44.637 165.689 44.7078 165.826 44.7816 cv
174.474 49.5593 li
cp
f
179.41 32.193 mo
178.721 31.3546 177.841 32.4628 177.165 33.7003 cv
177.165 33.7003 177.115 34.2861 177.004 35.0732 cv
176.817 36.4082 176.462 38.3348 175.895 38.9948 cv
175.895 38.9948 173.112 41.5595 170.33 44.129 cv
169.633 44.7715 168.936 45.4144 168.285 46.0156 cv
168.122 46.1641 167.963 46.3131 167.805 46.455 cv
167.65 46.6035 167.511 46.7556 167.355 46.8913 cv
167.321 46.9244 li
167.067 47.1612 166.824 47.3901 166.598 47.6033 cv
166.519 47.6745 li
165.486 48.6457 164.795 49.2916 164.795 49.2916 cv
163.927 50.1095 li
162.365 51.5668 159.921 51.4885 158.46 49.9328 cv
157 48.3715 157.078 45.9281 158.634 44.4674 cv
158.724 44.3834 158.823 44.3012 158.918 44.2279 cv
158.918 44.2279 159.106 44.0785 159.438 43.8249 cv
159.651 43.6627 159.915 43.4531 160.222 43.2061 cv
160.4 43.0607 160.591 42.9087 160.796 42.746 cv
161.078 42.5171 161.378 42.2727 161.699 42.0192 cv
161.936 41.8201 li
162 41.7498 li
162.133 41.5696 li
162.258 41.3977 162.382 41.2229 162.51 41.0427 cv
163.028 40.3224 163.579 39.5556 164.127 38.7874 cv
166.233 35.8532 169.505 32.8544 170.067 32.3753 cv
170.127 32.3209 li
172.062 31.4517 li
173.059 31.0025 li
173.784 30.6787 li
173.798 30.6712 li
173.926 30.7067 li
174.031 30.6677 174.133 30.6281 174.234 30.5762 cv
175.895 29.8195 177.636 27.7782 177.636 27.7782 cv
179.41 32.193 li
cp
1 .854902 .729412 rgb
f
171.179 38.9342 mo
168.743 38.5378 168.445 33.4436 172.419 32.723 cv
178.123 33.4841 173.615 39.3319 171.179 38.9342 cv
cp
173.784 30.6787 mo
173.059 31.0025 li
172.062 31.4517 li
170.127 32.3209 li
170.067 32.3753 li
169.505 32.8544 166.233 35.8532 164.127 38.7874 cv
163.579 39.5556 163.028 40.3224 162.51 41.0427 cv
162.382 41.2229 162.258 41.3977 162.133 41.5696 cv
162 41.7498 li
161.936 41.8201 li
161.699 42.0192 li
161.378 42.2727 161.078 42.5171 160.796 42.746 cv
160.591 42.9087 160.4 43.0607 160.222 43.2061 cv
162.524 44.8014 164.982 46.4963 166.598 47.6033 cv
166.824 47.3901 167.067 47.1612 167.321 46.9244 cv
167.355 46.8913 li
167.511 46.7556 167.65 46.6035 167.805 46.455 cv
167.963 46.3131 168.122 46.1641 168.285 46.0156 cv
168.936 45.4144 169.633 44.7715 170.33 44.129 cv
173.112 41.5595 177.004 40.4393 177.004 40.4393 cv
177.572 39.7802 176.817 36.4082 177.004 35.0732 cv
176.341 33.7236 175.042 32.0945 173.784 30.6787 cv
cp
1 1 1 rgb
f
167.321 46.9244 mo
167.041 47.1884 166.77 47.4429 166.519 47.6745 cv
165.486 48.6457 164.795 49.2916 164.795 49.2916 cv
163.927 50.1095 li
162.365 51.5668 159.921 51.4885 158.46 49.9328 cv
157 48.3715 157.078 45.9281 158.634 44.4674 cv
158.724 44.3834 158.823 44.3012 158.918 44.2279 cv
158.918 44.2279 159.106 44.0785 159.438 43.8249 cv
159.776 43.5713 160.235 43.1895 160.796 42.746 cv
161.078 42.5171 161.378 42.2727 161.699 42.0192 cv
161.936 41.8201 li
162 41.7498 li
167.321 46.9244 li
cp
.2 .2 .2 rgb
f
183.919 28.336 mo
183.804 28.8778 183.285 30.244 183.189 30.4392 cv
182.289 32.2488 181.053 33.1831 181.053 33.1831 cv
181.053 33.1831 177.728 31.8063 176.42 30.3398 cv
175.42 29.2157 174.797 27.8692 175.085 26.4893 cv
175.752 23.3033 176.703 20.8151 180.707 21.6497 cv
183.443 22.2205 184.25 23.6439 184.276 25.5023 cv
184.287 26.3663 184.13 27.3247 183.919 28.336 cv
cp
1 .854902 .729412 rgb
f
184.276 25.5023 mo
183.331 25.4131 182.163 23.9462 181.138 24.5434 cv
180.125 25.134 180.063 26.5034 179.761 27.4983 cv
178.602 27.5791 179.116 25.4514 177.336 26.4674 cv
176.426 26.9868 176.481 27.8947 176.285 28.7868 cv
175.717 31.3809 173.225 31.8037 170.805 30.9959 cv
169.668 30.6158 168.255 29.9113 167.569 28.9015 cv
166.861 27.8617 167.188 26.6282 166.689 25.5568 cv
168.86 26.8967 172.381 26.8308 174.271 24.7671 cv
175.247 23.6997 175.73 22.3633 177.06 21.5041 cv
178.693 20.4499 180.629 20.7409 182.3 21.5174 cv
183.089 21.8848 183.916 22.3453 184.312 23.1653 cv
184.425 23.4009 184.776 25.5485 184.276 25.5023 cv
cp
.129412 .0980392 .0705882 rgb
f
158.553 63.5936 mo
152.772 63.5936 148.071 68.2959 148.071 74.0768 cv
148.071 79.8561 152.772 84.5578 158.553 84.5578 cv
164.334 84.5578 169.037 79.8561 169.037 74.0768 cv
169.037 68.2959 164.334 63.5936 158.553 63.5936 cv
cp
158.553 86.0796 mo
151.934 86.0796 146.55 80.6954 146.55 74.0768 cv
146.55 67.4582 151.934 62.0753 158.553 62.0753 cv
165.171 62.0753 170.557 67.4582 170.557 74.0768 cv
170.557 80.6954 165.171 86.0796 158.553 86.0796 cv
cp
.2 .2 .2 rgb
f
192.775 63.5936 mo
186.994 63.5936 182.291 68.2959 182.291 74.0768 cv
182.291 79.8561 186.994 84.5578 192.775 84.5578 cv
198.556 84.5578 203.258 79.8561 203.258 74.0768 cv
203.258 68.2959 198.556 63.5936 192.775 63.5936 cv
cp
192.775 86.0796 mo
186.157 86.0796 180.771 80.6954 180.771 74.0768 cv
180.771 67.4582 186.157 62.0753 192.775 62.0753 cv
199.392 62.0753 204.779 67.4582 204.779 74.0768 cv
204.779 80.6954 199.392 86.0796 192.775 86.0796 cv
cp
f
159.646 73.3627 mo
176.169 74.0649 li
187.448 57.5459 li
165.801 57.5459 li
159.646 73.3627 li
cp
176.557 75.6017 mo
176.526 75.6017 li
158.521 74.8366 li
158.276 74.8252 158.051 74.6977 157.918 74.493 cv
157.783 74.2864 157.756 74.0302 157.846 73.8009 cv
164.572 56.5101 li
164.686 56.2183 164.968 56.0259 165.281 56.0259 cv
188.298 56.0259 li
190.428 47.7009 li
190.514 47.3602 190.816 47.1199 191.175 47.1291 cv
191.31 47.1309 194.505 47.2025 196.165 49.4521 cv
197.211 50.8698 197.393 52.7761 196.707 55.1197 cv
196.589 55.5223 196.167 55.7525 195.764 55.6343 cv
195.361 55.5169 195.13 55.0942 195.248 54.6912 cv
195.794 52.8293 195.691 51.3703 194.941 50.3552 cv
194.085 49.1941 192.571 48.8232 191.741 48.7037 cv
189.668 56.7993 li
193.516 73.9099 li
193.609 74.3194 193.352 74.7276 192.942 74.8186 cv
192.532 74.9091 192.125 74.6534 192.034 74.2434 cv
188.529 58.6595 li
177.185 75.2712 li
177.043 75.4778 176.808 75.6017 176.557 75.6017 cv
cp
1 1 1 rgb
f
165.28 57.5459 mo
164.919 57.5459 164.599 57.2884 164.533 56.9197 cv
163.562 51.4841 li
163.489 51.0727 163.764 50.6764 164.177 50.6021 cv
164.587 50.5309 164.984 50.8034 165.058 51.2165 cv
166.029 56.6529 li
166.103 57.066 165.827 57.4602 165.415 57.5345 cv
165.28 57.5459 li
cp
f
167.165 51.757 mo
157.767 51.757 li
157.348 51.757 157.008 51.4174 157.008 50.9968 cv
157.008 50.5771 157.348 50.2369 157.767 50.2369 cv
167.165 50.2369 li
167.585 50.2369 167.925 50.5771 167.925 50.9968 cv
167.925 51.4174 167.585 51.757 167.165 51.757 cv
cp
.2 .2 .2 rgb
f
178.611 83.1352 mo
178.486 83.1352 178.36 83.1058 178.244 83.0395 cv
174.528 80.9842 li
174.214 80.811 174.065 80.4424 174.169 80.1004 cv
175.83 74.6218 li
175.952 74.2188 176.377 73.9924 176.779 74.1146 cv
177.18 74.2355 177.407 74.6617 177.285 75.063 cv
175.802 79.9519 li
178.979 81.7114 li
179.346 81.9127 179.48 82.3755 179.276 82.7424 cv
179.137 82.9933 178.879 83.1352 178.611 83.1352 cv
cp
.231373 .258824 .301961 rgb
f
161.117 74.0768 mo
161.117 75.4927 159.969 76.641 158.553 76.641 cv
157.138 76.641 155.99 75.4927 155.99 74.0768 cv
155.99 72.6609 157.138 71.5144 158.553 71.5144 cv
159.969 71.5144 161.117 72.6609 161.117 74.0768 cv
cp
f
195.339 74.0768 mo
195.339 75.4927 194.191 76.641 192.775 76.641 cv
191.359 76.641 190.211 75.4927 190.211 74.0768 cv
190.211 72.6609 191.359 71.5144 192.775 71.5144 cv
194.191 71.5144 195.339 72.6609 195.339 74.0768 cv
cp
f
180.916 78.8761 mo
176.593 77.9493 li
176.361 77.9014 li
176.281 77.6852 176.233 77.4619 176.193 77.2387 cv
176.009 76.1831 li
175.85 75.1293 li
175.61 73.0028 li
175.546 72.2922 175.49 71.5803 175.426 70.8697 cv
175.194 68.745 li
174.931 66.6273 li
174.388 62.3927 li
174.356 62.1532 174.267 61.9128 174.116 61.7062 cv
174.004 61.5459 li
170.848 57.1271 li
163.376 46.6681 li
163.304 46.5724 163.217 46.4682 163.137 46.3799 cv
162.035 45.1811 160.164 45.1094 158.966 46.212 cv
157.767 47.315 157.687 49.1845 158.798 50.3828 cv
167.492 59.8192 li
170.712 63.327 li
170.648 63.591 170.592 63.8547 170.544 64.1184 cv
170.488 64.4866 170.44 64.8619 170.416 65.2293 cv
170.392 65.5897 170.376 65.9561 170.385 66.3148 cv
170.376 66.6751 170.4 67.035 170.416 67.3852 cv
170.448 67.7456 170.481 68.0976 170.529 68.4497 cv
170.568 68.8078 170.64 69.1514 170.696 69.5035 cv
170.832 70.2075 171.008 70.8948 171.231 71.5803 cv
171.334 71.9239 171.479 72.261 171.599 72.5963 cv
171.726 72.9399 171.879 73.2753 172.014 73.6105 cv
172.878 75.6329 li
173.261 76.6476 li
173.381 76.9913 173.492 77.3349 173.588 77.6786 cv
173.668 77.9247 173.732 78.166 173.764 78.4204 cv
173.781 78.5162 173.788 78.6203 173.788 78.7241 cv
173.812 79.0761 173.788 79.4448 173.644 79.8279 cv
173.581 80.0112 173.557 80.2111 173.588 80.4177 cv
173.684 81.0571 174.284 81.5049 174.931 81.4091 cv
175.378 81.3462 li
180.868 80.5218 li
181.203 80.4739 181.49 80.2195 181.562 79.8675 cv
181.658 79.4197 181.372 78.9719 180.916 78.8761 cv
cp
.941176 .745098 .572549 rgb
f
174.602 34.2224 mo
179.757 44.0758 li
178.992 43.4439 li
188.104 47.2017 li
188.215 47.2474 188.312 47.3111 188.397 47.3862 cv
188.436 47.4232 li
191.219 49.961 li
191.706 50.4031 191.741 51.1554 191.298 51.641 cv
190.856 52.127 190.103 52.1626 189.617 51.7188 cv
189.447 51.5272 li
187.273 48.451 li
187.604 48.6738 li
178.089 46.0982 li
177.791 46.0174 177.548 45.827 177.397 45.5845 cv
177.324 45.4671 li
171.453 36.0206 li
170.923 35.1707 171.186 34.0514 172.036 33.5236 cv
172.888 32.9933 174.006 33.2543 174.535 34.1059 cv
174.602 34.2224 li
cp
1 .792157 .619608 rgb
f
170.844 57.1245 mo
167.49 59.821 li
158.796 50.3863 li
157.69 49.1862 157.767 47.3168 158.967 46.2107 cv
160.164 45.1067 162.035 45.1846 163.139 46.3834 cv
163.22 46.4682 163.304 46.5732 163.373 46.6672 cv
170.844 57.1245 li
cp
.2 .2 .2 rgb
f
179.646 25.0264 mo
180.879 23.7608 178.194 32.2488 178.194 32.2488 cv
178.712 32.6843 li
180.946 24.8976 li
179.646 25.0264 li
cp
f
185.837 25.6232 mo
185.837 25.6232 175.639 25.9369 174.471 24.768 cv
173.302 23.5999 174.043 18.5954 178.932 18.4122 cv
183.821 18.2289 187.732 24.7285 185.837 25.6232 cv
cp
1 1 1 rgb
f
182.411 22.8959 mo
182.411 22.8959 176.408 20.366 175.014 22.63 cv
174.953 22.4965 177.083 24.6274 182.411 22.8959 cv
cp
.2 .2 .2 rgb
f
183.41 21.4866 mo
183.41 21.4866 179.415 16.8359 176.02 20.166 cv
175.82 20.0997 181.333 20.5672 183.41 21.4866 cv
cp
f
181.562 79.8675 mo
181.49 80.2195 181.203 80.4739 180.868 80.5218 cv
175.378 81.3462 li
174.931 81.4091 li
174.284 81.5049 173.684 81.0571 173.588 80.4177 cv
173.557 80.2111 173.581 80.0112 173.644 79.8279 cv
173.788 79.4448 173.812 79.0761 173.788 78.7241 cv
173.788 78.6203 173.781 78.5162 173.764 78.4204 cv
176.593 77.9493 li
180.916 78.8761 li
181.372 78.9719 181.658 79.4197 181.562 79.8675 cv
cp
f
50.1971 148.872 mo
40.5128 154.562 li
42.3959 154.896 li
32.8523 145.283 li
32.6744 145.144 li
32.5249 145.058 li
30.0697 143.612 li
29.439 143.24 28.627 143.448 28.2552 144.083 cv
27.8852 144.711 28.0952 145.524 28.7254 145.895 cv
28.8467 145.969 28.9838 146.018 29.1143 146.049 cv
31.8986 146.656 li
31.5744 146.431 li
40.0896 156.963 li
40.5216 157.496 41.2538 157.644 41.8457 157.359 cv
41.9732 157.297 li
52.0907 152.407 li
53.0864 151.925 53.5057 150.725 53.0223 149.727 cv
52.5393 148.729 51.3401 148.311 50.3421 148.791 cv
50.1971 148.872 li
cp
.968627 .733333 .533333 rgb
f
35.3857 201.343 mo
35.5462 201.706 35.9087 201.917 36.2831 201.899 cv
42.4143 201.581 li
42.9157 201.553 li
43.6378 201.517 44.1902 200.9 44.1524 200.177 cv
44.1383 199.952 44.0671 199.741 43.959 199.562 cv
43.7806 199.274 43.6791 198.986 43.6163 198.697 cv
43.5925 198.604 43.578 198.518 43.5617 198.426 cv
43.5297 198.236 43.5174 198.05 43.5152 197.856 cv
43.5152 197.757 43.509 197.666 43.5174 197.568 cv
43.5253 197.426 li
43.5253 197.402 li
43.523 197.303 li
43.523 197.258 li
43.5253 197.183 li
43.5363 196.8 43.5591 196.411 43.5925 196.026 cv
43.72 194.864 li
44.0864 192.531 li
44.1383 192.143 44.2134 191.753 44.2508 191.363 cv
44.289 190.981 44.344 190.591 44.3593 190.206 cv
44.3857 189.82 44.3959 189.436 44.3893 189.05 cv
44.3893 188.668 44.3633 188.288 44.3387 187.904 cv
44.3031 187.525 44.2689 187.146 44.2134 186.765 cv
44.1945 186.623 li
44.1902 186.59 li
44.1875 186.573 li
44.1977 186.737 li
44.1902 186.681 li
44.1625 186.393 li
44.1343 186.2 44.1251 186.011 44.0891 185.823 cv
44.0377 185.441 43.9739 185.062 43.8975 184.682 cv
43.8166 184.301 43.7235 183.922 43.6189 183.547 cv
43.5152 183.166 43.3768 182.79 43.2405 182.412 cv
43.1553 182.199 43.0692 181.984 42.9641 181.768 cv
54.1337 168.312 li
55.286 166.923 55.0939 164.864 53.7061 163.708 cv
52.3178 162.559 50.2555 162.747 49.1041 164.137 cv
49.0101 164.252 48.916 164.381 48.8413 164.499 cv
39.0904 180.177 li
38.9708 180.368 li
38.7691 180.693 38.6878 181.06 38.7137 181.413 cv
39.0459 185.987 li
39.0855 186.558 li
39.1096 186.848 li
39.114 186.919 li
39.1203 187.042 li
39.1246 187.061 li
39.1294 187.096 li
39.1483 187.237 li
39.3 188.374 li
39.4125 189.128 39.5395 189.882 39.6585 190.638 cv
39.7825 191.394 39.9249 192.151 40.0549 192.905 cv
40.4078 195.171 li
40.5352 196.311 li
40.628 197.454 li
40.6346 197.506 li
40.6346 197.54 li
40.6306 197.666 li
40.6306 197.757 40.6214 197.852 40.6117 197.946 cv
40.6117 197.953 li
40.5989 198.065 li
35.8687 200.123 li
35.3968 200.331 35.1845 200.878 35.3857 201.343 cv
cp
f
52.564 172 mo
50.2085 172.249 48.1009 170.545 47.8543 168.2 cv
47.7058 166.884 li
47.7058 166.884 47.632 166.149 47.5046 164.98 cv
47.4852 164.759 47.4588 164.53 47.4299 164.28 cv
47.385 163.895 47.3472 163.471 47.2918 163.03 cv
47.2655 162.809 47.2549 162.57 47.2378 162.34 cv
47.2093 162.11 47.182 161.87 47.1538 161.622 cv
47.1358 161.456 47.1183 161.291 47.0994 161.126 cv
47.0893 161.126 li
46.9979 160.298 46.8968 159.432 46.8058 158.568 cv
46.5381 156.304 46.2807 151.032 46.0965 149.441 cv
47.6522 146.616 li
48.5988 144.905 li
48.5988 144.895 li
48.5988 144.887 li
48.9209 143.359 48.9846 141.804 47.798 142.007 cv
52.4814 139.587 li
52.4814 139.587 52.4629 142.928 53.4662 144.711 cv
53.475 144.711 li
56.1345 149.055 li
56.1345 149.055 56.2171 154.41 55.8485 158.568 cv
55.8485 158.613 li
55.7847 159.322 55.7206 160.031 55.6555 160.703 cv
55.6555 160.738 li
55.6279 161.042 55.6006 161.337 55.5729 161.622 cv
55.554 161.87 55.5355 162.11 55.5189 162.34 cv
55.5083 162.459 55.4894 162.57 55.4991 162.689 cv
55.5083 162.8 55.5355 162.919 55.554 163.03 cv
55.6371 163.471 55.7206 163.895 55.7948 164.28 cv
55.859 164.611 55.9139 164.915 55.9587 165.192 cv
56.0331 165.578 56.0875 165.908 56.1428 166.168 cv
56.2352 166.627 56.2905 166.884 56.2905 166.884 cv
56.3178 167.013 56.3363 167.151 56.3552 167.29 cv
56.6038 169.637 54.9107 171.742 52.564 172 cv
cp
1 .854902 .729412 rgb
f
48.5395 164.985 mo
41.4471 173.626 li
47.2312 178.564 li
52.273 169.664 li
48.5395 164.985 li
cp
.2 .2 .2 rgb
f
56.2918 166.886 mo
56.2918 166.886 56.2387 166.627 56.1442 166.168 cv
56.0475 165.719 55.9363 165.066 55.7895 164.284 cv
55.7206 163.918 55.6476 163.518 55.5685 163.097 cv
47.3029 163.097 li
47.3472 163.518 47.3907 163.918 47.4343 164.284 cv
47.5977 165.846 47.7102 166.886 47.7102 166.886 cv
47.8504 168.198 li
48.1009 170.547 50.2116 172.245 52.5591 171.997 cv
54.9076 171.744 56.6047 169.635 56.3552 167.286 cv
56.3398 167.153 56.3169 167.015 56.2918 166.886 cv
cp
f
55.8485 158.613 mo
55.8485 158.568 li
56.2171 154.41 56.1345 149.055 56.1345 149.055 cv
53.475 144.711 li
53.4662 144.711 li
53.2547 144.611 53.0333 144.528 52.803 144.454 cv
49.5291 145.917 li
47.798 147.61 li
47.6522 146.616 li
46.0965 149.441 li
46.2807 151.032 46.5381 156.304 46.8058 158.568 cv
46.8968 159.432 46.9979 160.298 47.0893 161.126 cv
47.0994 161.126 li
47.1183 161.291 47.1358 161.456 47.1538 161.622 cv
47.182 161.87 47.2093 162.11 47.2378 162.34 cv
47.2549 162.57 47.2655 162.809 47.2918 163.03 cv
47.3472 163.471 47.385 163.895 47.4299 164.28 cv
47.4588 164.53 47.4852 164.759 47.5046 164.98 cv
55.9587 165.192 li
55.8485 158.613 li
cp
1 1 1 rgb
f
47.8104 184.07 mo
50.4313 188.068 li
51.3063 189.398 52.1698 190.74 53.064 192.061 cv
57.9846 199.432 li
58.0101 199.472 li
57.8018 199.823 li
52.3377 201.679 li
51.8543 201.842 51.595 202.369 51.7598 202.851 cv
51.8907 203.23 52.2497 203.476 52.6334 203.476 cv
59.3377 203.479 li
60.2232 203.479 60.95 202.774 60.9808 201.895 cv
61.0322 200.348 li
61.0533 199.696 li
61.0432 199.527 li
60.8494 198.518 li
60.7703 198.098 60.6692 197.694 60.5593 197.295 cv
60.4521 196.89 60.3216 196.509 60.1986 196.119 cv
60.0782 195.725 59.9345 195.347 59.7904 194.964 cv
59.6497 194.588 59.5131 194.203 59.3557 193.832 cv
59.2072 193.458 59.0428 193.089 58.882 192.723 cv
58.7242 192.352 58.5462 191.996 58.377 191.629 cv
58.0343 190.909 57.6674 190.203 57.2859 189.5 cv
56.7006 188.455 li
56.5076 188.108 56.2967 187.771 56.0901 187.43 cv
55.8682 187.099 55.6621 186.757 55.4265 186.432 cv
55.2024 186.104 54.9686 185.78 54.7186 185.464 cv
54.473 185.15 54.2264 184.832 53.9614 184.528 cv
53.6995 184.222 53.4227 183.922 53.1387 183.631 cv
52.8624 183.333 52.5393 183.06 52.2445 182.775 cv
52.1289 182.678 52.012 182.58 51.8938 182.482 cv
53.5536 178.326 li
56.777 170.248 li
56.777 170.248 56.3552 165.926 55.169 165.454 cv
53.4907 164.787 51.5862 165.601 50.9134 167.281 cv
50.8509 167.448 50.7951 167.637 50.7565 167.807 cv
48.7715 177.037 li
47.6087 182.441 li
47.555 182.69 li
47.4479 183.185 47.555 183.678 47.8104 184.07 cv
cp
.941176 .745098 .572549 rgb
f
42.3326 118.946 mo
42.9707 117.21 li
44.0773 117.423 li
44.2468 118.003 44.3326 118.656 44.3119 119.337 cv
42.3326 118.946 li
cp
43.4317 121.982 mo
41.368 121.571 li
42.2333 119.224 li
44.297 119.628 li
43.4317 121.982 li
cp
43.7723 122.046 mo
43.7085 122.039 li
44.0909 120.996 li
44.0135 121.344 43.9067 121.699 43.7723 122.046 cv
cp
43.3394 123.053 mo
43.6093 122.315 li
43.6734 122.322 li
43.5741 122.571 43.4602 122.812 43.3394 123.053 cv
cp
42.5739 124.309 mo
40.5172 123.897 li
41.2692 121.855 li
43.3258 122.259 li
42.5739 124.309 li
cp
40.4957 126.386 mo
39.666 126.223 li
40.4109 124.181 li
42.3898 124.564 li
41.829 125.287 41.1834 125.904 40.4957 126.386 cv
cp
39.3681 127.025 mo
39.5596 126.507 li
40.1406 126.62 li
39.8857 126.777 39.6305 126.911 39.3681 127.025 cv
cp
39.0064 127.174 mo
38.4039 127.408 37.7869 127.528 37.1765 127.528 cv
37.0064 127.528 36.836 127.52 36.6799 127.5 cv
36.6733 127.5 li
36.7581 127.266 li
37.2117 126.045 li
39.2762 126.45 li
39.0064 127.174 li
cp
34.3328 132.797 mo
34.7723 130.486 34.8439 128.89 34.7868 127.855 cv
35.141 128.032 35.5176 128.181 35.921 128.273 cv
36.0845 128.301 li
36.3613 128.359 li
36.3613 128.35 li
36.368 128.35 li
36.6021 128.387 36.836 128.407 37.0843 128.407 cv
36.4536 129.216 35.4815 130.62 34.3328 132.797 cv
cp
33.6881 125.344 mo
34.5881 125.528 li
34.3113 126.273 li
34.0709 126.003 33.8578 125.691 33.6881 125.344 cv
cp
33.5313 125.018 mo
33.3326 124.543 33.1986 124.018 33.1415 123.458 cv
33.3828 122.798 li
35.4464 123.202 li
34.6945 125.245 li
33.5313 125.018 li
cp
33.475 120.323 mo
33.9567 120.415 li
33.2052 122.457 li
33.1063 122.443 li
33.127 121.763 33.2474 121.054 33.475 120.323 cv
cp
33.6662 119.769 mo
33.943 119.039 34.2972 118.357 34.723 117.741 cv
34.9217 117.784 li
34.0564 120.138 li
33.5677 120.04 li
33.6662 119.769 li
cp
35.1343 117.195 mo
35.0206 117.5 li
34.9146 117.486 li
34.9854 117.387 35.0561 117.294 35.1343 117.195 cv
cp
35.1981 117.84 mo
37.2688 118.245 li
36.404 120.6 li
34.3398 120.195 li
34.3398 120.187 li
35.1981 117.84 li
cp
35.6525 116.606 mo
35.8928 116.351 36.1341 116.124 36.3965 115.911 cv
38.0067 116.23 li
37.3677 117.968 li
35.3044 117.557 li
35.6525 116.606 li
cp
38.5806 114.655 mo
38.1055 115.947 li
36.7019 115.671 li
37.2974 115.223 37.928 114.875 38.5806 114.655 cv
cp
40.2408 114.366 mo
40.5599 114.366 40.8644 114.4 41.1623 114.472 cv
41.1698 114.472 li
40.4535 116.415 li
38.389 116.004 li
38.9212 114.55 li
39.3615 114.43 39.8009 114.366 40.2408 114.366 cv
cp
39.9925 118.486 mo
40.6306 116.749 li
42.6939 117.153 li
42.0562 118.89 li
39.9925 118.486 li
cp
39.0213 121.117 mo
39.8857 118.763 li
41.9498 119.167 li
41.0846 121.521 li
39.0213 121.117 li
cp
38.1692 123.436 mo
38.9212 121.394 li
40.9852 121.798 li
40.2338 123.841 li
40.2338 123.848 li
38.1692 123.436 li
cp
38.0633 123.72 mo
40.127 124.124 li
39.3751 126.166 li
37.3189 125.762 li
38.0633 123.72 li
cp
35.5453 122.925 mo
33.482 122.514 li
34.2335 120.472 li
36.2971 120.875 li
35.5453 122.925 li
cp
38.6443 121.337 mo
37.8928 123.386 li
35.8291 122.974 li
36.5811 120.933 li
38.6443 121.337 li
cp
37.6445 118.017 mo
38.2835 116.287 li
40.3538 116.691 li
39.7157 118.429 li
37.6445 118.017 li
cp
39.6163 118.706 mo
38.7445 121.06 li
36.6799 120.649 li
37.5456 118.301 li
39.6163 118.706 li
cp
36.9357 125.982 mo
36.9357 125.989 li
36.4817 127.223 li
36.3965 127.457 li
36.248 127.43 li
35.7724 127.316 34.9217 126.727 34.5459 126.457 cv
34.8724 125.579 li
36.9357 125.982 li
cp
34.9713 125.302 mo
35.7228 123.259 li
37.7869 123.663 li
37.0421 125.705 li
37.0346 125.705 li
34.9713 125.302 li
cp
43.2053 115.741 mo
42.7936 116.869 li
40.7295 116.464 li
41.4387 114.543 li
42.1555 114.763 42.7509 115.181 43.2053 115.741 cv
cp
43.9784 117.103 mo
43.0704 116.925 li
43.4102 116.004 li
43.6448 116.337 43.829 116.705 43.9784 117.103 cv
cp
45.2831 117.762 mo
45.2616 117.656 li
45.2405 117.55 45.2119 117.443 45.1843 117.344 cv
45.1627 117.267 li
44.9008 116.351 44.4393 115.543 43.8145 114.911 cv
43.5877 114.698 li
43.0704 114.245 42.4535 113.898 41.7508 113.691 cv
41.4954 113.62 li
41.4818 113.62 li
41.4744 113.62 li
41.0776 113.529 40.6657 113.479 40.2408 113.479 cv
39.9218 113.479 39.6023 113.507 39.2828 113.564 cv
39.1769 113.577 39.0706 113.6 38.9642 113.62 cv
38.0563 113.811 37.1629 114.209 36.3328 114.763 cv
36.1908 114.848 36.0634 114.947 35.928 115.046 cv
35.921 115.046 li
35.7654 115.167 35.6094 115.294 35.4534 115.43 cv
35.3611 115.508 35.2689 115.584 35.1836 115.671 cv
34.6734 116.138 34.1983 116.678 33.7861 117.26 cv
33.7224 117.351 33.6662 117.436 33.6095 117.528 cv
33.2052 118.139 32.8509 118.812 32.5811 119.515 cv
32.5456 119.62 32.5029 119.727 32.4744 119.827 cv
32.4458 119.919 32.4107 120.017 32.39 120.103 cv
32.1623 120.826 32.0349 121.536 31.9994 122.224 cv
31.9927 122.322 31.9927 122.422 31.9927 122.521 cv
31.9712 123.322 32.0776 124.081 32.3047 124.776 cv
32.3262 124.841 li
32.3262 124.847 li
32.4181 125.096 li
32.4818 125.252 li
32.7442 125.891 33.1063 126.457 33.5598 126.932 cv
33.6024 127.18 33.6517 127.549 33.6596 128.053 cv
33.6446 128.095 li
33.6662 128.102 li
33.7158 129.947 33.3761 133.571 31.2549 139.741 cv
30.9003 139.797 30.5812 140.032 30.4393 140.4 cv
30.3756 140.55 li
29.4325 142.925 li
29.2268 143.443 li
29.2193 143.443 li
28.369 145.584 li
28.035 146.415 li
27.8153 146.96 28.0843 147.585 28.6379 147.811 cv
29.1907 148.031 29.8152 147.763 30.0345 147.209 cv
30.3901 146.322 li
31.1977 144.28 li
31.4254 143.712 li
31.4254 143.705 li
32.2125 141.748 li
32.4322 141.187 li
32.5811 140.833 32.5095 140.443 32.2898 140.152 cv
35.1695 132.379 37.9358 128.961 38.5599 128.245 cv
38.6236 128.23 li
38.7366 128.202 38.8504 128.173 38.9642 128.139 cv
39.822 127.883 40.6657 127.45 41.4458 126.868 cv
41.6805 126.691 li
41.7086 126.67 li
41.7508 126.635 li
41.8861 126.521 42.0136 126.415 42.141 126.302 cv
42.148 126.302 li
42.6446 125.847 43.1056 125.344 43.5174 124.784 cv
43.7015 124.529 li
44.1273 123.918 44.4886 123.252 44.765 122.543 cv
44.8287 122.378 li
44.8713 122.259 li
45.1768 121.444 45.3468 120.629 45.404 119.847 cv
45.418 119.748 45.418 119.649 45.4246 119.557 cv
45.4532 118.933 45.404 118.33 45.2831 117.762 cv
cp
.231373 .258824 .301961 rgb
f
28.754 142.63 mo
28.9904 142.755 li
32.9547 144.312 li
40.1485 153.441 li
40.5296 153.924 41.1579 154.095 41.7117 153.909 cv
41.8545 153.865 li
49.0976 151.438 li
53.5176 149.956 li
54.5669 149.608 55.1348 148.469 54.7845 147.417 cv
54.4281 146.366 53.2921 145.799 52.241 146.15 cv
52.1043 146.202 li
47.9242 147.956 li
41.6655 150.58 li
34.1297 143.027 li
33.9373 142.875 li
33.8771 142.837 li
30.1905 140.428 li
29.5823 140.033 28.7667 140.204 28.3698 140.811 cv
27.9744 141.42 28.1466 142.235 28.754 142.63 cv
cp
1 .792157 .619608 rgb
f
46.1185 136.098 mo
45.8927 136.667 45.5371 138.244 45.5076 138.484 cv
45.2308 140.701 45.7982 142.316 45.7982 142.316 cv
45.7982 142.316 49.7053 143.079 51.8094 142.527 cv
53.4178 142.099 54.8157 141.24 55.3918 139.79 cv
56.7221 136.445 57.3668 133.568 53.1647 131.894 cv
50.2929 130.748 48.6783 131.568 47.5204 133.265 cv
46.982 134.056 46.5413 135.037 46.1185 136.098 cv
cp
1 .854902 .729412 rgb
f
47.5204 133.265 mo
48.4459 133.761 50.4181 133.12 50.9995 134.298 cv
51.5593 135.436 50.8061 136.757 50.4238 137.877 cv
50.6761 138.026 51.0184 138.127 51.3063 138.127 cv
51.4367 137.462 52.0028 137.265 52.5706 137.534 cv
53.2666 137.86 53.2227 138.503 53.1506 139.183 cv
53.097 139.7 52.2396 139.905 52.0361 140.361 cv
51.7523 141 52.0806 141.884 51.8094 142.527 cv
53.4178 142.099 54.8157 141.24 55.3918 139.79 cv
56.7221 136.445 57.6937 132.99 53.4877 131.313 cv
50.6172 130.168 48.0354 130.455 47.5204 133.265 cv
cp
.129412 .0980392 .0705882 rgb
f
46.2727 178.875 mo
47.998 179.341 li
53.46 179.953 li
54.7959 180.312 li
57.2859 170.866 li
57.2859 170.866 56.2488 165.612 55.064 165.143 cv
53.3853 164.473 51.1643 165.434 50.4919 167.112 cv
46.2727 178.875 li
cp
.2 .2 .2 rgb
f
47.9242 147.956 mo
49.0976 151.438 li
53.5176 149.956 li
54.5669 149.608 55.1348 148.469 54.7845 147.417 cv
54.4281 146.366 53.2921 145.799 52.241 146.15 cv
52.1043 146.202 li
47.9242 147.956 li
cp
1 1 1 rgb
f
51.7598 202.851 mo
51.8907 203.23 52.2497 203.476 52.6334 203.476 cv
59.3377 203.479 li
60.2232 203.479 60.95 202.774 60.9808 201.895 cv
61.0322 200.348 li
57.9846 199.432 li
58.0101 199.472 li
57.8018 199.823 li
52.3377 201.679 li
51.8543 201.842 51.595 202.369 51.7598 202.851 cv
cp
.2 .2 .2 rgb
f
35.3857 201.343 mo
35.5462 201.706 35.9087 201.917 36.2831 201.899 cv
42.4143 201.581 li
42.9157 201.553 li
43.6378 201.517 44.1902 200.9 44.1524 200.177 cv
44.1383 199.952 44.0671 199.741 43.959 199.562 cv
43.7806 199.274 43.6791 198.986 43.6163 198.697 cv
41.1813 198.088 li
40.7814 197.987 li
40.6117 197.946 li
40.6117 197.953 li
40.5989 198.065 li
35.8687 200.123 li
35.3968 200.331 35.1845 200.878 35.3857 201.343 cv
cp
f
47.211 132.027 mo
57.753 135.343 li
57.2151 137.044 li
46.5624 133.752 li
47.211 132.027 li
cp
1 1 1 rgb
f
139.283 136.9 mo
139.302 136.905 li
139.231 136.872 li
139.283 136.9 li
cp
.74902 .52549 .329412 rgb
f
108.066 107.06 mo
107.916 108.801 108.668 110.694 109.054 112.387 cv
109.388 113.911 109.473 116.086 110.21 117.478 cv
114.195 123.421 125.112 139.313 126.988 140.183 cv
130.958 142.025 139.765 146.881 143.936 148.304 cv
146.614 149.211 149.781 150.046 152.376 151.421 cv
152.778 151.638 153.146 151.856 153.514 152.091 cv
153.815 152.292 154.035 152.76 154.168 153.414 cv
154.956 156.897 153.716 165.589 155.089 165.805 cv
160.094 166.643 160.331 160.848 161.116 157.148 cv
161.553 155.105 162.875 151.555 161.805 149.561 cv
160.648 147.451 157.851 147.922 155.591 147.134 cv
155.223 147.017 154.871 146.866 154.536 146.648 cv
153.815 146.211 153.13 145.727 152.476 145.274 cv
151.121 144.32 149.829 143.265 148.526 142.245 cv
146.866 140.97 145.192 139.714 143.348 138.727 cv
142.447 138.242 141.507 137.806 140.571 137.404 cv
140.436 137.337 139.632 137.036 139.449 136.986 cv
137.842 136.334 128.848 129.819 128.026 127.709 cv
126.67 124.243 125.33 120.776 123.975 117.309 cv
122.835 114.378 121.696 111.431 120.559 108.5 cv
119.571 105.972 118.85 103.208 116.054 102.102 cv
112.47 100.68 108.401 103.208 108.066 107.06 cv
cp
.968627 .733333 .533333 rgb
f
59.9424 76.5544 mo
60.0803 76.6195 66.8756 79.6399 66.8756 79.6399 cv
67.3907 80.0991 li
74.3965 86.3543 li
82.0328 93.1794 li
82.8335 93.8918 83.9765 94.0104 84.8563 93.5186 cv
85.0896 93.4014 li
96.8323 87.0218 li
104.005 83.1203 li
105.705 82.1966 106.335 80.0723 105.411 78.3712 cv
104.49 76.6731 102.348 76.0386 100.652 76.9469 cv
100.432 77.0849 li
93.7565 81.37 li
83.7753 87.7869 li
76.4315 82.6392 li
68.9318 77.3547 li
68.5139 77.0726 li
68.379 76.993 68.2599 76.9126 68.1316 76.866 cv
68.0055 76.8217 li
63.9225 71.2244 li
62.761 70.7392 59.4044 71.2665 58.9026 72.4232 cv
58.4012 73.5987 58.7791 76.072 59.9424 76.5544 cv
cp
1 .792157 .619608 rgb
f
110.203 117.468 mo
110.817 118.395 li
115.381 125.203 li
118.484 129.835 li
119.748 131.719 li
126.985 125.051 li
124.417 118.446 li
122.725 114.104 li
122.153 112.613 li
120.664 108.781 li
120.659 108.779 li
119.358 105.422 li
119.152 104.904 118.893 104.437 118.576 104.019 cv
117.031 101.976 114.269 101.123 111.772 102.092 cv
108.766 103.265 107.268 106.655 108.439 109.67 cv
108.456 109.722 108.552 110.137 108.691 110.751 cv
109.018 112.242 109.592 114.89 109.939 116.377 cv
109.939 116.382 li
110.072 117.005 110.177 117.418 110.203 117.468 cv
cp
.0588235 .0588235 .0588235 rgb
f
97.0797 81.355 mo
97.1803 82.0081 97.3473 82.6782 97.5653 83.2631 cv
97.5653 83.2631 100.094 90.3313 102.624 97.3973 cv
102.826 97.9835 103.042 98.5702 103.243 99.1564 cv
103.612 100.159 103.962 101.151 104.315 102.122 cv
104.365 102.272 104.431 102.44 104.481 102.589 cv
104.548 102.74 104.598 102.923 104.666 103.074 cv
104.749 103.326 104.834 103.561 104.919 103.812 cv
105.068 104.196 105.168 104.598 105.318 104.984 cv
105.587 105.736 105.822 106.458 106.056 107.111 cv
106.088 107.212 106.122 107.296 106.157 107.362 cv
107.027 109.875 107.612 111.549 107.612 111.549 cv
107.731 111.883 li
108.383 113.776 li
108.734 114.764 109.271 115.651 109.941 116.373 cv
109.941 116.388 li
111.933 118.616 115.149 119.52 118.147 118.481 cv
118.935 118.197 119.654 117.812 120.291 117.324 cv
121.396 116.471 122.234 115.366 122.719 114.11 cv
123.387 112.435 123.489 110.543 122.853 108.72 cv
122.769 108.484 122.684 108.266 122.585 108.05 cv
122.585 108.05 122.384 107.612 122.033 106.858 cv
121.68 106.107 121.212 105.017 120.642 103.712 cv
120.441 103.243 120.223 102.74 119.989 102.221 cv
119.904 102.035 119.804 101.819 119.722 101.601 cv
119.638 101.416 119.536 101.232 119.487 101.032 cv
119.421 100.847 119.402 100.63 119.37 100.428 cv
119.302 100.01 119.251 99.5752 119.185 99.1564 cv
118.984 97.6992 li
118.984 97.6834 li
118.801 96.3918 118.616 95.052 118.415 93.7138 cv
118.264 92.6081 118.097 91.5024 117.945 90.4144 cv
117.076 84.252 116.321 78.8941 116.321 78.8941 cv
116.289 78.6427 li
115.685 74.4719 112.521 71.3065 108.618 70.5019 cv
108.066 69.9011 107.564 69.1479 107.111 68.3099 cv
106.66 67.4723 106.273 66.5674 105.957 65.7149 cv
105.186 63.7044 104.8 61.9787 104.8 61.9787 cv
97.6158 68.0919 li
99.0568 67.4877 99.7432 68.7797 100.009 70.6043 cv
100.028 70.7387 100.061 70.8886 100.061 71.0402 cv
100.094 71.3241 li
100.144 71.8093 100.178 72.2953 100.178 72.816 cv
97.8839 74.8898 96.6121 78.057 97.0797 81.355 cv
cp
1 .854902 .729412 rgb
f
103.243 99.1564 mo
103.612 100.159 103.962 101.151 104.315 102.122 cv
104.365 102.272 104.431 102.44 104.481 102.589 cv
104.548 102.74 104.598 102.923 104.666 103.074 cv
104.749 103.326 104.834 103.561 104.919 103.812 cv
105.068 104.196 105.168 104.598 105.318 104.984 cv
105.587 105.736 105.822 106.458 106.056 107.111 cv
106.088 107.212 106.122 107.296 106.157 107.362 cv
107.027 109.875 107.612 111.549 107.612 111.549 cv
107.731 111.883 li
108.383 113.776 li
108.734 114.764 109.271 115.651 109.941 116.373 cv
109.941 116.388 li
111.933 118.616 115.149 119.52 118.147 118.481 cv
118.935 118.197 119.654 117.812 120.291 117.324 cv
121.396 116.471 122.234 115.366 122.719 114.11 cv
123.387 112.435 123.489 110.543 122.853 108.72 cv
122.769 108.484 122.684 108.266 122.585 108.05 cv
122.585 108.05 122.384 107.612 122.033 106.858 cv
121.68 106.107 121.212 105.017 120.642 103.712 cv
120.441 103.243 120.223 102.74 119.989 102.221 cv
119.904 102.035 119.804 101.819 119.722 101.601 cv
119.638 101.416 119.536 101.232 119.487 101.032 cv
119.421 100.847 119.402 100.63 119.37 100.428 cv
119.302 100.01 119.251 99.5752 119.185 99.1564 cv
118.984 97.6992 li
118.984 97.6834 li
118.801 96.3918 118.616 95.052 118.415 93.7138 cv
118.264 92.6081 118.097 91.5024 117.945 90.4144 cv
111.901 92.5761 108.552 95.6724 103.243 99.1564 cv
cp
.2 .2 .2 rgb
f
97.5582 83.2724 mo
97.5582 83.2724 100.094 90.337 102.625 97.3999 cv
103.117 98.764 103.603 100.129 104.071 101.441 cv
104.21 101.829 104.349 102.211 104.486 102.586 cv
104.635 102.998 104.775 103.405 104.921 103.803 cv
105.061 104.203 105.168 104.598 105.313 104.978 cv
105.58 105.735 105.827 106.451 106.062 107.119 cv
106.13 107.326 li
106.149 107.37 li
106.57 107.208 li
119.991 102.229 li
119.903 102.03 119.813 101.82 119.723 101.609 cv
119.643 101.417 119.545 101.236 119.479 101.036 cv
119.416 100.84 119.404 100.63 119.37 100.423 cv
119.309 100.006 119.247 99.5818 119.186 99.148 cv
119.16 98.9305 119.129 98.72 119.099 98.5064 cv
118.876 96.9543 118.649 95.3305 118.42 93.705 cv
118.199 92.1524 117.983 90.6064 117.771 89.1285 cv
116.97 83.5224 116.315 78.888 116.315 78.888 cv
116.281 78.6331 li
115.93 76.1998 114.707 74.112 112.97 72.6354 cv
111.732 71.5781 110.236 70.8411 108.621 70.5102 cv
108.059 69.9078 107.559 69.1453 107.119 68.3143 cv
100.925 77.8733 li
100.102 71.3285 li
100.151 71.8044 100.178 72.3023 100.184 72.8112 cv
97.8826 74.8942 96.6169 78.0486 97.0849 81.3608 cv
97.1755 82.0094 97.3473 82.684 97.5582 83.2724 cv
cp
1 1 1 rgb
f
90.5151 58.4899 mo
90.5336 59.5779 91.0262 62.4128 91.1352 62.8242 cv
92.1978 66.6602 94.2343 68.926 94.2343 68.926 cv
94.2343 68.926 101.175 67.5149 104.25 65.1683 cv
106.605 63.3704 108.312 61.0026 108.271 58.2279 cv
108.175 51.8242 107.27 46.6624 99.2189 46.7762 cv
93.7206 46.854 91.6305 49.3009 90.8856 52.8799 cv
90.538 54.5462 90.4835 56.4552 90.5151 58.4899 cv
cp
1 .854902 .729412 rgb
f
90.8856 52.8799 mo
92.7418 53.0613 95.5495 50.6654 97.306 52.2052 cv
99.0027 53.6884 98.6678 56.377 98.8037 58.4762 cv
99.3183 58.5505 99.948 58.4824 100.421 58.2895 cv
100.187 57.1043 100.979 56.3968 102.096 56.4468 cv
103.465 56.507 103.828 57.5951 104.172 58.7619 cv
104.439 59.6483 103.171 60.5668 103.152 61.4558 cv
103.117 62.7055 104.259 63.9259 104.25 65.1683 cv
106.605 63.3704 108.312 61.0026 108.271 58.2279 cv
108.175 51.8242 107.41 45.4869 99.3605 45.5989 cv
93.859 45.6799 89.8137 47.9127 90.8856 52.8799 cv
cp
.129412 .0980392 .0705882 rgb
f
67.3907 80.0991 mo
74.3965 86.3543 li
76.4315 82.6392 li
68.9318 77.3547 li
68.5337 78.1409 67.9506 79.211 67.3907 80.0991 cv
cp
.2 .2 .2 rgb
f
146.151 102.446 mo
146.074 102.313 142.175 95.9831 142.175 95.9831 cv
142.01 95.3139 li
139.765 86.1916 li
137.323 76.2477 li
137.064 75.2062 136.189 74.4657 135.186 74.37 cv
134.927 74.3357 li
121.633 72.9624 li
113.512 72.1265 li
111.587 71.9261 109.866 73.3236 109.667 75.248 cv
109.467 77.1736 110.876 78.9055 112.787 79.1169 cv
113.049 79.1253 li
120.979 79.3625 li
132.838 79.7137 li
135.987 88.1077 li
139.187 96.7043 li
139.372 97.1745 li
139.438 97.3169 139.493 97.4509 139.573 97.5594 cv
139.65 97.6684 li
139.855 104.596 li
140.54 105.649 143.607 107.113 144.673 106.439 cv
145.751 105.756 146.837 103.503 146.151 102.446 cv
cp
1 .792157 .619608 rgb
f
142.01 95.3139 mo
139.765 86.1916 li
135.987 88.1077 li
139.187 96.7043 li
139.962 96.2832 141.047 95.7278 142.01 95.3139 cv
cp
.2 .2 .2 rgb
f
83.7906 118.26 mo
85.0497 117.786 86.3096 117.313 87.569 116.836 cv
92.7322 114.922 97.8992 112.986 103.047 111.052 cv
107.498 109.393 111.953 107.731 116.388 106.068 cv
116.659 105.965 116.93 105.871 117.202 105.775 cv
120.498 106.689 121.766 107.716 122.428 111.562 cv
122.442 111.646 122.464 111.758 122.48 111.853 cv
121.33 112.922 120.503 114.286 120.267 115.902 cv
120.125 116.874 119.788 117.701 119.351 118.468 cv
119.196 118.501 119.044 118.535 118.888 118.571 cv
115.42 119.356 111.953 120.141 108.485 120.907 cv
102.625 122.22 96.7668 123.536 90.9076 124.867 cv
93.3742 129.029 97.0942 129.285 99.4866 133.502 cv
101.056 136.259 101.513 142.865 103.339 145.438 cv
104.067 146.461 104.78 147.172 105.766 147.721 cv
106.13 147.937 106.55 148.121 107.023 148.286 cv
108.778 148.742 109.252 148.76 109.415 150.604 cv
109.817 155.275 110.219 159.948 110.62 164.622 cv
110.676 165.077 110.766 165.57 110.748 166.027 cv
110.949 168.125 107.937 168.709 107.208 166.791 cv
106.496 164.95 105.784 163.105 105.071 161.242 cv
104.23 159.073 103.392 156.881 102.554 154.71 cv
102.334 154.143 102.115 153.559 101.897 152.993 cv
97.9907 147.902 82.0377 130.308 81.3447 124.304 cv
81.0532 121.802 80.9623 119.321 83.7906 118.26 cv
cp
.968627 .733333 .533333 rgb
f
102.754 154.273 mo
102.716 154.162 102.61 153.98 102.443 153.724 cv
102.535 153.906 102.643 154.088 102.754 154.273 cv
cp
f
117.513 104.662 mo
120.828 105.579 121.765 107.708 122.428 111.562 cv
122.442 111.646 122.464 111.758 122.48 111.853 cv
121.33 112.922 121.429 113.698 121.193 115.314 cv
121.051 116.288 119.787 117.706 119.344 118.476 cv
96.148 123.684 li
96.148 113.637 li
117.513 104.662 li
cp
.2 .2 .2 rgb
f
102.554 154.71 mo
103.392 156.881 104.23 159.073 105.071 161.242 cv
105.784 163.105 106.496 164.95 107.208 166.791 cv
107.937 168.709 110.949 168.125 110.748 166.027 cv
110.766 165.57 110.676 165.077 110.62 164.622 cv
110.219 159.948 109.817 155.275 109.415 150.604 cv
109.252 148.76 108.778 148.742 107.023 148.286 cv
106.55 148.121 106.13 147.937 105.766 147.721 cv
105.127 150.166 103.812 152.592 102.554 154.71 cv
cp
1 1 1 rgb
f
155.089 165.805 mo
160.094 166.643 160.331 160.848 161.116 157.148 cv
161.553 155.105 162.875 151.555 161.805 149.561 cv
160.648 147.451 157.851 147.922 155.591 147.134 cv
155.591 147.435 li
155.575 149.763 155.072 151.59 154.168 153.414 cv
154.956 156.897 153.716 165.589 155.089 165.805 cv
cp
f
126.241 197.035 mo
125.971 197.651 125.355 198.218 124.394 198.736 cv
123.508 199.212 122.747 199.449 122.11 199.449 cv
120.879 199.449 li
119.583 199.449 118.935 199.023 118.935 198.169 cv
118.935 197.781 119.064 197.295 119.323 196.711 cv
119.632 196.014 li
119.88 195.453 120.306 194.956 120.911 194.524 cv
121.462 194.124 122.05 193.855 122.677 193.714 cv
122.331 193.638 122.037 193.479 121.794 193.236 cv
121.551 192.993 121.43 192.704 121.43 192.369 cv
121.44 192.077 121.608 191.57 121.932 190.847 cv
122.007 190.663 122.088 190.495 122.175 190.344 cv
121.991 190.021 121.84 189.858 121.721 189.858 cv
118.919 189.858 li
118.659 189.858 118.53 189.707 118.53 189.405 cv
118.53 189.092 118.676 188.935 118.967 188.935 cv
122.904 188.935 li
123.282 188.935 123.573 189.021 123.779 189.195 cv
124.426 188.967 125.118 188.854 125.852 188.854 cv
127.116 188.854 127.748 189.21 127.748 189.923 cv
127.748 190.009 127.737 190.107 127.715 190.215 cv
125.301 191.09 li
125.69 190.215 li
125.707 190.15 li
125.707 189.988 125.561 189.907 125.269 189.907 cv
124.891 189.907 124.61 190.118 124.426 190.539 cv
123.827 191.867 li
123.773 191.986 123.746 192.099 123.746 192.208 cv
123.746 192.65 124.113 193.082 124.848 193.503 cv
124.589 194.087 li
123.228 194.519 122.386 195.102 122.061 195.837 cv
121.187 197.781 li
121.1 197.986 121.057 198.137 121.057 198.234 cv
121.057 198.406 121.235 198.493 121.591 198.493 cv
122.315 198.493 123.082 198.331 123.892 198.007 cv
124.886 197.607 125.522 197.089 125.804 196.452 cv
126.241 197.019 li
126.241 197.035 li
cp
f
130.194 197.035 mo
129.924 197.64 129.319 198.196 128.38 198.704 cv
127.494 199.2 126.673 199.449 125.917 199.449 cv
125.247 199.449 124.907 199.146 124.897 198.542 cv
124.313 198.914 li
123.293 198.914 li
125.286 197.359 li
126.403 194.864 li
126.457 194.746 126.484 194.643 126.484 194.557 cv
126.484 194.362 126.344 194.265 126.063 194.265 cv
125.685 194.265 125.226 194.578 124.686 195.205 cv
124.934 194.686 125.247 194.26 125.626 193.925 cv
126.079 193.536 126.549 193.341 127.035 193.341 cv
127.445 193.341 127.764 193.471 127.991 193.731 cv
128.218 193.989 128.331 194.319 128.331 194.719 cv
128.331 194.815 li
128.898 194.378 li
129.919 194.378 li
128.218 195.756 li
128.207 195.809 127.953 196.393 127.456 197.505 cv
127.402 197.602 127.375 197.694 127.375 197.781 cv
127.375 197.932 127.467 198.007 127.651 198.007 cv
127.975 198.007 128.369 197.832 128.833 197.481 cv
129.297 197.129 129.605 196.787 129.757 196.452 cv
130.194 197.035 li
cp
f
133.904 197.035 mo
133.633 197.64 133.034 198.196 132.105 198.704 cv
131.22 199.2 130.399 199.449 129.643 199.449 cv
129.319 199.449 129.065 199.357 128.882 199.174 cv
128.698 198.99 128.606 198.758 128.606 198.477 cv
128.606 198.272 128.655 198.056 128.752 197.829 cv
130.291 194.378 li
129.676 194.378 li
130.032 193.601 li
130.631 193.601 li
132.721 188.935 li
135.07 188.935 li
132.997 193.601 li
133.644 193.601 li
133.288 194.378 li
132.64 194.378 li
131.101 197.829 li
131.085 197.91 li
131.085 197.986 131.139 198.023 131.247 198.023 cv
131.582 198.023 131.997 197.847 132.494 197.497 cv
132.991 197.146 133.315 196.797 133.466 196.452 cv
133.904 197.035 li
cp
f
140.384 197.035 mo
140.114 197.63 139.514 198.185 138.586 198.704 cv
137.7 199.2 136.879 199.449 136.123 199.449 cv
135.443 199.449 135.102 199.141 135.102 198.525 cv
135.102 198.32 135.151 198.104 135.248 197.877 cv
136.382 195.35 li
136.398 195.27 li
136.269 195.067 li
136.01 194.978 li
135.88 194.978 135.756 195.113 135.637 195.383 cv
135.119 196.539 134.265 197.434 133.077 198.072 cv
132.721 198.266 132.419 198.374 132.17 198.396 cv
134.568 193.034 li
138.035 194.994 li
138.283 195.134 138.407 195.366 138.407 195.691 cv
138.359 195.885 li
137.646 197.505 li
137.603 197.602 137.581 197.688 137.581 197.764 cv
137.581 197.905 137.662 197.975 137.824 197.975 cv
138.148 197.975 138.545 197.802 139.015 197.456 cv
139.485 197.111 139.795 196.776 139.947 196.452 cv
140.384 197.035 li
cp
f
142.198 196.014 mo
142.797 194.686 li
142.814 194.589 li
142.814 194.459 142.722 194.394 142.538 194.394 cv
142.311 194.394 142.155 194.497 142.068 194.702 cv
141.469 196.014 li
142.198 196.014 li
cp
145.714 197.035 mo
145.443 197.651 144.828 198.218 143.866 198.736 cv
142.981 199.212 142.219 199.449 141.582 199.449 cv
140.351 199.449 li
139.185 199.449 138.601 199.066 138.601 198.298 cv
138.601 197.899 138.753 197.37 139.055 196.711 cv
139.573 195.545 li
139.833 194.961 140.183 194.475 140.626 194.087 cv
141.123 193.655 141.658 193.439 142.23 193.439 cv
143.834 193.439 li
144.525 193.439 144.871 193.703 144.871 194.232 cv
144.871 194.557 144.682 195.145 144.304 195.998 cv
144.034 196.614 143.499 196.922 142.7 196.922 cv
141.08 196.922 li
140.691 197.781 li
140.616 197.953 140.578 198.104 140.578 198.234 cv
140.578 198.396 140.643 198.477 140.772 198.477 cv
141.242 198.477 li
142.29 198.477 143.278 198.169 144.207 197.553 cv
144.758 197.175 145.119 196.809 145.292 196.452 cv
145.714 197.019 li
145.714 197.035 li
cp
f
155.061 197.035 mo
154.79 197.63 154.186 198.185 153.246 198.704 cv
152.361 199.2 151.545 199.449 150.8 199.449 cv
150.649 199.449 150.492 199.411 150.33 199.335 cv
149.963 199.174 149.779 198.904 149.779 198.525 cv
149.779 198.331 149.828 198.109 149.925 197.862 cv
151.351 194.686 li
151.383 194.524 li
151.383 194.406 151.313 194.346 151.172 194.346 cv
150.924 194.346 150.746 194.465 150.638 194.702 cv
148.532 199.449 li
146.183 199.449 li
148.305 194.686 li
148.337 194.524 li
148.337 194.406 148.262 194.346 148.111 194.346 cv
147.873 194.346 147.7 194.465 147.592 194.702 cv
145.486 199.449 li
143.121 199.449 li
145.94 193.115 li
147.43 193.908 li
147.873 193.455 148.483 193.228 149.261 193.228 cv
149.822 193.228 150.184 193.477 150.346 193.973 cv
150.886 193.477 151.54 193.228 152.307 193.228 cv
153.063 193.228 153.44 193.623 153.44 194.411 cv
153.44 194.799 153.343 195.215 153.149 195.658 cv
152.339 197.489 li
152.285 197.597 152.258 197.683 152.258 197.748 cv
152.258 197.888 152.344 197.958 152.517 197.958 cv
152.83 197.958 153.224 197.786 153.7 197.44 cv
154.175 197.094 154.483 196.766 154.623 196.452 cv
155.061 197.019 li
155.061 197.035 li
cp
f
156.939 196.014 mo
157.539 194.686 li
157.555 194.589 li
157.555 194.459 157.463 194.394 157.279 194.394 cv
157.053 194.394 156.896 194.497 156.81 194.702 cv
156.21 196.014 li
156.939 196.014 li
cp
160.455 197.035 mo
160.185 197.651 159.569 198.218 158.608 198.736 cv
157.722 199.212 156.961 199.449 156.324 199.449 cv
155.093 199.449 li
153.926 199.449 153.343 199.066 153.343 198.298 cv
153.343 197.899 153.494 197.37 153.797 196.711 cv
154.315 195.545 li
154.574 194.961 154.925 194.475 155.368 194.087 cv
155.865 193.655 156.399 193.439 156.972 193.439 cv
158.576 193.439 li
159.267 193.439 159.613 193.703 159.613 194.232 cv
159.613 194.557 159.424 195.145 159.046 195.998 cv
158.775 196.614 158.241 196.922 157.442 196.922 cv
155.822 196.922 li
155.433 197.781 li
155.357 197.953 155.32 198.104 155.32 198.234 cv
155.32 198.396 155.384 198.477 155.514 198.477 cv
155.984 198.477 li
157.031 198.477 158.019 198.169 158.948 197.553 cv
159.499 197.175 159.861 196.809 160.034 196.452 cv
160.455 197.019 li
160.455 197.035 li
cp
f
163.938 192.58 mo
164.975 190.279 li
164.991 190.215 li
164.991 190.107 164.91 190.052 164.748 190.052 cv
164.575 190.052 164.451 190.139 164.375 190.312 cv
164.019 191.122 163.474 192.343 162.739 193.973 cv
163.171 193.865 163.571 193.401 163.938 192.58 cv
cp
164.602 197.035 mo
164.3 197.716 163.717 198.298 162.853 198.784 cv
162.064 199.227 161.314 199.449 160.601 199.449 cv
160.093 199.449 159.667 199.314 159.321 199.044 cv
158.943 198.752 158.754 198.363 158.754 197.877 cv
158.754 197.716 158.786 197.559 158.851 197.408 cv
161.864 190.652 li
162.124 190.08 162.518 189.638 163.047 189.324 cv
163.533 189.043 164.068 188.903 164.651 188.903 cv
165.05 188.903 165.418 188.978 165.753 189.13 cv
166.152 189.313 166.352 189.561 166.352 189.875 cv
166.352 189.983 166.325 190.096 166.271 190.215 cv
165.218 192.58 li
164.592 193.984 163.533 194.973 162.043 195.545 cv
161.2 197.44 li
161.146 197.548 161.119 197.645 161.119 197.731 cv
161.119 197.97 161.286 198.088 161.621 198.088 cv
162.064 198.088 162.553 197.924 163.088 197.594 cv
163.622 197.265 163.981 196.884 164.165 196.452 cv
164.602 197.035 li
cp
f
164.569 200.696 mo
164.72 200.329 164.963 199.784 165.298 199.06 cv
164.92 199.32 164.639 199.568 164.456 199.806 cv
164.327 199.978 164.17 200.275 163.986 200.696 cv
163.97 200.761 li
163.97 200.88 164.051 200.939 164.213 200.939 cv
164.375 200.939 164.494 200.859 164.569 200.696 cv
cp
171.049 197.035 mo
170.812 197.575 170.293 198.083 169.494 198.558 cv
168.803 198.979 168.139 199.249 167.502 199.368 cv
167.08 200.323 li
166.821 200.918 166.384 201.382 165.768 201.716 cv
165.217 202.019 164.634 202.171 164.018 202.171 cv
163.576 202.171 163.198 202.076 162.885 201.887 cv
162.571 201.698 162.415 201.425 162.415 201.069 cv
162.415 200.874 162.463 200.669 162.56 200.453 cv
162.906 199.676 163.559 199.168 164.521 198.93 cv
163.775 198.791 163.403 198.396 163.403 197.748 cv
163.403 197.348 163.543 196.835 163.824 196.209 cv
165.201 193.115 li
166.87 194.102 li
165.525 197.132 li
165.449 197.295 165.412 197.434 165.412 197.553 cv
165.412 197.694 165.471 197.764 165.59 197.764 cv
165.838 197.764 166.065 197.537 166.27 197.084 cv
168.149 192.855 li
169.834 194.102 li
168.328 197.489 li
168.274 197.597 168.247 197.683 168.247 197.748 cv
168.247 197.888 168.333 197.958 168.506 197.958 cv
168.819 197.958 169.213 197.786 169.688 197.44 cv
170.164 197.094 170.471 196.766 170.612 196.452 cv
171.049 197.019 li
171.049 197.035 li
cp
f
175.375 197.862 mo
176.784 194.686 li
176.816 194.589 li
176.816 194.459 176.724 194.394 176.541 194.394 cv
176.303 194.394 176.141 194.497 176.055 194.702 cv
174.678 197.781 li
174.602 197.953 174.564 198.109 174.564 198.25 cv
174.564 198.401 174.63 198.477 174.759 198.477 cv
174.986 198.477 175.191 198.272 175.375 197.862 cv
cp
180.51 197.019 mo
180.229 197.635 179.624 198.196 178.696 198.704 cv
177.81 199.2 176.989 199.449 176.233 199.449 cv
175.888 199.449 175.688 199.287 175.634 198.963 cv
175.245 199.308 174.807 199.481 174.321 199.481 cv
173.177 199.481 172.605 199.092 172.605 198.315 cv
172.605 197.905 172.75 197.37 173.042 196.711 cv
173.269 196.209 li
173.603 195.453 174.041 194.827 174.581 194.329 cv
175.229 193.736 175.909 193.439 176.622 193.439 cv
177.151 193.439 177.556 193.616 177.837 193.973 cv
177.983 193.649 li
179.473 193.649 li
178.76 195.253 li
178.544 195.75 178.215 196.495 177.772 197.489 cv
177.729 197.586 177.707 197.673 177.707 197.748 cv
177.707 197.888 177.788 197.958 177.95 197.958 cv
178.274 197.958 178.671 197.786 179.141 197.44 cv
179.611 197.094 179.921 196.766 180.073 196.452 cv
180.51 197.019 li
cp
f
185.856 197.035 mo
185.586 197.651 184.97 198.218 184.009 198.736 cv
183.124 199.212 182.362 199.449 181.725 199.449 cv
180.494 199.449 li
179.328 199.449 178.744 199.066 178.744 198.298 cv
178.744 197.899 178.895 197.37 179.198 196.711 cv
179.716 195.545 li
179.975 194.961 180.326 194.475 180.769 194.087 cv
181.266 193.655 181.801 193.439 182.373 193.439 cv
183.977 193.439 li
184.668 193.439 185.014 193.709 185.014 194.248 cv
185.014 194.368 184.998 194.508 184.965 194.67 cv
182.551 195.545 li
182.94 194.686 li
182.956 194.589 li
182.956 194.459 182.864 194.394 182.681 194.394 cv
182.454 194.394 182.298 194.497 182.211 194.702 cv
180.834 197.781 li
180.759 197.953 180.721 198.104 180.721 198.234 cv
180.721 198.396 180.785 198.477 180.915 198.477 cv
181.385 198.477 li
182.422 198.477 183.41 198.169 184.349 197.553 cv
184.9 197.187 185.262 196.819 185.435 196.452 cv
185.856 197.019 li
185.856 197.035 li
cp
f
189.436 197.035 mo
189.166 197.64 188.566 198.196 187.638 198.704 cv
186.752 199.2 185.931 199.449 185.176 199.449 cv
184.851 199.449 184.598 199.357 184.414 199.174 cv
184.23 198.99 184.138 198.758 184.138 198.477 cv
184.138 198.272 184.187 198.056 184.284 197.829 cv
185.823 194.378 li
185.208 194.378 li
185.564 193.601 li
186.163 193.601 li
188.253 188.935 li
190.602 188.935 li
188.529 193.601 li
189.177 193.601 li
188.82 194.378 li
188.173 194.378 li
186.634 197.829 li
186.617 197.91 li
186.617 197.986 186.671 198.023 186.779 198.023 cv
187.114 198.023 187.53 197.847 188.027 197.497 cv
188.523 197.146 188.847 196.797 188.999 196.452 cv
189.436 197.035 li
cp
f
193.421 191.381 mo
193.292 191.673 193.038 191.905 192.66 192.077 cv
192.347 192.218 192.034 192.288 191.72 192.288 cv
191.472 192.288 191.251 192.235 191.056 192.127 cv
190.862 192.019 190.764 191.867 190.764 191.673 cv
190.764 191.586 190.786 191.489 190.83 191.381 cv
190.959 191.1 191.213 190.873 191.591 190.701 cv
191.904 190.55 192.217 190.474 192.53 190.474 cv
192.779 190.474 193 190.528 193.195 190.636 cv
193.389 190.744 193.486 190.901 193.486 191.106 cv
193.486 191.192 193.464 191.284 193.421 191.381 cv
cp
193.243 197.035 mo
192.984 197.63 192.384 198.185 191.445 198.704 cv
190.559 199.2 189.738 199.449 188.982 199.449 cv
188.702 199.449 188.469 199.343 188.286 199.133 cv
188.102 198.922 188.01 198.677 188.01 198.396 cv
188.01 198.212 188.048 198.034 188.124 197.862 cv
190.246 193.115 li
192.028 194.102 li
190.521 197.489 li
190.478 197.597 190.457 197.683 190.457 197.748 cv
190.457 197.888 190.538 197.958 190.7 197.958 cv
191.024 197.958 191.421 197.786 191.89 197.44 cv
192.36 197.094 192.67 196.766 192.822 196.452 cv
193.259 197.019 li
193.243 197.035 li
cp
f
197.066 196.711 mo
196.742 197.446 196.218 198.083 195.495 198.623 cv
194.739 199.195 193.999 199.481 193.276 199.481 cv
192.12 199.481 191.542 199.092 191.542 198.315 cv
191.542 197.915 191.693 197.381 191.995 196.711 cv
193.356 193.649 li
195.479 193.649 li
193.632 197.781 li
193.556 197.953 193.519 198.109 193.519 198.25 cv
193.519 198.401 193.583 198.477 193.713 198.477 cv
193.939 198.477 194.139 198.272 194.312 197.862 cv
196.434 193.115 li
198.233 194.102 li
197.066 196.711 li
cp
f
200.63 196.014 mo
201.229 194.686 li
201.245 194.589 li
201.245 194.459 201.154 194.394 200.97 194.394 cv
200.743 194.394 200.587 194.497 200.5 194.702 cv
199.901 196.014 li
200.63 196.014 li
cp
204.145 197.035 mo
203.875 197.651 203.259 198.218 202.298 198.736 cv
201.413 199.212 200.651 199.449 200.014 199.449 cv
198.783 199.449 li
197.617 199.449 197.033 199.066 197.033 198.298 cv
197.033 197.899 197.184 197.37 197.487 196.711 cv
198.005 195.545 li
198.265 194.961 198.615 194.475 199.058 194.087 cv
199.555 193.655 200.09 193.439 200.662 193.439 cv
202.266 193.439 li
202.957 193.439 203.303 193.703 203.303 194.232 cv
203.303 194.557 203.114 195.145 202.736 195.998 cv
202.466 196.614 201.931 196.922 201.132 196.922 cv
199.512 196.922 li
199.123 197.781 li
199.048 197.953 199.01 198.104 199.01 198.234 cv
199.01 198.396 199.075 198.477 199.204 198.477 cv
199.674 198.477 li
200.722 198.477 201.709 198.169 202.639 197.553 cv
203.19 197.175 203.551 196.809 203.724 196.452 cv
204.145 197.019 li
204.145 197.035 li
cp
f
37.7171 30.1953 mo
39.7596 30.1297 41.8004 30.0942 43.8425 30.0651 cv
44.8634 30.0454 45.8856 30.0454 46.9056 30.0357 cv
49.9694 30.0155 li
49.766 30.0406 li
50.3785 29.9663 50.9885 29.8837 51.6038 29.8221 cv
52.2159 29.7549 52.8325 29.7009 53.4473 29.6433 cv
54.6791 29.5303 55.9099 29.4178 57.1285 29.2425 cv
57.4344 29.2052 57.7381 29.1559 58.0418 29.1063 cv
58.4979 29.0346 li
58.7264 28.9964 li
58.8947 28.9732 li
59.0085 28.959 li
59.6194 28.8905 60.2293 28.8026 60.8367 28.7046 cv
61.4444 28.6026 62.0495 28.4901 62.6516 28.3469 cv
63.2546 28.2128 63.8549 28.0551 64.4499 27.8529 cv
65.123 27.6249 65.8508 27.9857 66.0793 28.6563 cv
66.3079 29.3287 65.9492 30.0577 65.2765 30.2862 cv
65.1068 30.3442 64.9253 30.3627 64.7575 30.3495 cv
64.1312 30.298 63.5112 30.2915 62.8916 30.3069 cv
62.2746 30.3139 61.6581 30.3517 61.045 30.4005 cv
60.4315 30.4528 59.8198 30.516 59.2102 30.5977 cv
59.0951 30.6105 li
59.0669 30.6149 li
59.0538 30.6171 li
59.0463 30.6171 li
59.0692 30.6127 58.9883 30.6268 59.0977 30.6092 cv
59.0938 30.6105 li
59.0371 30.6215 li
58.8108 30.6729 li
58.3608 30.7727 li
58.0602 30.8395 57.7605 30.9076 57.4625 30.9845 cv
56.2646 31.2724 55.0794 31.6244 53.8942 31.9733 cv
53.3009 32.146 52.709 32.3253 52.1144 32.4874 cv
51.5212 32.6593 50.923 32.8073 50.3258 32.9651 cv
50.2648 32.977 li
50.1197 32.9901 li
47.0708 33.2753 li
46.0526 33.3689 45.037 33.4732 44.0188 33.557 cv
41.9846 33.7333 39.9499 33.9047 37.9126 34.0444 cv
36.8509 34.116 35.9311 33.3154 35.8573 32.2532 cv
35.7857 31.1906 36.5872 30.2712 37.6485 30.1983 cv
37.7171 30.1953 li
cp
.968627 .733333 .533333 rgb
f
52.8729 83.7276 mo
52.7863 83.6151 52.7059 83.5014 52.6395 83.3889 cv
53.366 84.241 li
53.1524 84.081 53.0061 83.9073 52.8729 83.7276 cv
cp
57.5992 86.0611 mo
52.4462 82.9942 li
52.386 82.8689 52.339 82.7411 52.299 82.6145 cv
52.2594 82.4686 li
52.2396 82.3944 li
52.2326 82.3746 li
52.2326 82.3482 li
52.1931 82.0885 li
52.1258 81.6877 52.0529 81.2948 52.0129 80.8945 cv
51.9588 80.495 51.8995 80.0956 51.8727 79.6886 cv
51.8064 78.8889 51.7255 78.0811 51.686 77.2747 cv
51.6393 76.4608 51.5796 75.6619 51.5062 74.8547 cv
51.4657 74.355 li
51.4131 73.6488 li
51.2794 72.4416 li
51.0263 70.0483 li
50.4994 65.2412 li
50.4792 65.0544 50.4256 64.8756 50.339 64.7024 cv
50.2388 64.5078 li
45.5525 55.3214 li
44.5462 53.3479 li
43.4994 51.2947 li
42.5796 49.4951 li
42.5189 49.3686 42.4323 49.2346 42.3462 49.115 cv
42.1863 48.8887 41.9991 48.6887 41.7925 48.5148 cv
41.5196 48.2884 41.2191 48.1144 40.8991 47.9953 cv
40.0061 47.6486 38.9721 47.7281 38.113 48.2682 cv
37.9728 48.3613 li
37.7997 48.4945 li
37.5325 48.7081 37.3061 48.9612 37.1326 49.2412 cv
36.5459 50.1622 36.473 51.3413 36.9788 52.348 cv
37.0465 52.4825 37.1259 52.6144 37.2125 52.7413 cv
38.4527 54.4882 li
38.6192 54.7286 li
38.8258 55.0217 li
42.3524 60.0016 li
42.3524 60.0082 li
46.619 66.0476 li
46.5993 66.1619 46.5729 66.2823 46.5531 66.4009 cv
46.4595 67.0214 li
46.4059 67.4354 46.3663 67.8471 46.3325 68.262 cv
46.2991 68.6742 46.2855 69.0811 46.2789 69.4881 cv
46.2727 69.895 46.2727 70.3081 46.2855 70.7093 cv
46.2855 71.1145 46.3194 71.5218 46.3391 71.9213 cv
46.3861 72.5282 li
46.4129 72.8284 li
46.4459 73.1549 li
46.4793 73.5618 46.5456 73.9547 46.6058 74.355 cv
46.6793 74.7483 46.7596 75.1486 46.8524 75.5415 cv
46.9526 75.9349 47.066 76.3212 47.193 76.7153 cv
47.3389 77.1016 47.4593 77.4883 47.6192 77.875 cv
48.5794 80.1747 li
48.746 80.5614 48.8726 80.9482 49.0193 81.3344 cv
49.1657 81.7212 49.2852 82.1087 49.3924 82.5015 cv
49.4785 82.7951 li
49.486 82.8154 li
49.486 82.822 li
49.5058 82.9212 li
49.5194 82.9613 li
49.5396 83.0355 li
49.5792 83.1753 li
49.6323 83.3744 49.6728 83.5743 49.6992 83.7751 cv
49.7331 84.1746 49.7462 84.5815 49.5924 85.028 cv
49.5594 85.1485 li
49.446 85.6951 49.8055 86.2338 50.3522 86.3477 cv
50.7855 86.4347 li
56.9726 87.6946 li
57.3259 87.7619 57.7126 87.6146 57.9125 87.2741 cv
58.1587 86.8544 58.0193 86.3081 57.5992 86.0611 cv
cp
f
41.9732 46.811 mo
46.7631 53.5403 li
40.8006 62.2749 li
36.6413 52.7317 li
41.9732 46.811 li
cp
.890196 .890196 .890196 rgb
f
43.4277 33.9916 mo
43.4277 33.9916 42.9685 37.9872 42.5088 41.9858 cv
42.4355 42.6212 42.3607 43.2571 42.2895 43.8799 cv
42.2491 44.2309 42.2096 44.5785 42.1695 44.9213 cv
42.1415 45.1543 42.1168 45.384 42.0883 45.6095 cv
42.0677 45.8363 42.0588 46.0551 42.0299 46.2709 cv
41.9846 46.6994 41.9402 47.1041 41.9006 47.4829 cv
41.7393 48.981 41.6321 49.9785 41.6321 49.9785 cv
41.4981 51.2411 li
41.2538 53.4959 39.2305 55.1302 36.9756 54.8907 cv
34.7191 54.6468 33.0834 52.6241 33.3251 50.3671 cv
33.3396 50.2374 33.3611 50.1064 33.3858 49.9785 cv
33.3858 49.9785 33.4372 49.7272 33.5268 49.2934 cv
33.6235 48.8544 33.7285 48.2296 33.8709 47.4829 cv
33.9399 47.1041 34.0155 46.6994 34.0942 46.2709 cv
34.1118 46.1636 34.1364 46.0551 34.1478 45.9444 cv
34.1584 45.8337 34.1404 45.722 34.1337 45.6095 cv
34.1118 45.384 34.0942 45.1543 34.0722 44.9213 cv
34.0256 44.3755 33.9747 43.8078 33.9206 43.232 cv
33.8872 42.8189 33.8463 42.4024 33.8094 41.9858 cv
33.4543 37.9872 33.0988 33.9916 33.0988 33.9916 cv
33.0883 33.8546 li
33.0488 33.4055 33.0677 32.9634 33.1415 32.5398 cv
35.9693 28.7433 li
36.0945 28.6778 li
36.1526 28.5776 36.2053 28.4717 36.2532 28.361 cv
37.0649 26.6009 37.0508 23.7524 37.0508 23.7524 cv
41.5416 26.0727 li
40.4065 25.8799 40.4671 27.3805 40.78 28.8462 cv
40.78 28.8462 43.4277 32.5186 43.4277 33.9916 cv
cp
1 .854902 .729412 rgb
f
24.9724 82.3021 mo
24.9654 82.0283 24.9997 81.7809 25.0463 81.5546 cv
24.9724 82.3021 li
cp
39.0262 50.3349 mo
38.9721 50.1354 li
38.7788 49.4683 38.3591 48.8887 37.7997 48.4945 cv
37.3391 48.1614 36.7858 47.9544 36.186 47.9149 cv
35.7927 47.8881 35.413 47.9351 35.0593 48.0415 cv
34.4791 48.2221 33.9659 48.5547 33.5862 49.0078 cv
33.1595 49.5017 32.8857 50.1354 32.8391 50.8351 cv
32.0529 62.455 li
31.7326 67.115 li
31.5058 67.2341 31.2927 67.3611 31.0796 67.4951 cv
30.7925 67.7026 30.4863 67.9012 30.2059 68.1214 cv
29.9264 68.3349 29.6596 68.5613 29.3995 68.7942 cv
29.1393 69.0349 28.8867 69.2679 28.6459 69.5215 cv
28.3994 69.7623 28.173 70.022 27.9396 70.2751 cv
27.6259 70.6412 li
27.5727 70.7027 li
27.4791 70.8078 27.3864 70.9212 27.2932 71.0415 cv
27.0792 71.3078 26.8793 71.5882 26.6793 71.8681 cv
26.4925 72.1551 26.3062 72.4482 26.1392 72.7479 cv
25.966 73.0551 25.8193 73.375 25.6663 73.695 cv
25.5055 74.0008 25.3799 74.3413 25.2396 74.6679 cv
24.4262 76.6489 li
24.2724 76.961 24.1261 77.2875 23.9657 77.6012 cv
23.8057 77.9212 23.6532 78.2024 23.4594 78.5281 cv
23.2727 78.8221 23.0666 79.0945 22.8125 79.3354 cv
22.5665 79.581 22.2927 79.8011 21.9266 79.9483 cv
21.6994 80.0741 li
21.2059 80.4282 21.093 81.1147 21.4524 81.6087 cv
21.7262 81.9887 li
25.5393 87.2683 li
25.7599 87.5676 26.1454 87.7082 26.5194 87.5953 cv
26.986 87.4551 27.2528 86.9546 27.106 86.4887 cv
25.3328 80.775 li
25.4264 80.5816 25.5323 80.4014 25.6593 80.2274 cv
26.2794 79.4149 li
26.9329 78.6212 li
27.6259 77.8544 li
27.8522 77.6012 28.0794 77.3345 28.3198 77.088 cv
28.7927 76.5874 29.2796 76.0948 29.7392 75.5811 cv
30.1796 75.1017 30.6331 74.6283 31.0593 74.1278 cv
31.1191 74.0549 li
31.3524 73.7811 31.5665 73.5477 31.806 73.2546 cv
32.4726 72.4689 li
35.1128 69.3013 li
35.2724 69.1079 35.3928 68.875 35.4526 68.6087 cv
35.4925 68.3951 li
36.5393 63.4684 li
38.1059 56.1019 li
38.1059 56.0953 li
38.3863 54.7875 li
38.4527 54.4882 li
39.0459 51.7021 li
39.0727 51.5614 39.0925 51.4076 39.1057 51.2613 cv
39.1259 50.9418 39.0991 50.6281 39.0262 50.3349 cv
cp
.941176 .745098 .572549 rgb
f
42.2895 43.8799 mo
42.2491 44.2309 42.2096 44.5785 42.1695 44.9213 cv
42.1415 45.1543 42.1168 45.384 42.0883 45.6095 cv
42.0677 45.8363 42.0588 46.0551 42.0299 46.2709 cv
42.0272 46.2924 li
41.9846 46.7121 41.9402 47.1124 41.9006 47.4829 cv
41.7393 48.981 41.6321 49.9785 41.6321 49.9785 cv
41.4981 51.2411 li
41.3262 52.8389 40.2588 54.1217 38.8508 54.6491 cv
38.2474 63.8468 li
30.1712 62.0363 li
31.7299 49.4512 li
34.0942 46.2709 li
34.1118 46.1636 34.1364 46.0551 34.1478 45.9444 cv
34.1584 45.8468 34.1443 45.7501 34.1364 45.6526 cv
34.1337 45.6095 li
34.1118 45.384 34.0942 45.1543 34.0722 44.9213 cv
34.0256 44.3755 33.9747 43.8078 33.9206 43.232 cv
34.0006 43.2927 li
42.2895 43.8799 li
cp
1 1 1 rgb
f
42.2895 43.8799 mo
42.2491 44.2309 42.2096 44.5785 42.1695 44.9213 cv
42.1415 45.1543 42.1168 45.384 42.0883 45.6095 cv
42.0677 45.8363 42.0588 46.0551 42.0299 46.2709 cv
42.0272 46.2924 li
40.4777 46.175 36.1561 45.8218 34.1364 45.6526 cv
34.1337 45.6095 li
34.1118 45.384 34.0942 45.1543 34.0722 44.9213 cv
34.0256 44.3755 33.9747 43.8078 33.9206 43.232 cv
34.0006 43.2927 li
42.2895 43.8799 li
cp
.14902 .14902 .14902 rgb
f
36.1003 33.0864 mo
36.7578 43.9058 li
33.9983 43.2901 li
39.1905 35.9112 li
39.0793 36.2373 li
39.2445 31.3523 li
39.2687 30.6553 39.8515 30.1078 40.5494 30.1328 cv
41.2454 30.1561 41.7921 30.7415 41.7671 31.4363 cv
41.7407 31.6587 li
40.7177 36.4368 li
40.7145 36.4557 li
40.6926 36.5611 40.6526 36.6675 40.6069 36.7598 cv
36.5547 44.8203 li
36.193 45.5387 35.3212 45.8275 34.604 45.4666 cv
34.1663 45.2465 33.8872 44.8334 33.82 44.3821 cv
33.7949 44.2072 li
32.2656 33.4744 li
32.1149 32.4198 32.8479 31.4446 33.9026 31.2934 cv
34.9573 31.1431 35.9337 31.8775 36.084 32.9317 cv
36.1003 33.0864 li
cp
1 .792157 .619608 rgb
f
44.652 22.6059 mo
44.6503 23.1921 44.4073 24.7262 44.3484 24.9486 cv
43.8052 27.0273 42.7224 28.2686 42.7224 28.2686 cv
42.7224 28.2686 38.9633 27.5576 37.2851 26.3157 cv
36.0014 25.3622 35.061 24.0974 35.061 22.5993 cv
35.0631 19.1386 35.5131 16.3437 39.8616 16.3437 cv
42.8323 16.3437 43.9784 17.6506 44.409 19.5794 cv
44.6076 20.4745 44.652 21.5064 44.652 22.6059 cv
cp
1 .854902 .729412 rgb
f
44.409 19.5794 mo
43.4075 19.691 41.8747 18.4175 40.9374 19.2599 cv
40.0299 20.0777 40.2329 21.5244 40.1762 22.6608 cv
39.8971 22.7026 39.5575 22.6714 39.3 22.5694 cv
39.4173 21.9282 38.9853 21.5525 38.3819 21.589 cv
37.6436 21.6329 37.4564 22.2227 37.2776 22.8559 cv
37.1418 23.3337 37.8335 23.8214 37.8502 24.3013 cv
37.8774 24.9754 37.2727 25.6456 37.2851 26.3157 cv
36.0014 25.3622 35.061 24.0974 35.061 22.5993 cv
35.0631 19.1386 35.4284 15.7104 39.7772 15.7104 cv
42.7474 15.7104 44.9491 16.8851 44.409 19.5794 cv
cp
.321569 .247059 .172549 rgb
f
37.6503 36.6965 mo
39.8563 38.6674 li
40.7177 36.4368 li
40.7177 36.4368 44.652 31.55 43.8425 30.0651 cv
43.2137 28.9129 41.078 28.491 39.8563 28.4739 cv
38.0084 28.448 37.434 29.8028 37.7171 30.9163 cv
38.189 32.7669 38.2466 35.0482 38.2466 35.0482 cv
37.6503 36.6965 li
cp
1 1 1 rgb
f
59.0085 28.959 mo
59.0085 31.3888 li
61.0713 30.9163 li
61.0713 30.9163 62.8555 32.4668 63.4668 31.3888 cv
63.4668 31.3888 65.6215 33.1093 66.8189 31.7689 cv
68.016 30.4303 68.1364 26.1505 64.7843 26.3157 cv
61.4299 26.4788 60.591 27.7844 60.591 27.7844 cv
59.0085 28.2686 li
59.0085 28.959 li
cp
f
57.9099 87.2767 mo
57.7117 87.6116 57.329 87.764 56.9695 87.6928 cv
50.786 86.4329 li
50.3557 86.3464 li
49.8046 86.2347 49.4487 85.6968 49.5599 85.1485 cv
49.595 85.0271 li
49.7436 84.5851 49.7299 84.1755 49.6983 83.7721 cv
49.6719 83.5721 49.6323 83.3744 49.5823 83.1761 cv
49.5387 83.032 li
49.5168 82.9613 li
49.5067 82.9248 li
49.5067 82.9182 li
49.4892 82.8202 li
49.4852 82.8131 li
49.482 82.796 li
49.3946 82.5007 li
49.2834 82.1101 49.1657 81.7212 49.0193 81.3322 cv
48.8739 80.949 48.7456 80.5614 48.5768 80.176 cv
47.6206 77.8741 li
47.4623 77.4896 47.3375 77.1016 47.1934 76.7131 cv
47.0633 76.3247 46.953 75.9326 46.8559 75.5415 cv
46.7579 75.1509 46.6788 74.7514 46.6072 74.355 cv
51.4689 74.355 li
51.5079 74.8555 li
51.5787 75.6598 51.6372 76.4644 51.6837 77.2726 cv
51.7233 78.0811 51.8055 78.8854 51.8749 79.6904 cv
51.8995 80.0947 51.961 80.4928 52.0107 80.8945 cv
52.0546 81.2927 52.1293 81.6899 52.1909 82.0872 cv
52.2308 82.3495 li
52.2308 82.3544 li
52.2343 82.3706 li
52.2401 82.3922 li
52.259 82.4651 li
52.302 82.6123 li
52.3421 82.7411 52.3878 82.8712 52.4457 82.9977 cv
57.5979 86.059 li
58.022 86.309 58.1582 86.8544 57.9099 87.2767 cv
cp
.890196 .890196 .890196 rgb
f
31.0589 74.1287 mo
30.63 74.6261 30.1782 75.0994 29.7401 75.5846 cv
29.2769 76.0948 28.7909 76.5866 28.3171 77.0901 cv
28.079 77.3372 27.8522 77.6012 27.6224 77.8521 cv
26.9333 78.6203 li
26.2811 79.418 li
25.6589 80.2265 li
25.5323 80.3997 25.4242 80.5785 25.3319 80.7732 cv
27.1052 86.4852 li
27.2497 86.9524 26.9874 87.4516 26.5206 87.5953 cv
26.1462 87.7091 25.7564 87.5654 25.5407 87.2692 cv
21.7236 81.9874 li
21.4503 81.6073 li
21.0951 81.1147 21.2059 80.4274 21.6985 80.0762 cv
21.9249 79.9506 li
22.2909 79.7989 22.5682 79.5801 22.8152 79.3362 cv
23.0674 79.0936 23.2713 78.8221 23.4564 78.5281 cv
23.6532 78.2037 23.8079 77.9189 23.9692 77.6012 cv
24.1279 77.2875 24.272 76.9631 24.4262 76.6489 cv
25.2423 74.6657 li
25.3776 74.3392 25.5077 74.0043 25.6659 73.6919 cv
25.8166 73.3706 25.9678 73.052 26.1392 72.7497 cv
26.3088 72.4482 26.4921 72.1543 26.6815 71.8663 cv
26.8793 71.586 27.0805 71.3061 27.2959 71.0407 cv
27.3833 70.9247 27.4769 70.8095 27.5697 70.7036 cv
28.9104 71.9855 30.1813 73.2471 31.0589 74.1287 cv
cp
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (IvAN) ()
%%Title: (1501.i034.010.S.m004.c11.physical activity 2x2 set.eps)
%%CreationDate: 1/31/2015 12:13 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2NJZ8VW0T'MjF+La;B!0rsP\UYJ!!ZN)^i-c=_5])(V&>&.XiVDkZg_!C]8Vk>K4`gIfVpCn$L*65LN'3o<?<un=+)JCs
%Fr.djS?$5/l+G)Ppa>t9hl^:6fRDL73jV8M]61dD3p8fsFgkOE7n_Z5[s'Z1>PbII:j^XGV8"j&mol8WpE-f^:35_?or5,1?WPmO
%ek3E\hsAtm9ZB?lKfd%1U0]YVIV*j"ZFWi)oiAh'MkI>#hNn`gX&EJ9ptsSVQ`]*;;8:`L\%;m;DP1]le]Z>*Xi%%6JHhUE)>`5)
%rNXpem50kcI@7E"CdgS^Dq$JZXkL*K5`W@@Vhki^0@TsCD^Gqojo;1erdWSejA5R(em'enH(I6=?k+[r4AM@ECpemU0``Cq]L\RN
%7Vi%.e*OR=WiRdaMV>H8Vts'>R-oJD:'Wl@I;R^$`D#j1_XalWiAYU8]]Re+G3^5k[>1mHG,qOM=mu%8g]'XMVPp3HQcGXtn's_9
%:WFda-+SgZh<e6u[Q3]gdV8:&<d)UbeeT4LhJTAi\Cg0giu[>t0e<:toQYkfq-+5/B69;LLTQ2gmV?.mZu^>8QM*]C2j"U$A1fP(
%MUlQ:0t>-[N#2TuPX>[\cZ?t@B>+"Vqd@^Z5XX;%./KUghB$->YdGnZiZVrDje#NOUMH]sp\V(FEq..u=aEu^ok`d43i64IfO!k2
%isLh9lQTd5!Bks.G?=f*r.Y/?6Q@35?5W1nBpUlf%l!M1s7TFk(;E!#*7GuOoX`(uWs:`B^]//N^>7U]eR#_nqV<2ul?;RJk-+F#
%NS5)]_qIS`\OC#Tmt3MSc1^+UEsAFgp0'?L/+r"2l+]=Tmm[*%,:.Xj*'g1?#<uC_mU9\b!Mk"F?$k&e*F<:GkFLa$ZWH0O%)uUh
%s.I+`l,\US%q-7mQ;Hb+%Z*8eS$=EfBMeNRKr/VYpP?\p%^qE&UW]iNM\k;?L0XaqJ$[mD+70RCX?m+U?Z:/d<q"u"JLn-OI'cu0
%k]T&*K9-<6Vr8rrqU4P&1Wc<[U^?7GJ)8#.R[m3#\(<atCMuocJ&:(J':mSG6<LV6V`nh7d6A'e45&Z?1f&rrbM-kXI]#<o1Y]#2
%UY4PY,P&.nC\HJaF5A+DGGfjSbdOs/h!VY+pXS(aKOe+fheO87N0YuZQG[^#0>o!5$t+DX!j"\4$nk.R^u,X^`1@Obgni,aok;Je
%kP_Z/-5Omi"E`:gWP-61Al#kK;54k%NV5'ZR9`9$(UZUJK6i(0cJGMEkWZgF7s=]H33gpR+#U!7K7Cq]q#BHJMVNFLRXaMuDLD;C
%fb=D#rAW#/nGKd0RD,VV4=2js(Rb*ngfBTQ6$2MoenL7G2>d0Aqi:jYXYts"+*<?5bW]n3[q`D:cZNj>K>5`u&!1lNO:cS;g*>"<
%-;=VjK@`>gD/N/;[b`CVki]Q`A@BJ>;1!(hWa>F(lg.B4J*B)]Bk*+NBQ$3+DYAO[c-_r$8Jp@MdbEX@^IgjVRYm^-p:%g:/ZV%/
%T7/*=5Ccj3C*,WN[I(`X+(+#go\XMEhqG'SP8[AhWf2'&K?r.oo%H5)EV=[A\DX02Yul(m=e*/1*as-up**_>/:BLrkpnuF)b]">
%D5,jaD.0gC++t9:l[S0[0Ym29T$_i.jM>@el,ba$B&9d61m;K/3VmY+UNQ4KB0q=pEQ1_CnP:9e)+U.3'):C!nV]e@C/_<r>0B-6
%#LBifs6EPH^Lp?lBDJ1%/QVN*O$(?k!aRT*r^EX_,1:rQl(9?O=Ys7^+rtOZ9VFj8"j\m"cLc`F/m+5$/EOmi^PMPi`;93AlP.QM
%eG:h5r>2m@H"u`'/itE-^'H17%lWKO_5d<ip%40`e1"uiINW)?r*RtM05CHh:i#qE[Jl(fs$a&>Sm"XV64Q5`2^'%MAETIoJXYZa
%gqjV38jeCb/BQI#Qq_$b2#]/&r>3l\*CTdW#-rWV'(,AcraBG1ZirU.eZ]e)2W2tV-o+2^OK=RlFSnL<X[T`dApdo/AGrFQe!0&F
%^@^\#fFGZDY[+NNT5W#)hX%WGrK_9[q<#ZJ4WYT]-h-hZE,su96dN7*T>fc(#'9d6=(.'m*P%Q$>F$VNdtqKgq4fq01"?5)_J-5o
%k\2j:U<=CG7^Gl-EV7Lk#lri?f?/GJ^tU5P:V5A`;uSmdS,2;skC=IE2uEP[Hh4c)3atLT`q<ZAq&^X>&"9?CDJQH3g$Z6XZk^[k
%X)q<n5N?,Lh[WlekG`5%7pg^%HUm]"3/PQ%l&W:OdHhh`)WM>uV_gN/Q`]Xs2+OFVra1.S,^ZsPE_;njf!j6(KoW-KHM^LC_9FkC
%<18_]P&P$HeUP`R\\L\8c2U>1pt$%qS:)e%4,S3&ZdZM4bIGVfs0!XKLr.a5;89aCD^5^?MI$3$l'qQinQhmV:LX+7'h.;GRZP"o
%6g5Ut*)lkNmtS`Js'4mcms<,H49,*IZhH]%1HFa-\,L`q3258B?acDo1Nr\Wp3(rS6<C<ArtM:+,!4Op[<M?t6s'XfrtKfAIqSeo
%fG"4Ilt?/=QhB*e[e/=HA4rf,>Fi?tc#0/,VmY)N?h,s)[(VZor\X0J'?9_5EGqnsBifco!J:+#T4/i<XaY>\,ca.;1$N%ObiN\!
%O'DtR.]jRfPY^s<Vn:XK]PJT0GE1D5Ed<;(]\$r+[XkH^.ruLb[o#(\?VRq?YJ8b-p9na@SAAfQ]=ld'Vrou+%2@iDRr/_f?n:X@
%^#m/Y@?XH1lSk9E]j3^7s%dFsg.r2\^9)Cd'$@Jg&)/ld-W1Lu/GhG7*n"J<H[C!V68J8(8)M<pbte.L*-QGVm16D"^07QZpUdi"
%c(f`g2r)?EH%"51>'ZIBD[5+#Dr'G;D44u3cYD2ul68*HcEP:As2iikG1\onp#to=O#q08e2G#h>]KVRR$%80[rLLBcYYb^%HC`9
%K;PJZE2e-PUNs41Encl(5OZ"?>.l#[g.(D#I85Q2DRMXoI`Yu&2F)@Xs6R7F8;C=h^*I+sZi8)rMNLY0>"<r&Fd`*qUp]#BhQQk=
%;ru^'=pNVR:7\G"?63AWDk^U>fMo/m3LoHFei_SJ7\8E,mbn-lWi)$1Fp:;UQKQ`qdHVah.XQ84O0)1SODY:ak!/*RG*/#h?,H(X
%8%S?fCo2]$[U+rL:%MbnFkYRh@s%%=cGO7d[R^M0HE3#MrpsZt3,#qTh.h+P>U-AO/N0:$@I!E49UNq6ZHAG[X08ZGG<4jE^2EU/
%*U0aRWJUd'W+=$o%J.b9#arm9ljns?Bno85\'mNSeW/;BH8J*+J6[s8=ON,f-8;p;f)!eZ9R,id#4</Y:MB#D9q)CdG)\t/*hC&%
%n:?^]NO"C0Q><LZU4T?;b;rM362Kue!Vk`qqH*[/d64T1ERpR@jO*cckVPrGmU<f\C+^P$HG`1sA!!DIC^fQ'Gh.[#k\t<j\94W=
%X,T[f4/)7Rag4>XDKb@8YW"A4I1.j4g?tosR5mCbhPUJ@*/qQ);oYmgCF,_p+)kGS5;_f=F,MVhfWn&eN3e^[a5h*uj3I9H]:-)0
%[+$Cl[@Q9,rU/WuVQ]DNk%5s2g2c98c^DI63'N)1isk+79%)+#mEeedY&4/=C\6heoPR>d?hCGTl.ISQ[>:Pr4q_s]G)fa=mS=C5
%]\SG#rS$)']/j]q*`UhmUm=+cb?\WKf_BF0<AmjD3-/PHg"g@d`i7"sL<ZL<G(78PGh*cp]p\gBXdOPg)"?H/CE4L0X*[*5gP<.Z
%eiqH&^e6U`E8mt=^$V5*YDjG8kFFN=g`atTfBrO_:k51jm'(idmS=DT:JSPaZZhO$V0Ug+V`$U\IbPd"G&G2>kNqhSl`d_ggDM8*
%)JpK7SW36n!8U)AH!&ne`6nE,'imc_ZU[)m",FMche#FT+ou3N]OjZdfSe4_PFE/Ap=oP(ZkUY^I6o`uQq1`6R]&!;KIS!*FfATY
%mTE>FgMDI5T@`:g#[@16VgDa^?6pe)+@VW^;Vnc=B4&-W>M[s[>nZ@*T2))jUdfH0bcW<acR8GmiFK:J4$!`[L-$\r3lWbsCH^`p
%kOE;KO&k`/,?L;;5IL<9ZhNj#CtTV<4^@[a)P8Aell>Y1[QF@2,2ao0%XU:nK/:V$g)V2P*h=a0*6i<.+g.(khrH\d;6bFF'<"'i
%0HH]YX/Y&DCUXVDq7P[Bh&W$7W+.MsZeV4C9O"LTd2iYS[*C]aZtf7WqB+':L.=.A]Wl'2nVIkXGrS0Sp6`-)-F"n43NDn[(-SYM
%mYLs?BrESnU>nqYIP`=qGtnb/m];274_se2lR^aY/YGtG68cVW-BE:kmVLXu(UG9DFZ`0il#$0T0#4<ng!9-(elg'<NDuSk+O&o3
%ESKWl62.H2gY+l!Cu^(9"nAF,ZVPW:b-M=+lRp^O:9CZ`6fk.,9\VRsAbj@cVm2),Ot!Gpk9OK%)M'<G&'bf\GpKYoFSgCe$@^,M
%bGJM@^O81b\#^AQ:H7NH+jPsQ4R!`Sa$rN4NXHEqOnKHFn&Y"=8$,7)MfniQ;ct\pLs<#f4_kemb]t-$l#M2d:*_].pO"OmP"E(C
%V#:_PO&"l.Ak1b4LSOqjS>?7Z?&ogun#4du67$8'KfIQJ?Z^_XmO'+LU[BHY]MoEq<)(16h4[]MeimK2+&n0L`Q/WB5.17PH"P9X
%8ID>5fV7Z+UpFetit7VcJQu(\jNA,CjGC=ke./oN@URASCUPs.,unG%[h0#:XOJ5j/WTD-Z*quuXf3,As"6NCs,#2klgp-0`k:5T
%8`TCQCp`"I-ROg*G[rkppmG,0/V[<okO!c-3mV$DS^n?jWs3j[JHrmN2ABr0_Bp&pEH4$Jqj1W)fFmISTbk<Lc8P[fdXQQul#qX2
%IbN.u!UJeQRaF=oeiE"/EB,)E[]0/u:LTOBph6_;e,)<u=B5sHeI_+RV(!R`WY$(YVlXH4X13"Y(Ye&?lg%3EX0H?b]!j\Ri+d`@
%fsM@"m_$)WID5ONp*4eKg%=8jn%o"[h!W"T7k9pD:L.=B2eS/Rpf@umrT1SD<tF^^am[QXID#PiTm+-a<gN-:Gh(mNjX`K.r7]f:
%SR#Bcs#b@DiQgi.UP5J`G*]".Qs[JT.pG1%0CD#OZ*nU!Dlk\#n(uf6bfj>L4YbRBp,e]s1fgd)L%c,SNF+n%k3o3dfCumm8+kF*
%rnac(rpoSO,JWe]n^l(Z2`+6=-[W3\EO75>m=a(E5('GM/BtgkIF`/F\PETW^9)cdQogbi^X]iBolt'5_=e@5_rnGuouj]%`m1J@
%@Bm/cGrrLA\CY*A$h)?]M1!"ffJ77"([g(nr^I*d73=+0hYl6+T<<T\XDY4J>+CVf?E(,(?TsQ?]PVO.dkp=@WEWTM>K)N"V7lfM
%r13[aGO<u@e(\5J/M(1W[Be:C^3T2?UW\#U>?f?jpo/[WH"UtiVDd+D1\BC&^<X,N5MBH1>ePW8\p*K#EID^&g37Ak`kqYK4\*ur
%q:D5Sl3CPFpM\l91-Z`O5Mg740RL1elFj<"F6hSN)%=(+G]`SH:+fdiKf:X=Sng"(2X-CLPIjcB[p+c]n9eU:n8@XY_U@_?bAW\b
%VZOCNNR\R=o"D9WrI!qVlg54(G4Y8P*r"O-<SGkaJ+GFujb&'C?QA"&mO`n"iMRDV?Z3,Zk0rE>NS3HbCFb`h^$fAJO$A$S;7Hp,
%PAU<)Re&2Am]G9lTC0?pIOslQDD-L)dHis,8f7Ia]63T!nnm-k^O'#eH?8i+r:[<i5P&_%<_VO:>:dp2W7Bn&_%Jp@QXH]Y^-o#&
%cEQ<V@cIh<GGB;&5POXFY?U[Z`ilii40t!_0/oBPY:TOp="iu(Cj`cphq6]Kf:QF'H;`Y)%Ob-aTAEkN:>>6(hgW7g4?+WQh@XT&
%r,"Dsm*,)CQC%<JgXoY9hW?&ZELSn)h7GfL7W&MWdko6TbcTKTq:eCi$bbERX*j?WS,7S+Z"Wkoh;HQ4[hcU?oD!$[DS:Agj\a.]
%@OR[WrmoocWKfrn/7ss#3Vq?[X=XP1o:+Qiq2PA,oo2K?j--B$G+4bl05pl-mh0"ITP<:rg@b!23e!K#.oY%0D_1;OQg^8"ZTC)b
%X^:I>ep;dhI]sGFOhl%=4fEjUA/OLt9Rg?aPC5RB=T(*6PmYU7`qAftO6b+U00WNAg3FAgo6>>'ASHMk*E1Amp[DRqj6s]"%ds40
%GMb&;gph`UC_8K5XeYQjn_i0P(<uO3%Z$+fG37Y':TeoSh%os2]DpgYQd(b4c0%mCc=DBh'TJs_;;3nkSGr$5hRL5pE4E+If%dZ]
%HIFNc!6Lhf])1^iUN4rAO$qG:rUoI0bm42#g\^[:YE'U.mCQ:I1;M3.LVCLmUq=8.H=O@nZ5d5aV.oAQb*G7%:?6BiG5%tA\`W)3
%d`!<+jfNIYYE^p56g6F]9OI[9I>qq%h<Xa#S\prIFt]9pM%j:B_oo`_1\JfWedlG_$:QTeHs,)-f:FRrIGZ_'/EGs$`_QL/k7O$L
%Eb4@UND"W2&L,!q/UCU>k1F$6'L7:h,Fk[[r?ef"#MnLr)d@ON+CDdT-iWh^Xa>9*j1j0sD_E(][G*@CZ+3M@ZI*pppu1kfS`Si8
%s-7f7Hh0MVD`h14]%D:mc/?<"$m05?pY.XuL"Dg#iVCA=0?rYB=*8`SdZnBjj3$O2o3c9L!C,Bb9K.1%f&kb9F*hZdrW%,&VA\bH
%9c8[m(I942\0q=Af@T?sr:M[d+3^qlfV/dS^GEP9MWr,RqrRe817Hu!KgpDS)M>R9dH]t8+INEINfL@u=T6!"O*PVpjZM]`nKP1V
%)Q59H_+nRf=;DB["0d%lD)_uc0n)_soV>XcfCI9BjSJ(kEi43\PrE`5Gad%tX-8/ufU[LH3.uE<d_RbaWk0/*i4Ur8pVN7OFqZ^W
%fO[T$SC__!h?Y4Rk_\*VI1:\fTa"F[(bUE;)84CDP7[3,CQV'W:P4);XM\B[djCg0"`OR'f*;*jila=Dl>B?[YIh)AIR3(Pg`>f$
%NLrp+f<H\rdgV9,mat8>a"fS7`r4<H/.MLI?cQb1mq2=p.sNjj[J,EsbDgKYoa+E+I^$cR"#;(!Wk2EmZfH*ZHJFcSS;B(Ml9GB?
%j^@S)PGfXCDX^,F%N5(;o[*"7B&H\'o[2H=`]qQ[%/(V;l^8b;kJ'&hKW0DsJ%;o_Qit^TLL^7W^@D'i_9.?apq4IrWt2qkYnU-N
%,-`-&\9_fL97Q!a_L2(Td]MW_D]b:XD>Hjn`i)E8j(_Q$*=s-8K*X?QQ#BZe2j6e+H+`@EP>$5]_l;p%R")lZ;Kq$$4CTmNFA')F
%I@t:`pJD]lVf2%bNQ:e.kLF8^^U38Z&(Y+<fDDWGbI?&7Vag^?=]n9s%niJRjc,s[-8V`Pf_Ad&[^>h",o`,\p.*D_e5StOUO0+6
%+CT`be]W:6pul;L;=EZ!8H[J#LS%W5O5IU#%'=;lFnOLAUM$^#b(OPZO]_G"R=T*-F1,h'[U-co8#]["Zk-PlC-?J$]Js)eD*S%c
%,5(O$,n\.frT1rMg<ut#&ku<TQA13Qc&!YD[f1*>n`uYt9C6*bm/50.eQif9D]1[&HXB-b\_Y6iVMAWE9"=2X:W&lVcoTm1Qf?tB
%%L`U:)S=HWm`Q"lgqBm:^cf<D[!1ildVSg;h)W0PdA%UW<PB(=c`@P_A^IgL4Zn58=$X+'bHNb'$19=(<`X70c>i6CT_n4!4Fc"7
%i\=CC7Wj@+;U`,+j!EF-p8sU`?gac1K6LaZ[.\(#fa%>:nSqo@]('c6LJ^`L/gpYpU9X=TecVZ#.h-i8HWcpaX0Z1?8Vl$^44h3;
%p:eDdk>+#iY:Lb8J$iA,IOn@ScL!-g+(El+HaNS-q#]sGh>U>1"<>1g>(?'arUieC`ch05+jP;8A`;D6k4<EVn`Je,P9)YXf_=9B
%2bSK>0?r=apYa5]'#-WTco'*2?MsNX(('udGD;0&%T]"DMr3mW9>`t&$jPD?p3n@k:O.g"Im:;u5Ui3Wq]@u/$;aO!O8*\V`NB$@
%S);C,2T!?/j*/8"MRdqFFRWr9o`s6ddbW^GfnELo'&Ndu_VM2$gB-C%n/jpEmdD/:o1c,!6t0l!cV5<fj(S83U"N\<Is$1:@T9[&
%kEl"8j6+2.2dSB!d0t)eCus]/UZFV.*mj1l;[;Z'SX&WgBm=+l9fL4->TN3`ce+3o+jYVZRJ$5gNQo,DIdT"pX9?jo(C7]pj*>9d
%V,=n7\*gs,FS"RT(U+*C`a,W-j2JDZH[MX!RsY.^EF\.mp@Q5WdpKj!Gh.WLA`[;kXbh^_dtchmmDeMIq1\B1YIA-<>+`Rh8<7k8
%%iTYWSA)O<JFhO7rFbm"UIA1&jCu@'m+B"Lj*l9\I-[ZeWN`TMp&UlbQ-8(F_VCXLmJ3<.S%B&LDc`r+$2kVS5Ae7I%5*+mp,i;9
%#I!W<D441]3oAhh4+'9MBH99@@i<0k?HXu(AfHdiT):@65J6EcD%PmBIqAFKG4;K9ZdF;SGklOWa`5!rW..q+HJZ1e-:OmkF8+rY
%U9<aIE&@IaFa[b:!Uha;T3VAdWJ02N3j(\s3W!NnrAj;mXhVE'];\=a_Op8A'&K_G,dHIkX-G@0HaDb=g3_`Ol)&YX/UY=JeJeDf
%pN9`%RtnU3k2GX\$DVBkS@3G!qt/$12r,>JS(V%N[DO^'//O4n3ka2!cZTS.^:j:8k+97jQp4:,jQ<fih[MFPnO<37WNE\Ph"LI(
%pQJ>.:H,TOrqac8bC?R21n&$]'/.DMhYuA<R!\P$_j=CM2CEI#]c21)hL;-<ds+c?\ZtZ&,_B8b>&)rCEjRO0Ejb0#qmR*%Sh@^j
%57ec^a`#%ep=>#=lIO/AMtn=H5B6Rm04,o8P.atcH?=Wg4oDh<<rlGWEe_s.Z(HMnV7tF2^&0;iF,)PE,UBd9%Yk[:&>SX"]"kui
%GA^Zrq?9E=B6eRlrSa\W/o-@af<23YI(=WAST]8Dj7;A?qcdmF4F*_5qTG@d2lC>X\L4lAL\f$1[7__mF+8<dm[>'%'K=Tr,aZ8p
%49\A!?=$d7Ij3Qc@27A0Q,`3N@UNf4oql[#jc+RW06^@oF`F%^\X8rA"FQmL?0]H%_<m55fLC2@`p<NZ(@Ks>KUZY[F-'[s0LfjJ
%g\(Q@`VeOFY9)R!Qs[VT?<-tD).dRF,>[oJodQjfbMDFcoF"soa%%hFdY8-RR5B`oBfO,&M3jg:gj&S+?[r"!Cfb5^qtTE!@s^Gr
%*q=L%g89\i5PqlNUrG`a]3k;ib**k@5(rjjHJ8>*Z'-5O)Oi\?=4>mThOTpXkMR/bToL9*:]M!A\Yi*,*ug7_hjG2scG!DQ?<K0J
%;_)q^QbScoqIYU%_8`Rk]2HDQkcZ$CNR_Y(l3UA<H%(B@kL3'8esXP<eR)_J)LG&"DBD)m\$D+g^X0qACp%$SH/"FPq[/mWV&/4,
%dX/VK/*"41;`@)F%3+8Il2Fkr3p+<.F-p=&>2?B[]oPrBY;Dh8=^S^cQkQ$9e(S)HMsp8rUK$K6IN$@7lj0\Joug!NqWHhSS`uO]
%PG^^ICCaf`r^a/Wh9!]\q--"S>(!_?FgUrN1rYEG=*A]_4^S9(i9>H`:U@dDBQ*6R9H:rTJ$][(qJj3\pZuKl[6!Wq1A26C_D<:L
%^i'1'4UAPNgM!`Sq"We4K27Vkk1amPEIVie';<4Y'p_YJe]BSR?[1"dH+%ppK"UjUmI&-A)n.t%8,6051_r.=Z^bs1Xk2jYo8d3X
%pKFt)gp\g*[so:\q'Ro!b/t7(G?1R^5=j=oAs@`6nM:*jWNU4]mYF2Dr@bd@qnL'V.g"5;_o(qqk;hT^4O"ghV]"W(4F:CA5CR0>
%174ff=P[m;&Kb64V^6Nab1A"Be*0cHZai.OF=fZ/?Fr>qc:^GJVXEg%nn.XToJu:sY.aY<h#+b[bMrN'CDEF(^pJtmErYB.]'a_f
%%Ua+[aoac2="p#406E<eDgj'RI.c`S8M`+"[<MT:b-g9Iema*@8?*4Mj;$49S*Wp>,,[6?S]+rcID4'1h1!ai4IV^BJNn9W4AYWF
%F.XbUjo2[<9BFZai*Mrsf<.g\DH4R@?/>eZh6+N&q1X(Uf"S*rk=<SkD"Y\u4(HU2g^T)l>8qWZ5AqUHI/RmUJSB#[Rt"d6W4T1N
%$9,bYQ]nqJIJZ:BipB]TkM"m+hgaFr]CMdS1HRWlqt'2\\ribW@IE`hFa0-gNSf`-ESsAYaIDl#qXn_]D][6Uj+F*jiXeZ->A_)[
%34eYRQcA&UT>!6fG<Z$^]JS"A^?3ABG7KImI%9kNS'S6CZoe+2d_6bd>kuhJ1qg26]sTT[dI[9BPh;4H_fOhg$e'Hb-G9<8_>Cb4
%EHuW#rhcr)>\fBtZ2kOfl.:H*$d$h4=m#$8oE/?d97%cKHs`j;?T=R&Ecg(W[3g5"h5$BsXek0h`m+5D<k.1U>KcJZ<gO%<9l@73
%Dh!0=]W,+qdkebSC@Zm(QlOiOpL3+J_qC<pELkpT01ZM^52B=$W';Gc\oD6Mg\dUV'jJ\4ga-F=I_;pK$jI<dW.VhZA[/bMJiK7]
%mCC5SKlh'^NQZXrH@2p]0=u",rOqYY^/Yn`*:r1_4)<$K5:p39^35!>dcL'EDZ$c!6bE*kk+frYgX]#DG5!%AGk^=h.hg.C1HOXi
%#8a2%`OeO`VcPMJhM[0`8KbT?"T.``7:+HYUhX71omp+er2]#8Zh.d8h-RX,VF\=Jna^k`dA<D8\d)qsB`.2b4*BZs.p(?>gt:P;
%`k\sHC[ZHX)EZbN\(K%adI=9&Ikeg?]^ap)k4!HjnbX8FL]Ri2\A#Uur6+9um%N0)me3FOPqTURc].C*0[Rg[GDqfJ%eOmXGAlS(
%I->Q\d=VH0rI]Fjqp?r]7\2J$[GP72EIA?h_;(gJlR0Rp(f@_KODOi*jnaV1.hD@ZH4t!hDm%;@*o4D4<2]0VY:OU/hVRD!KK&V=
%K(jc*L>2_0613$SNVl^WR/]9s>i/Wj?V!!/-:N<*\lnLQ>:[VAaXD&,5//fOl.'6&=PYZj:V35MliQLDL"UK'+s#"=komM(d%3b'
%eE)s2&(V5GTh[D1Y,0b,5AKZ`NTkZUmII+<`S%qWmH0\@qkclAI>G8n7C1LXo\hjfc)mI>h](76klYPn`MKE#L/`p+?Uu&Z[J9gb
%euQghT6nJ;][:]1#$3F>pceXOA7J%19p&r:Q$21R][\/TiMbp.)GY]_m<"@KK<*b-<@S)X3)=<fHo'ajC"6S5_@Dhk:u-[,?>:NR
%NJD]Cm+dkHW$gDRmab^J]AI@Fs)B1Co1fEt:<[GJM)km>m)<E7;KW$E%eqjB8410A4R[IIK.P*98H(%32(Taj='Rc=M37aJ^Ls&^
%]Kuj$n+H_.m<s>,?>eGq4kItN1HW#)`ZX=.P_>s,W7LL&=9#dYYl22b]Ju&^;4P5aMpr-F#jU$NHJQhX?To%(rUL>5G%m>a<nV=R
%0d3UOH[&*Z-1:VApW(t?>\.QNqJaI?ZM'OG26$>,\c$f%-h$f21EQ"^[5T_Ffa#4QDeJG0P\JGs$ZagE1$>OZ4dA^27=?e11S\/;
%M%o,koo*oHB9>m$+!g5^^E]QFXF@aseUoG_)rhqlE_cBl"K0kTDUWm=GM7\>S[3ZYIJ;XEB5cS<d5iIX`l):rM.bf'F3+r>dNnBD
%;J#@I*m,Wa.b1lJ[@PDof8hjVqRQq1QWW6-WTIcqNF$rRMgKMo)3bHJ:cZ$W$,"02Me(N78<Kf+*tGNZfl(`o*Udnf1u"RZ]XBPH
%1s.O*qF3!KIL>Tt8.?mun!$I.^N.]#M#-D8`H\jhXe0!ZF%J-pDcP4McL-8^N-.*q9n^iJLP)tbWJs(#QSh+u>(<_UdffOd+Y]_2
%UY7s+=pMI1jq!u3o:Q;=ncnh=79:%Z>4W#L*(nIe<OJ55SH&kkIih7sOb&#J*nLln&?HJ1Di'"ebE,#6nZA2PJb6!CAD,]pRWpO%
%6&UE]IMW*'[;'PRa(s6e:$MBklG(`,M+i^^EHJk$LBXk&1q8dnE%m\_kG*6I9WRUL$l@DWWZ<1/_ack%:)>P+QatX^+.eg)>2J2A
%]$l@;094Ss3M#RMf3(8KTYq-$/WLNi341>8Cf%/gCI*n1Gb\Fbj.*PnB,;F(-^bbq8jZ]P)SJE%6+5SQR*g5p8P3^c,'&l`Y!'jO
%4f*#@.&<9H(L^8g/\c":^2CFZEH^Y($_*8R9S80WZntT=a&=/%CS%XM1a`u<>]9UT4Wul7-3@BnbHn;dS/f`*4)>tF3o`#f10VB?
%=`7`2K-QhWTOq7h@Pd`VPcOQ\$YK?ajXVsb/]];ZN.+%trsl#?Col<aTO/$kf/E[.\#DIEr8*Feg&\8P['gW*Gk!G7$AZC<oCa8U
%s4_Phs/&g]/3iq$7t$H`6D$5hd)smppX,(P>2u7ELGf$Wok/-HoCp#5qYT/JD<aUXm@.#M/I0/cQOWb'*C*hgr\eG6J7GO,bmjij
%3p/1%.la-mW?e!>;>Ko_,f'lG(n.n,R)o^sg\iTUR@0/WRL_2W<g_UJbOV'#Ue'*"'=(^@D#O<N/t^6[Q7>.8AkYgG37&45:.P8;
%^`q$j_St5:,b#T+.<gF/b292M?qhq`\E\+%PFL=dHTLcrnr[iXfrUR_MB'*gR2P/okOqE=-Hp^A:aas?Tj&Y$_tSq=XVmS8aM"d-
%BRW=LZ["%#%<Fat\S/%]%70*gkW==+81Ot#q@87$JQC^8]JApUKYE'B%\U^V%#17Uh[?".-ru$ipFh0G1Xnc2!f`fYfVGGFb)oj'
%)bu"Q3L:C0+bEcb%]ffeCaSClktj`<3?o*9"M.,k@!dO">bJjj$jJKt+Mb+"@0>FqnUmN1mdU>`72.<!C]Si^G[hr=<)F@\)u`l\
%O:Qn&&263)#J=Gl410s>-9<%Zcc<RMA#rHclj>TE)40nZQpTDB6B2f$)2j6h=MbcZ)LuK7_9LVG@Ki,<3i%nSL6-FRl8Sdt'P:g:
%C4hX"SS0oBirI#9U0QEViEucL?kYGEJJ0C\Gk5$o+ZP@Y2>HLr`YUULRo71]k/l^.nCM?;O59pR*<$I-,X7gsYbB;]E?`^G9Fj)E
%66%OofaBJ]D?O]l;C!_.E2o5f<@E_;Re`0N)N4]jVnXQ+O?CjZJ?hK\)=R.M'"Wgc,%\8ZS(!c?<X&sg%c9]&W$U`gFW->4jiN(!
%GmX,Z@K;U(![06?Kp1E#/3*nomUc_<>S1Q,@OCZ/%;j%J)_%_^j2'rJd$^RfTru6-A/LI@8"k&&:(YW0"6rIKMIZ\ontJjaF:_Rh
%OO(#PD<YUI\H%PX=N['TH^=8k&c&_8P\D>["Mf&(A!nkrd-.Xj=6jI]eWV+h&`mT6R2D^&!L+P`($(?a&=p-#NHl4Y%Us3b*_/.[
%>`TGaW,s(l3E]mUN7eUL/YfA>cI/'!0ps)9:W2cWS=p&%3Pm-&0s?qs(uumgV'T8ck)D8E)W]%((O8[UofgjJ!JQ[e,GLd"+$^2Q
%"\SMbbQOS$j+`jF.U''`8l7j-f*;[sYZ@ER)%hFWN),BdJ8cY=.-K&+;"2SmI>aJ6?Q_[WgsG5p5X6/(6I[[r."QRq8_4M0/%FbI
%Ou[!6'`n_#a\#G`IJjSr&[CDHRE^^Vo>KB0ahrDc,EWOi6.R@@`,tpNlq1pKjW.kYMqfpek$8)sKSbYlFRApro&umMA][o%On]'g
%,GEZ/A$fBN)-#\007BJH2&Ld??tA16r$DPT88,:Sq=;_N;IKai*F7?]4>BJ^%oAdDDTdeOMC]%TLq%,P-=`;rg!!qV/.Mr]n2q0Y
%aUH7WbOm@L(;+U*ca8oUjtRVQ@ep-;5?0%d).(&NopI7n9_qHZH<W9Q&LBtT.jm]k!f*V#l+KT@VGtXL+_a;1LiOqbd.FtE&PDVZ
%7t->G>&UgB%1:7K6C_+J@6utk@>ZIrLs);s$CT9e!i!_OCI2*^&Q"99QK6cP>Xb.?jUHfm(d1p:R3VnJcoc!j4OA?S'!n7[=I0m0
%,pNX8km81W+qN'B0C,<q_-Wq@dmKtp<'/41QHim6;]0P*857('Zaa,p,(8umGGP$#5b2[u^Bk1@F'-;GI0!r;kB%]>]@F[t,K+fG
%QNW$H;"2j<-orQ_99TQbq]cn_e_P,7Wal#*=jZ1S`eG#]#@^P]Ijf9"&2dq>#[8YR!)\C:(8=\@%RrRuM-riL,"k3M0@64,(f@Xk
%.+p7GmRqq`.!))@,N)-)a.]u7K]A/CS/>3b@tccP--8g2j@RB-*_(tOR'$1cjH;.BHbm@TPq[aPd:lsKpT2$6!&k"h,3cQ&Ru#Mq
%j9u]/TKB+kI*3lrrJ+_N8W@u345(M7KEl_l<K=cL;d]A(Wh@]PjC87R3K4qOU084$gIW;SFI8<PP$$l!*O4P`P]5"2!-CPh?(*&1
%Y*I$b8n01\U6?;W&%pZS/_*5RZGEfCLat:PdRY:bQ8[j?Z)ro3"Jq;^?n#+hODZ7D-p:rOl%Ilc*<^\=X=;<^9Wf"FA@\=E`j$')
%!lqZCTIIu+P:XO>(L!WT+r!RPErq=HnI'WO.0ul.<^7pe72_2cX>11)#.S_>*=dU^gdbCel#n3r@>:.[M1c(H[3bE6hB.8no\>I5
%71$7c5ipuJ:Zj4[5hM&),t/dF6ha8pIh\hWhNcH>Kdqf]@2Lh!;Fo#b@CT"<EuND9+tV0g0EIL&V+LbO:'dQq/DPc))IoiW5XR"!
%A8t.jr!nPb>*ajC.7,3-1W`LX%Ui?g+s72U?I"grdq[M*Rcl)MM#+j(3B,;3LaM?9OaQ?&)$ua<6&!s87^;V[p,u-][=^L,-YObW
%N49VH3n>6T&F7%%B(M8'*YF/##V`(8H"R]G^seQCd;<?Pclk[e!-2lbE!\/u;C-m1+n#U@.$d"]%En4Y.-RhM[g5A)X0h=\672)Q
%KOP]:1(qp('.KQH0er>HW"1.B0M&Pm!YGGG81nX+9a*%Bfi:Gb$nI#Y!KaQ]5i+a\N(0a)K8;bfZ>\Yo!]./o?_<#%68=-G"]3$m
%4AeU8e%q3(1^/HY+L3qhNE(8s/e_&),Sl=N155GH^$)dJQ7(l%&LsAkF&JW)m@?)/Et6(\1Mc*kKifhR/4qnJ$ltt8(S*6hiZB@8
%'H-3GL0"CA!nINPL6E/P?p0XM,e>udZ2,5pQ*$-m!R6-\\Pn>0_DDFPO$QiQP"(h"89kh]?3JR`S^'N>18EIs6Q5):L-U-*dZEOP
%o!jjFBfu`eS3ABNjWm4uEe0CV."*V=#TR<8f:+"nPa?eij&b'oQOQ:hVF1R;rM)V/\6^mdrF8eT.Eg-s)-85lJ_u::+BK,rFh[43
%e;.O%SX7&A!"t*LW<AJ7T&TOHGWidP3!3&1'J1)'q5uu78s8=>NaQoU&.N7rDjN/n3fu$dZS.ql,a,-4o>JQ^mli(48CSh"l<odW
%>V)fZM2J"nRX()H/<^[l1H?^<59n,`p^LUCN)7Fq#-at$U\ll#q`:@6$Ut[R!i7GM!>U:FEj7;Ej@7A,7ELeqog52%Ua5)kR.3WG
%ZG?g&T+HWIAcuf.r=Ll1\b)^Kn,dV66j/&(i=!^r20o9AJrXLfd4csd?&I"WJ-R5K*[^/_8m+7pR=n<hB70>:;%+6Re:KM"&ODd>
%.%Db&O]Xn%bQfend59f"nP6m^+RHlZm_t)lM6dTa-!V9@>(S7$V4C']SrV&aHE\"4#U/uQ+XYpY2c'XoDjhscAhh;=7!q*Ge"=pL
%P*]ks\u'#1pmGStoYPWC9%o@:Y*am797Po5M4Z%%Z"Y.RU:$gg72i(5Ku*]i9o>#]8e>#=I*FPbH3R,-<<OQe-kpgV0H$R2jXNHV
%BGkOu&8^SA7kbOV-LfmjJ!p&J*mW=inD7iq?bH-rGjia9&OShg.S,H"aK@G[#MO-K&I*P(ogp^OqE/:B\J,)W]"nGM+c\18-eL)G
%"VXSX@UQPEKb^]mpW0Na@Vq4o!4'O892mO6i&?>=6ElEo1C6Js_@p_"W@TCg"`eI#ibtK`q6<4EO*][Ta:#&uRun+-!a7l$E*`-%
%LtjKW:hD`kdcFX<_U'R\m/feUA(*(PBlZWKZDBrq'FH)0;I1Hee5!ZuFS\Q>L&M%]0s:e#*$/$[2BP6GW#R0JZbWm;M/to-16?(h
%g5B/>I-smmg\.3[2Um3^DAJ=qkR$2Q;gMY(7M;uZ&^MDh#0C4YG@sPf!V+<!((PB'<!3O8PBD2LJc-#8Z\bk*A2^F45dqK]OTr0:
%nh(X)L]A/l9kR!DatA$8gn:RTZ'f.a77EUIfCAd%8.\b^5)9S3kr]u)/n@!5KsLbfF>1?6OmE3d1[&*H3A(^)"=DYUkf`%s&4-Gb
%(ZMNj+b1@M\so.gGW38N&,.D]7;rF".I('kab1m&cS#0;=9+Ka9pc$=,0Mj<f+JS115>Ru"@pCt9o+%KGK,[_KchWD1M.>QRj?^-
%UCcL\@alkq+@o@0Wt<2[4(]4Zf*YiZ;6(8$C3pk&L#>@>cAYn[i'f,iWEOug.$-5bWt5Mk"@$K5JhnsUbGnZu^fA3d.omep\_O&Z
%X&.f#L:h798t[30C(p`&jJ$Xh&B'7M<BN)F-$UNl\5=Xte>4"e$5&):fnrc8,:53Y(#nfl`L'd6d*e=g0alCH%-h[NRY;$J1ZiRB
%]+?5JT3(AG3!_jS0tS!fXE4=!#Bh7K1.G>nb#TqQW*os.j%RuW"H[c?2?@Ij=OYVkNm*[mMB)IuLA;t(_Jr8dU_bA9LX3=b0Aq:*
%S0<03DFZ*h#)B?R('E5PK:nZ4N(@dIUAGVY$TnT#]0n#0b=n"'bWs!!&rr&>eeLVE1ms4kT$AVs5oNlSS4j;"6n9LV<E@fsI/sG2
%H>Gr_p*FBLP^Zl0&.d^P"g&?Wh13kl$O$PaYsP)Cer<#dGCTsnI1)(\nUrTIXn`CRkQ6>O8Nb<jfr#)HAg]#mbf2fq$`BS/&&Fn8
%>'LK5T#7lM6Qfmu?uI/Z*ZWC;Wt:OT&[_%)(Dri;&;1TqVi@d2'$+Z2"L8OJeKa9-fC;C]O>d8T&PF7:_LTRF)si'oGS8HF+HiT+
%!tH99^+FpLY\`X,/YRG@oXGN)$UD_;<Q.9H_j`0>l:Cu<a:c\+4@0m==ub@>b%)..[#9sF!1>=D<=XGHq]_%Hl6Je&1J/7`!&#J@
%7nk,p$B;nGV+h5&!M`34&L/fSKuXj9h[.@gOKF%n,p$uWL]TkkK%aK-3(>-,M?:U\?9j4L!\2-3K+J(1#FoQ1.GZ]m"BeO)+J^.m
%WQ'JkF=X&<)C$V!fE_'b+^77>+6t3O"<^u-gjW]:+IEgX&qCP#f+_t%U^+8G6YI6n&t5:&C5pcSMbpP^\<fhO@.adOPu@``M*"!Z
%DfmsW2?mb)Y]O:pZlbqh`\;oUD[Br'/)r$Ce<Zo6QV^tJXrrrd&kAn<7>&s@!WbEbo)OHb$kD5agn8g:/WSu7'790NK('gHSB^[O
%,;_CIC%HAgObNHJntOZWYbD:,ZRf6_PQg6g0Vd$uSpmMj^eYUo%07r1d>0RO[;3u8&Z-u'#\sZt'$&e[6@;Pl9B8Yh6&J?gP\Apt
%M$MGGAi[X]3`Omi1XJ+86kll%nEgmRkT?ph5kOuY)$^7$UGj9k1lA,4Z_6Ecqus#(73i.1W)4ZTF;KI$iW'RW+[W;Y"A+]5J/N/V
%]"h#!Q7SOBB`Lk!:7HJ<[+R=)4&[d`]f]3d"A03Rqcof.F;*Y>V`9L5.>1CAiG*0N@b<q==Pm_HK-*dd'AKB08-^[HTO`.R$/=uH
%FK@_97%YbKj[#J`:01g+q`T<N5pLr87+FPq.GJJ2!'P['lo5^,:<[!o(-s1(^gJpeQcP=!T[&lK`68Z[86Jp1nj2Y4*qF:>jbjec
%*`*:R!!74@Udp6&6Lk3Hf1/XdI7YdL'bcg2$,uio;josl(J,2W8X;.)%O,p:kJK&KJVHWjZ$Xh*ZtU(WB\!)I=(=Mu,"GcEU)gL0
%<X*W)V'W.D<WQYBZ:Bql@-8BM8.+q3\Y/VrnK6(Ym%"P:Jjs\nifYK^<(P<k18q[m%`Zr[P0.(PX$@EPSk&'](6$78P-ukk*gP$r
%eAS7@"PAhXE+'(Do[oV)*fC,[-<YgG$CDLOE.DQ^9c3Z,:V!";[lE?X-QpAVngk+@&Q-nW`1d[d$d`S1JBV,[3(Z4aj+S_d#6L7#
%jmi0/EX>kh1h:qYU&PWX11s;RZ5b#;U\6Nh0[khc9lqh!S0lG:8POnA<5]]AdSCkVfc%oWhXO1C]e@/-jF*O'9OnkO=iq&jF+QcM
%cHT+)^,>#@j",3P,G!%u-a;_>%"'h.T-P"B&0&XM$gjBEYL,]Q#$d[N[1Z^OV1aPu'-)(-dOh"-[Ir!Nn5DnS^H2kF,8rj16/X<u
%L\$.HEWDC"1l6WG+UMsdJC+C;\PPB#2:=2o&gQe;ph,;@#,<7_Ac)Y$3fdgbds_=k<cjW2`rWFTT-J$<$!#:%&Top5O:D:P%RgAZ
%"0$>Q0sOIkZ/l"Q]GcsUa;BNJ+N=m.d2h*[@:okSN$Df]cAcdF2G".IQoS^L/-mp;%[eI!fa=_^k"n,qKfIIKF*Md0L6r'H7Lm0J
%%h8sp+`].fi0aiP&J>4C3Hjth:?QG7F)%(q5<O]b02XR18U-PHJB:sBTW/EoHF.^Kj1/55S;%-n=f5M`B<9]=N7Lo1FUU:'3b0ls
%-9CLG*Zlb8BbM-1Qol'Sifb6^A4!1;%i'-&*nJf95d*-5`F\&f#q0eIZtEH%M2PT7HfOi)Pb("&rVm,*IHOt2#S-DJqo4Ff41rO\
%!O=eYJRImSai\5FpLM%88V>.UEqYIr&NWKPk5\H]]u[+Em\Jb&d!f+"0MjbB6R89IVr8mnR]aUHUM1%Sl-mr9;\>Bu;)a9S.*4\N
%+uU1'HgOQ(DcC+!YeO]u]E8EYXT4=`lN(*I[E2s)?B1H>ZLNk^[ra;IQ)P31D,c';5`!A^R3iD]K0g"`,eXqC'Y2b1LT$?>">h!#
%m&YmV*bp^[EZS3?a.EWFfbVg0domMc*$kP\VHOit/B=X);YO+<aUogoR]9b#&PAGBi)gZ#*H+gH&ot6c'?mMO`(W:s3S:U2-8[KL
%&gRU>%5.4'j\*W[Sf/NkkoUCO4)!cT5mdo.W:7rQfd_Yl+Xi06EfTa?A7_VpA2m&.fkXXBR2jR;V^Z$M.[NUC,""nod'[FS>kA$%
%gPbe4CH,,Ob1$lH<.L(AWA26GLaS=N@5V785Vo,(M3&E@4*!pn7'9tn^LZ_@q8OhAisJneb>dg80Z*u:L0J2[jGk;b6ol?[Be<%M
%EhBkH/KQ07:-cH4W;FEq.FOY"BG!-(LutDJk3N3`93fT%KWl-:\tkd@$BkAn?s]l%$2U+m713Lr2[U6W_La#"H3qe#5`$Q`d$,24
%RsYOd9+s\^^?f0:^-m)$ZpT)8e%Q]INt0IXdNT6A:tQ0?d4(BI1B_^"0p$i6/W<H^JsoGkrd^PYU9,=u,93'\nKL^.3IHQcOt^dU
%g-Z=j3^F*=8/S+1%`'[=PbdA04P;>gpF"FX5X^,DD3fHA<.m3^_3_#EO7W.TpglP?1U=OcrXc?MlC*9^'W=jD=JCZ.S/ist,nL8G
%O9qZB`eqGM5!GJXBLS=\<ktN4"J:*?S8h"/L6'J%KYT#QLe:;GBTm&0j^>IN<t,-,P@7!_-9^Ne9TdU2o)/heSM<0o`_[KX*JkRP
%`(g_VLS`0=#jF`gg)Oc47LP[Y7Bi:(Ijg/I!Db%IFpN0_R_0FKf=o6&Jhe\(*f2FZ=eUfp<*BMO9UXk+=^TVE_Nl'l!G46AW.#%R
%#U^eC]I[X:#H^H"&C;2(ZOEF?n.$u:!"6*m!V)n^&0sY`q;>f%jdm(l7?fajCam&E\7HXnP6f6S_EtO;@KIf3-ki>>1N"#oc(tMT
%)5msZF?mGXSf*Oq6)H::n^)4<3fP8b&^?Ktn0TP$3-dcj\4trK<:17f[FZ[.,Hd;qd_f6+(&&A=ge\;t#p!Ne-aI.\_:Po;*f6[]
%i]A':So@(^=Bo?uP^T)/#4rli.KUda$[6S#H`-]dA!/qS^^Q!D-+Fk,?THJ.i^Y$G.Z_O?J7\!WSG%$?W&TeC>6)#F+W&cI`5@fi
%`4AjH[%&?ER+K06/bGJfGkVK,8W#P!AurpIk+IJLhF=uC$rJ6?Z"tKte]r5t*s%3&.rH49:q<,FNZjWc5S4Zmcq'raj2VV&%rg,8
%A_ahRqEof;Oh+[0d\P#0nc]At&_7*8&W"5D5BqjO.M@id!=7dj/^/j_GG>.J9hD?i'ONUN@07/K'!G8+iGa>i8m,[o0A3_*,C4r<
%U`9V!"?kh=mi5;jKmr*8_gm^%j\bJ(6$rr'H_VKZ*;"<P]L%`gEg1A7KL>Sd&!Rm@2DJP/0*#P#*.V1S91L'=rs7k7Tm8?W:QJ8@
%aWj'Cd>P.9KtBob'OhXM<Ha<>RDHf[7QIM(%P/hY,cRML@Q@eX8X^0`@Sr<?UjA?3F@>SnR<,CpUf)B:!Xh&=m[J7IOpm",d,cfm
%9U\KDck7#<j<`pr8U79`<J6TNE/tpnF8"[\0I0j)&n2/u"Xur>2=#sH+Ac(&OA*+*1!*8DBJ]!c7K=-mk;g/7UB"aMPm)1iLjmLc
%Ba]N])\"L,JKE6$;->^&)"XHh_1kSeZI@\<<FG*N0JcT57?*PNd^+qMV":5sOaKWl@$=0<Go<pnEq2R'Ue;UIm;WD^GRfsjSr<ZH
%P=0NWPQ9g[aR*?qp+LI`s"LuPITOnCc\M]\+^n]T5TjYnJIoNof*KdKZF8K%(;U/9[aPjFCf;\?`GY0#bf2"b3Y\Y2Wn,4qlgPr@
%nM.geO:+I6_-"VfHG6A1bG?W6AdPSK9PPNh&17X;,ai]ROLSs2-](c2eZrZ"K$.e'dj*d-"DB'q)nJdNPebL&/NQ4U6;]78Ro&c&
%@FoH-\P-;I-A^E1J>>,;VL?nP":1Id>&K0bHC9=_W\eJHKFekhY>I+7"&'hn@hEJcZH+^+6;Bj"D0X&/S'oO!kjm/$(WG6gCibpI
%7QiJt_V0sV_'Bi9_X/X=2[:*d,r?+];:IC_=@T/Gli^h`A!LjF:*<U1,#VtX*E?H!e1X+`1R5O%RgV#IFqb\="\lh?\KC<Md1R&7
%B>mmWT_Pgd\jh,aAISb28](OlBs*'KfB",oP"+A`GlV<:p.>TYb.1JL).7,(@R#Xf>?2aO0JQWOYVUlL%Qd.MA1V@MKmM]<Ta6a-
%i;,#4R8GJM_'k\KJH-;sG;A69nhI)\QfIo#-?KTFbu&d%WD"'^Cg%@jO4Iu6N^3dGaMeJfe!RPSc=E`n'1\$cE>lBnE"?cblr`hT
%[N:+G_Z_K$++jtFX:oh1B(&upN<G)9])_O+%=lZ2UeGN(-o0/I"P^9`Lfd.IoSd4u0OhVG_a^`1#2s^a4$b/X<n>qHP_o2=;-IE5
%L"XPjF%J*dJXM34ISrIAq=5r=c2_UI*5j]Ngo?0&T=hnVOL.I'%!DcGBoj<$(3:PQ\QnOM(:!iYpu^*R<kpUA*M(j2/UT(e+or!I
%D:]9;=q'hN`oRAWD<aHO`4oDN6=4"8_HN*;8>2/%*4i$gr?,!t%_[BX,Z[:"j@K1t?sF*YS`;K%09DL4.=pKf!m_,jnrp,&+21O-
%&muj0BTF?376(I[#<\kd\^kF?1Bc*s78bM?6\r<dH]%7=)f_7*0Ubn2DD6#!WP!i`[fj2P$']1:["BK^!_Gp[mj<Uf'gPi%H4_k#
%ajHDLPk7B-b0T/\5g(mN=V25?].Y4oTW&kU.'b=5Cf7^fpC7'M3G%([[V@NI(SONH@ulsYoogu@GD-c91OKI76r7!f`2O!7e3ZPD
%*Jh%,ZG^JVXt+2-J68(]8JL)t*si3W-M]"1$AG0[67j\"#?H(6.-CZl.u`1n(j6MdG:1$FF]1griJ[d_,rq71"!.r(_2:!h3QhIR
%bK^N`8+&.P*fb3_b5.K%QD?F1MXVC"$?:(:CFoN:H".WhE/B[;U>j8Q(_NN?#:!g_THACliT.sdYX_&9C/FM2E7?<9&G3oR-82ZL
%>Ek/69E[+QH=^.Hf-J<`iVpr_HAdZ3%%0DYc/G,82;u_$p]u!XXY8.E15T@mnnaJHUKgA;`tMiDNN4FOY1bjmO/M9@s)u?ZZQI97
%fM7W0URW[-$i.D^=K,!G5T1>AqgaLRN1-Idq/H6A`s]\kO\*qZ0MlqL^l771l-*;l'k9a!>k)a6qds09-U`$4CupbPS6A-tkV5:i
%)O*YIJ7O`aDT8EP'q6F#&?!^_2TMDWd^j<alguGa_(>h;]B=DDcc-^;c=jb&O123V!f1$-<M%Zi=>Gd<P8'fO`1/-,Jf,28hY<Q\
%h)-[cieej7,_84:0e=N-T(8:hM&EAJro,e2rq-[clqATP4PQ>.%s!KT]P?M76e]\j^*f9+7B@9M;A8BC3\uZ,RTG=1`gILp>L4Wp
%&+(1B@c\UuBMJZkTA9PG37-%raca&&C6l[fl4=lr<@)30LcE:.8WebTY)oRd-b87C=%"W3fHVXQ"t@VBPbsX<_P%%\&%I*#e&]2A
%F'p9Zon@5&F6V8Me1Ula:C!3U"#XO`@Kaj45N`:bJIl/u,.56R'GT]&m)-1VK\7=7CZb*d1XX$0qR3U6_'uPA`UYNA.rmXIihqA?
%%-H&=QF%k>V@r#/KtU:l!-!<5YPo&$:=Qm3K<!!1,8T@['Si>V'pKpY+94kmFhSRM:')Sg,9)Dg!I-&%VNZP#/Y72.e;DPAk*fKe
%ZYL;32Z#5W%,)ddl61g7d"@Fr[;Lb]c@ilS1k^WPj+sVr&OM8oBN&l52ee_PhrO8KNncX');AdDcX@2jrKS\i$3\pe,)&62c.Ekh
%Ehm[L3iRR[i$K[J32.aNMAN3]O0o$J;cMSA_e_DNfbq,;MFD7'QI_J2m*7%2qF&EGrdSq/8.i74Nqrm=oCe>4%+!!]HVFQ_ZZ8]M
%bQFTqB`J8lPbC)ka)FjNeC&Ro8tlK*(Wg?t%S,M5))SpDlbqHu<Ln[\Qu]V+rF)Ba402JBWD*0t4K2JSe@rqeZr=?BPA6_WU;jUY
%#n#a(2=mV%H9u,4W7X-?3[R1Q#L=<n"SPq7gg(Y(;!L:0QAh+`j@"2Me_.68%eUEg5N?kmKiOB[ViiLU6`M<+1$2fojUak24<4kL
%K"4M?V^I^+;1?PBek&L$8_nUR58DV*F@FJM,5D\6$C9a9;E@)F:i/@V&n9q4T"W]i02T$FJ4RpTd&I'Zl'DG0h0<ZC6/Eot4r`kh
%EC$VHEiBj'@hqY1KpW2KJ!V;bd,e_mQ(gBIJ4UFM:gJZ_E%NFOd<2-L"<qNhR7@Mrf;Xmm+<0=\5tN"25llYV">p?b*Q(r%$5CPA
%l8$#!A:/\8Ro"lp#p9<X1bp&F_8#"jUW,9<S[OX$6^7Ggoog%1mRc4\PZn/X$-@bd_KI40@O@=-E4ISP!-(ldJQ"V2,cJ",6J#,>
%\W0K+RAWNXV3#HfaE!NT0j[.CPWOpEhX'j4F)Y/t&Puih8ZMn^;l$%+iZ\ku6mm7*0Tk'7k?kH]5+m23%b0nt&=;AaJL%G&.r#5A
%#!t8d)IVeD8A\1NE)O%q4PKjn@0=`D;Ip(d\)?\jLtd-5JY'gb)k^FK=s,C3O3F?*$!f0Z*@#'6WA1T*C!XB*KsNg24;K3d`#iFH
%jKF16S!b6Vd`/!C_j:\$DRifNA<N00<m+r7D$Qeab]NXb`lB&bG*WX@WHtfXr[Edg^'(STd**Y3:*@XKJ3%?)Q4R=BfrGV6`YddI
%5(ZX)N8jsZ[*0D2e-IaI![29fnC.XG-K`EpV-\0Y/OGVpdK(7A07iJDOp<TSj=P#q.?M)p!%n(YXJg.Hj.p@C'eo$,oBE.n:i(lB
%$.l%s:@=`.Re7\#KOn:+5V=Db#$I1h'O\O>-!m`<"c0F_ZqtbQ+%B77*W]p7QUD"2(:b-_*&=!n?&b\GUhtpC8q7aa>nSUmqjplO
%a(7SrL_*'900&XZkt?`[aMO$=8?Nh>8;/K",oHmnHnLU:6\6GC/8'ee'Cljr:5g*tC)tcS+D#R^(aE`>$'6Sjd[U[)"[_:2")!fh
%$8K*$dfIDL(mmTKic*N).0M;q,?k7;J7OA4B8C%T<e1MZi@%YPXp%!uhuppU]F8e*)*(>X7n3s^6j9'1pcBT%Q]C#^GV>;<UH*@c
%1$HKIBM,VpUX$pq@2rOI?6Mb#c`W@?-^?A&B]4\9::_$fAMFQ=X,T$rkInh4S<88V":[YLAYjj:7D>*;#-kUAilpO)!%E]JFdN0f
%KH4;07goB,938OKcSR=0AqC,Tftg&7ZP1+f-84l5TOPX.Fj:m1Q:>C6-s?k9\gNN\\t6bu=rOVsn[ri&YB6*>EJ6`,'^>iEk?%_?
%@Ms!j$p&K`h:$,$@>6%Tr]mTTb-fkMb9g&h(gN`$Jeb%oe>6@ooUYBq8WVTa3tZ:Y[Nu%l"@.i2+gbg].s8]\$@Ej:j,Q$`c%;;&
%NJJY\YQJ,WbW,QY0>,(9\Ybsm%__E7O9kBI+Y<F@0dR0s*&kYeTkd)Z.0d]F`@=4j.W5bQ;VqQJPSB@`.>^L`#:LA7F\LI>U%AA-
%*NM$5$KZf8UUM<kNe-k4q)o;P_hSp]+XBXIKB'V5!C^1%)`ckDam9DWI(#!u.Q0^DDQq=];RFT.A8\rrTh97+&3UHDh]]#lk1RPB
%C]#\*&N.a>]4^MmjgLgNJTC]iLh3Us.Z:&KQn/Zb:N7';L.;t31+AQBce:@Z%)=$+gELr4,R:K1iW'9)*Wel+;?W@#a'!Y>J:VHZ
%Q;_+l5RbRae;$:TO!28@if6EEP5ktDJec_W?(ihPidMRin&N=s+eEG)r)"h5[O<)P?iocZA17_T1D10(X"5Ar.Y`=M<g(S&iJ?G2
%r`Bs\Bq1(6r:!Md:k'!Ib4\1[&TOAg"`__IPX;MaXr@U:-LtJ2J<JB1V:YtV:)aF+YS**&P&UKD)0%fG8<RTpBr7+e13hT0;OkeN
%V.Qfh72:H,eVCt@n8aYW12(k?@0r,?m*@mF&2*p^3H0JiR/]o!o)rg1rEk=`5NV],iY`QZ[YR=?;3$&/8k9A@(:IjNIY\>nUaOf\
%=>E9i:FC7I4^Cai:]rN5]4FF&!;m-[c]O;U&d'L"7Q#sB7KNZDlr\eBoEtXU@ot$;#a)Ai,L[2^.eG4+1Fp=[NXR>>CJ@j(CTMuk
%&LM$4[QcSsLY3bm%Z`%H1P2])#@/t@-WVB&3jcDCZCI>%i9u>=pkeT.+V*oe=Q)&Jb:#B<,gm;hU<)UH9&b0eW+DJ'A@[dSE_2H%
%c>\"3:!uRqH6_n2@9nsspalV>Fd@GK+XZTt_+7cM<)VrA,1)?pP126:"HoIiIDP%*XWj(Fg&g>$'P!LM&EJB\XsU?F11V8J5#KJ?
%TH>A!R-CBQ$"?D,CH"O%*%_DBT4"rpN<euM5ZPp+_r@EfT$91Ias)<B&CF:hY=,\5kj4Z?(\WrU\9sT>.n)d4dlWT=i/_6Dm#c@t
%Z3sDB#VO-69KT3^j2D#A-,fRT$h.X8hap_1?R0N8G#3/_)MCOehePE4BNVSl=P`%MJNk-m&:BZO;u9f'HKR`\/(hh9Eds,7^Q?E>
%.Nu%Z6<dp:+[`W,//R8c3^-(HRmlsNa0V2$FLKs7U(%5(-lSIV<?VGYWe2$W:um/C>gL_]BL0"u'*S^,XC]&(Ze7TFjS0nt-C\1t
%8.9),WG(G@;IbQ[^6Ib>$aKbV'Fc#tfV/rD2QHVn9O_FOXj/@2*hZ!J+8o,bNeKP^MGBBO*]&Tods(6U94(".@\GPPKRk+jMt>s4
%,2n3J5sm@35[oX#0=4l6lB$((40N*hY&7g/X&L=>K9urllUo%u^0Cs,W3IX1dd$@_<GZ5O.7k:oQ@s"h=,+Z0',5i[p\C:R*jRik
%#,3?/G!VZ--`7cVE:=0+Yk0$7"A9^mAb$HO4AoWcb^^]<K%b;mn)RW3^=BX+hWhlQXU[bUh]&[,ksKV8S.po[+iU:@%E%H@80JTp
%4og_'fFj.#!rUTd-13`>\O_O]9?c9;C[5Qi%`bYHgVfAib8c#T70bEEh:bt3"#0(Q[TjR!Q7WPe<k(g8RSsA(TE=J"$T_>XRT%"5
%jEW:0@M.0'=U[m;YC[p(copn7ST]r0?`HN=-2,l/8UNc9XB%?76]OISkcBC^UZO*U,)d\/A;$I;:S%[h>(Lp6rfEmB7%9I'EJ.mr
%BT.<e`0LGZP-^D7;OU\YY^!MV%Y-=340^ZdAXXGkTR_PPfM4Cf2%"kl)9Q+bLXZAB+S5cQ3Ttu]"EsiTA3]uT\?_lBMh"0g0N?:#
%7&k[1ik0u,R3<hYgK6>N!%=HrOC/+WQm\pG$/^:"V#Bj,"`JC:JKpBJTi[P.;*Ds51F?!ZGmUW>XL?<qkbT[NOna5W!d4TQoE#.5
%)]4Eap>F0HC-?iC7e1+1.ETWN?Zn]52Ima0VZ]"g(r;*8hF7bjM$791Ke+AA8lAoK`Pf&aO#;V$(nj67*(e9VJp>I$9%a8KB]7+t
%C!XpNJ?4MMmXT-V]L*K[Ul6n.N^M<UjpD@>@K/Ru-Y5(OaFRS6<!>>?;$[CF<?\5-S19UX=$Yhn+c+[pV*Kld<s4oUj_K)@ZM=tq
%;Ak@4)3WL%&*1U'>_1tqVW3[V-\Y5#Z&0[;bKJ]cY?IM!V[>J1P9`6B'$+FK^sa%K!"O'^KSXfj8$`3Sgau?RP`,PQ5cumK@"FgQ
%5^_69M\<ipS0\M.n\mc).6BjR11$D0Kif0#!"iOhn*_,K^$mf0gk\o`KU1]0\@ibX+:]LJiQpUfrZH814.7;P,<@.ApkH-Q5nF]e
%"m<G95Q]q&aT;^eiY6l[2+T6HUJ+iOUC\[3g96#7;('jn+Q#s-o?%Lcn2`:SMedt-LLA8RNX6&C@%dS]6>CQjTEC!$5Zre_bJg]E
%%s4Ib*?\+;MCU7Jb&\0POJ.tSeY-7.8h@9on?EKh6Db;):BX%*!T[C/K=R?l;.;%dA)3*ej!Z1rbcmiB;)q2aW[kktJg9/e/nQ#d
%ge&c`<q^%!>5AMX5AA@X+*Kd)gW00H)$#@l-Op<Y<K7pD3-+VV^[hJlS?,i]#<A!lVmWW(8Xk;53Ra>V""8R!oVOH8_+r56\l^L_
%rC%uL(dPC$,g!l+eWL5e<OC[3"H+5^q43UF[KZr(M[/%T+Y\uo4UV5UX6?J@,(H>\-pQG$&-QV,*/%foLdXYJ$mE\#+:`"FO=/:D
%ejV33.c!]ZP`dIo3XZ9/qHL#7*d2*D4Z43[#'Dm<)cPm:pj:5d,C>9^bu.Db<0Gb[aE58jnskr0FH?Z:$3ZhBD@K%RP<q$P(nEGe
%*&#s\<E=G4S.2Kua%U8*6#bos%aHqiASsdJg-eFH+m$Mc,-$.<*&*-m,Sr$8nuWS_*o%f34F'1#=p`t*iYgcQTtl]IbXmVE_6M_B
%K+c.4^`R;(7n\sn,f+7$:UC]UP_Go:3^,@C'H\AJ(X&2SX:SH1/mnMlTSRaWl/I"<VL0dO?5RJuV]Meca]/1n8M;Q6^LH,UnTZRS
%q!&RF?mlcQ*XgB+!X!1Z6Yp>'+__ga@Km]*;mdjZC9W=0`0X6]<0SriM*D"A/llFn`I\=[SkH;rn0UC-;p#>OCgI+9r/k+]Hr7>2
%TL^9PpcN<7LibfjS1XE)"N_a0Dkjn4pqW1@R#H[R3$a2&\XXMT`4ZWc0V`kjkB\2g=bsu=[8d5@h_8jMmOa(t6D[XdLObW=JEGn-
%7ujf^G1Poap+StpU.X\nnRneL1[m)2]HD3]PSE1(:&-rL@Mo*g^mh@oR]oF%;-c26\`TZ7-'`\9_0,&5c&\ZX\@#eYJITD[5tqn3
%=Lf4]9IB!:^N#[X_F?toKUQQCmr;?BG#?+IrBneZH$KHbK/'=d:a/"7Ghmph6*M25s4(,BSj!6B$T-*YPeM$YY^.o1TPj@3jiH+8
%^iU<S/2:WFrQclh8]^\sr/iY9O$6-o(6&6=j[_$I8q;qr58UE-ekVh-eiA<6*ZqW^%qZ,IG%O1h&j5Ym#_VL]1t3a(3ohU;K8C<q
%EN_4E7/?<PgKfGT1^L)AGcae_'Zc%L,[\PX"=#""KUj<FC;N],?Jm,RV=tnIU#CXM8l!3pq\%XVb]5jd%uCop9bn(%+k,/4EX,.P
%PX%8.i!"lq5]DcA('Gn/6DJPZL!mF1DiM]/H'R4iLjGpX^F0e^c4?n@-VsAq^%7GMf70=BBBa&F-RXT.[D.CUs(rqT5O3Q@/Uarl
%:"U'NrP6KCf0sQdC+u0bU+cK6=ODUF`YinJ+BmHojaQF$b9sb-bpQlJFSl/FS/-VpQHR&`2:U2fJ0L1^-^`aX?:)\e>q;7sQi2)s
%#Yd21](YJt$+\%\[j5N#p"D4F3XEj')YW2&%V,,e&K1>]ee!/%!GI52k]+$FUh7lk!&TM&&[@i;oDhL"6F:!:Y94+h<ML\#8Z_tX
%`Tt<9Y9h?Q)au_;,ZLF?*MCK6kD+qI2>jEpUr'HbhBC5U%h52UnQ,unkqSAI!0!;g2r,If2*kMB/3biPoTKu:F(2OErQ"J=GQsI_
%[ZLV`3rm3>E>Zab2DE'geTZPFI^Y">"gZMa3A4S+eo6m?cMp4WMLNJm_6V*.98"rD8W6CaAu^V,0IhQn9E@07:bM[jQ9R!!.bZ%>
%a#RA9\/;lCpP;[fOI]A<AJc@RZ"aAlN:7%._(:WL6NT#P,=8,gg(m$g[5kP=7uVa+@8ih_=k$IiN+AU2>fn-53H<CH-<[]\4ouZI
%N6H@6O8UOUEHLGhB\SBEK>R88N#7d!g(tlYS/g]Id8,9P4oj(U_AAT&](Hr(Met+ee0pUl]/u`IEB0GAaZ*<IV<iIqN__:,I0&F@
%"if)OOkRk@Ye[o!FV3#1,XY&(TG]'5O6&bDg9OHs:;0>X!nWQY`UPRDRZ&mbLc#nkVNo\#<WKc4D3WI4a?Z&;nW6h1U<Ep7RX0d[
%K35uAh\0DFQ,(I,OcBPD`H2ZS"N<&k^L%\JA@#PVaT+n1aoY8u;P23i$^\A`%p"mQ,K+tW5EoZ?OMdIk&WsnM9_mqu$k!W5O$YtC
%:knGW8j7C=`?i%4R0\'Pd`UHUdnCBiX;3bS$9;n'Z6Y`jOG.GmoU3!##m1R;1,0+E$I^86(ln0-`1T!LTLP15]V`rjHqP@ZUf4>C
%EmQ"P-b1>K,WDGX!luiD"-KM_#TGf)M$Omu:Q/?'D,jG%.WR77JVRN"1MPK[L,)[q5Dh4[`l`Ka;%F)-&O7HS@q4T*WsmC.MkGe;
%^CB!a]IG<aJG]u)7K.otKAj[goia#$-S=J<&+mr`3J"gU&W2qah0]j)[j3[?gK1$K_;J+l\M@aKYR\L3O-26!HBgF#N]-<."%0.l
%naZ!M`%nSY;J9)cTmI\k/S,g9#g9`%>4!(:%poTOroK'3#am49?N*3UNolGFc<2Jk+oEo`cQ<bLNZ<JKlA+IO.?g5]*F$68b-i6"
%#a9b;(RW?o;U:)+n=J[6aQQl(O7b7@Z8GQBLWKd6cOTUn5jK^/%R?Y#&O`Z7lPN`Q%$sCP!EuK"(UuMT;P4/n".8>2#;G:$;'m?0
%I))uES8%&$,H1`R+Ib%bYmST_d,uFOW$6I;0%9I\6HPI)X-+*f(rUuX+5%@P[#55bVHH]fROO&M=,>5>@=ETTJV,\B[MhO>Jl#Uq
%70aHh&-GHH`HOJs=^j92OGKBA9nJ0<7Ds((0&;7E'hBJBgb([?4I<,0$QKd2cTYeK18ZATTMZA[,$^,F'fZZY95Zd]>TjLZBL)l]
%nd@cUJ5"%,`.a%8dW7PU5!qm55&"GYPRF5d:ql#7pkn*`@75.W+fUQ&c%o9'U+DX,GG8Thel!.N&==m'XM>dsV>MWhe3-l@JVsN&
%H_qa,>[VpV6B"6ITa(sp5ZDWiO=(T!VcK#N4i/TAlTha'(lIusg#o<Q*\uXf81l:VE3;C+)#Wo5-CG"YUZh?$V(cau@E+F*2uoVD
%HAiiHSdQeXo&Vu5nW6OAGlFA1X.a-tI!1jY?9&"rU4?:i>2n$qa2aHLd?#Zh0Z^^g:kLe8PE,H(V?KOfkmc>h(V5.%2]!p;n045D
%&"-JAR0G-2LELVOil'4_9@9RMPfl!pSYk/5'VDg_LLDn<iGoZJnNg\$_?s"IK#!F9Z[[u=7B9lfasC2[=7%b7hb.eS9*4/b[_n0(
%^I&IIYIU_Pe`S6J'gU'tG?e2*nDHTg,3S8o#DcoSL^kR8"8m`:'*0d1(c84#7$Rl#*HS1m_%eH<X#pa=O1B5s;3o9HB+k'W:*Lu?
%*5[SIZgYDhj@;S_b]6;$9[$Uh,7'hP[1VO7:@<57PI_Ndd1SC1Hhh8dj;OZ+,?/5snp0YZ8qB),io!'/nZ@*bj!-s\:-ZUsBk7nS
%@F6YB4Hk/bSZ@_`H31s$=DT+R0H_Lc\B:,'3/*Zn;&KYi$<81CTQ^t4on-J*PD9<_,caE6A4mO<7'p$Kl<pX4]#FV7.Q'"oGt?W5
%pmLZM!$ki.Z^DiI>l`QX$(sR2+X!LMQ"V=D[CJPs)CLYp.iK)j#qgYo)"fno[LYpMm3j/ZAe]?hX@r($CR5\$'spK=,.<C??3`A?
%ijCrm*)4EX?Tp:1-Y@@RX;WHVlK#r9-Q_kfM)X<83?s`>q7*(Cec6K&\YGJe765dUU)Jh>:>.$.%XeDu!8]F4BFh9aOeSf":qr"J
%+(qE3"3H.6rZ/HtpfiLREgZbC"*9U/:ui/\fP&F5_5u)5&lEjP5$!=DR(6Ws(rT?:JX*'_c!h)P>j`lu*ENRSr*_FBooW%M7ue1(
%$3S0MKXVEkm$a&$RPBU;@_r,!c:&b2DUX/A)pU\03$gb'BIZkLb#Di&-ljR..@4s-!5^/p&m,eAck;,8o(\^Z/_#Dj/=)u7T]7G,
%.j^DLR65$PU$Aa3=!+N.0M'0u=o`V'*BQSQfT6;A5m4L?_aTe]A5eiRHImu_&qU>c=bb!UMaGoN_kFG(QQ_jg[<'GW@ZVu_b`QV*
%$Qg.lPMB[6?i4FIN'Ls>X^&^GfSIR#.+XXP$'J8lD(&1X.1HkWL"M-C.P`E!U`ZK2s4Mb*Q<UXH47$7Gs);9I;W2u9qW:X9om"8[
%,GBDrjtecI4=+K:$2*c#7l/bWf_`j=ZR]!)&oR=&aG:iKX-mb3@kp3IgFd6ir\/G,%-k6oWiXFaQ7Eg+i,d48F<es6+S&;1Os:Dd
%!M3?eOh_Xa\#hPhF:h^H2JjCB-Z)2hrCDGk2/?<mVF6>*5[m[rErh6X.g.HN>o%ABK&K@9W4<Y446VqG9-XJF.EYM^C)[2Yp/ogj
%_4ap%7:%K09i<!`Te#L9BOta!cjGe=5hU2]LC[_qS?!i):83:$K_3V:@4iq\m5]`FHe=Q#8^86IK77H:.-O/2W%-sAE=aBO"3O@+
%#&:pP5#?P6>:CRB-m3pZW^*3h"6jtf0Lf%%em.9S!-e!$9[EsDc^SG`-IS0s2TTj7%aAB!PW0RSChHljK427)$NN_^F7;1h#n_]U
%V7]&,h#2n:.C#Cl&kO\0i7N,I<b-J6UCH#[$-=[u4*1lS3gO0,V!R25MNMB\TRl26b)em?HZ>@.ISnG<Khta<^+<jK>5?M"Q9\KW
%?G0r&0i#8^+)gMU8X`'h4H'^cI=<Ko84CT3*r3!@[iUEV>cim3,(C(:oqJ>,fFp)Q;6GXJ]20M<eHW">R%1('T9TUnSRkEqf]3BD
%Co=S8,%\950.$\1XXc5fN@@MUSRNL_8$ZHdmFs+I8>LHk%UP2`R"ae7FC%=1K3,T%5j@Qgp:fP#Unrh@PnjTqL;5(CC!nOUa9["j
%,$EhCD<7<nI&5b/E(a="BUqjg<7mrN.[DM_nV?G&ftTW`O]?pK%;7Q]?eM;?8X@F]6&^&(l6(86&pae0q<\a5ehDhOe\4UoVjttR
%Q_VeW>2p*0InV=Ni][DIFo$o25j2hgKXRI"_3+lqYY""W/Rm"u[Z\[mERPqAf*B-egYB4Uka$9"_(.uP:ju2_G+hq0C4tOCQ5!'Q
%L!8cRP]XE7E*;Q67)b;-_r%X3*%.!&n3Z/?bTc#dR_kkKE`E#f$]pdV?^1)@Pc!oh&qe/%X=iGo(,5e[\`"u)5-%d2'/IjD]HC9u
%.X)c3A5HPm=DXLr]+JfR8+'cjIIjb(nnB)Raf2fgnl?HDcCr5c5OMcN3P\=cAQR%_6?5A/6S__[#D/*:"i>^CDEn@jlsNaj/JmK#
%)AQ2O0:1(#l4>VJ8N79A:9tSqK>Z60]o+k?odQfM-CF1=KDb8Z&,`"Jn?2Y<(T:m3Ms`5Zks':ilmQ&&P8/BuC)NV/4G&k9aELAS
%li-rZq-U_*7J\)`>?%aO8$f(k"F2]FTr84Jb4L=33XK%o_ncX.T:!M\reecA6@2-5<7m&egdRl.6#OUh'GlEEfCRCdkQ$90k?6$C
%7-\FmYZ#!i;UWAl]m$kn_)NPK*G;JEf+9YG@p:%[3sdW.l1F38Sb+E$Jo`5i'Gmk+__hBiJhl*sK>$34/f@r/'I4]a>/Xi^;OtS%
%%6@6]:FQa?c#cD+5Np!)!YZd9co,GTJV+a"S-/M,2`K0(8"/6H?S#*=7ZEel?kig[mJbQCFE,D:G'l83Eq0SSL+0Pt"3O3NibSU2
%OFRV4WN$KIElW6aQX"iqWq#+*7T]7Zcj<X(cNeK#=*I(l_q@"df=9TqgnJ5N/W->FoYWuph,:N\E\7p$_2[_*PIhZOUu0GN]\FiK
%Bs7S;8-K.2s1Tbn7O@;;bo+HVV5-2K=J95b:AAW.M?>-bfM9YbEm9f,-%7i;P-TAkR34.?PIqr4ga,Kl2M2&?#O>:ehPT^%_OYPJ
%X)#Xcc(bg;M4/=^WiU,L(NaB@)uDP9l;7D`OKM*-(8_=gmqWr/"0t\F(WO&PdZE29l0XUL7j/Il'<nkZ<Il1W%L[Bo;5Ili(02Ap
%BVL#l?r9%>_GX8=*(OZbp/MNL,KeFIOqf@n^T(9W3$T9[B1h5s9j,C\.[sdBeH-o8@eR;:MhK*jhhPVfWN(mdA]m=rd;hWIS@+]C
%/7/+</#R0n]r-Ul:T60]!I[X*H<i<+NG^;c(>bA$a%u3G^.56=s41j@O.X0"XkmE6?EeaCb5-Un@.dU@N_@`:&""a&qiQ@M=qjZ!
%p[j$?5ES/!?iP)Hr=[/>5H[QI_DX^I$$+"NAe$n>,n/"e;>9aUb,G41X@4#W4!`0_B//TWR!PRE0DPpj9JoA,S\a[>eb9's9sY#g
%!:aO2qsj)FcW3(E4q^fd,CU>hp1ail6r==E*(k@3VuPeTn+;7`.@Gl84Aa#V"@s7&8l`k!-4sa#VU0WUaA)D]I\=;5"Bu?#;RgFe
%oB7h1>`!WhUc]am_l']2GPd0A,[^hCS'&=IOh3+(1\ufDq7"_n&>%C?_@2i,.CQdM]Sl=dC5EiuBC^c*Sq'$-eh`&]Z5a0W&$jc+
%&=7_`d;K)_'p+5VksIjR,,^-cY+5R/<m#\7k6K"Lpd+&*ji@f37me>0k`H[YUoGM!Nrcp'bg4Mg\S-\"TUTPZfuW,]kX/;+A5f'-
%7oj[mbp5cBDc>?)>mh>Y`f,cp'g4?904g/;%N"^bFu,i_6tO[p.1Q-ISjKb'?gO#FJ<5)F_T,SC0pL@N]NQRmoZYCX>>pSFKQSAT
%nt.VTfW*JRK+Z7b#3kDYYZS)8q&P0R7UE_H[K,`tl@jaF"I+Jr(QiRGU(bX6Sm@*(Vl9-kdf`a/.-idkGXm'nf[#*T^1E)AN5GlL
%$.jNl,p]*?EcpbI7liW,*DQVapOcIOO,a(Ocp'^"r]e'm2L[(s$BhQ_Y!gfKd.`*&ZGe&=bT%n_r#g*k;[G"=9^j65ZDndlq"/3K
%p^+nDMf6[ZH@5l0fXZ@Ho*=ho#;MquK9af2s+MPDEF(_Q/g=SIWLb$H+=UI1YZI[%>6Y^MH(NOFqF!dZE#+EJ`Lk\N3&nCq#a3^A
%Q?/p__nl5G1VnX/c$jMcpO\->XP8H];0ta")=t&(&F<:f[MrC89F*&YWXSNh#U*_*B*HNnOuP[jL>Jk9U$/BjB;'Ofd%_M<5pnqW
%.L$%4aqlHrdeFQZYd4XurW1A5f'2&6I_gPT3k(QS)rq=p6R[/M'bVoqK85m%p*.KcaCC=nSd^i*JtcqaaZOKS*g@5E6b4F(%DU'i
%bXdNpK%"('6;e15b+</LnhS:n3Y*.J&Z)\cm3ifpBc`[;Dog36,sB(uP%/(m-TP!``^q\$Q^+37pu.s$^:YSV66)g10#C%m7`]C2
%_9@hQr!f%hr0X1ukr-5`[st<lV3KZ-F'T@7\8j8(q`6!9B&?4!,+rt4L.W2o!Ol%4a=[o6XScslS8Nkcb[/e$G:u@m/hJ`_:roY[
%S\uU6'a7M(d9TMQ!b'N"#^*&p-ZH2RGe4:]HU+EtXb]n'PG0gd<(Q#U^l(#cm3/7q0`YlY\8#!c;?Gdib#Ke`]/hgagN>A49,TW_
%V&ZNZAW#`d+NcV>34"pY:b:OXoAiTGcNe-1Sgom*nj<HEl4;,nc2$C+%pa"(rm8%F,)AY0mtO,2[*Be+956=r8!Z"Xe<U?0@+=5"
%a,*=oBHl"#%XIHsYRO$ed&O>o-kF7;fe/BT?"\$O_WlpW+/+Q2OJ$faV"^2R>^-7[59lr&';1r/X4\<A`\[R2F1a-Z*^0W@80shG
%n&s&>-bAP^^tMiMjh$#;"s3gHX^%h(CpXnGHD/j5#EYi=TR`K;)3l^Z1eS(h+pK<>r'2?mc>)Y0bCsYkJ.V+bT^J%mD^j"HRORZ9
%"+0IaXS74GW,`"06,"qDiC,K.i#`6Z`=PoNFpq/?D3A9lTsd-@8PD&)8IK:mKEK8+&fE+\>O7Yd!6Q5$,iVc]S:WX)#HIQ["7k*Y
%?UmV:I][R;_Te_NfNFbCJlrk7"'u0I%d9V4a/6e,YU`\s./8B<Q[t7=Ua"mp^5+u@_@KTSAto$gr%>*t2p8pqlocIS(UMD``b0-M
%;f9GTADq8oTVa?,>4=N::PS$F:c?G*+Y1R3UjfppU;O8ekVHKpliE>V8tB#RP49P>E9KIud*[<3a5CsQ@k<E3"c1Z:<=SC860YTn
%r6\Vi;_2GjTjq,9/M?oRde]H-Y><5tBt,2,\I_8"oF#(TC@2t#_H'f./H-7M4L[bKH*YOP1$]38no3J*.*1"qmhL`hkX:arS2CO^
%&bNESPI:sQ9TrqE?"#kDATHsdP%MZVisIc7CH2Z,2KmSMQ@MPgVVW!'O_SIoL/ounn[Y\(+%!;aQIh*ir&Gj-gkVs#Hgf[4A*^KT
%l<\nl@Amm)pEEk+XVS"\ks4B#O<F0b;2PFdh(Ff@RU,I0$V=\RA7>]CBiY\1dVtNIOR+,>N\a7AEj*G$$4ctH]JL?NZdEB5!0"(N
%:`,F2hK5#5'Z0X&q925H^>)IMnB'7,JUHe/o6),[.s#BB3\cc[0^?i<=d`,!V]JW-#a5iO3BAnBU`mLCQg_6%-R7=WqhtuAIQ.R"
%D9K2m>Bh"5OV_eU6$3FeAfe47qk\Le1;^Q[Vo?t!>A&<O@J0"EO'^1*&6[Fhj6EuaYa"Ir"(_Z'%,]b4-L4<<kO!WF&C1JSKsY3\
%0Fr(Mqu9J:2%,/gZ8QREBjRHWj]U0XKmcI8PYGZZI@*7#T"n<-?2tk\qH[=#H,,<sFPi%ci/hX-ii#5p."Xhgrp:X]NqRH]4%cUU
%<NdgX0H5U1qA]:8oN)[Io0PFa2*(mM$+:sTF$P)N1D[kV`Tgfe11rIcn<0kDq'%)Q?#n)Hq>udQd(f?D=`[9Xm8eT;n[[f31$!\j
%`Q#G",m8Z1"H>X6OS`2,0&CR4:!64TZ[:/P%k#:Phb9fbO7YM<G0!+'h,,C.:APb@rd;d39HHQ=?4mJCb$K&Fd%K83"mSb%*3G"V
%0WQoH3P(l)<CR/!]4:o8TP'6c9*o((`tg#u:"mW!L],\Ng8b/"+U6V?L$5N%Tt*;5U90+FqRpfG[L\?2][UCT_;!K)K4rPZUcKG:
%&VUue]rKD,=lPitL4Y/V5f-Xqm2h#4A.ihB'&M5-Vq0>XluG.\gT4JZd;Sa+MRf?Y\Oa;!-AqXkorL>MS>A*s"nE'l':NtcEuPO%
%]j-\m&A"V*>#EdZ"_[;5L>"dSi2k&QJ[hl'!P4@#O#<>'n;])h#4VOpB/J[o5df51EoC!,+A/.Q#IacnHkZ*=I^2>D`ss*((?+I9
%;6;NR1g2Ua:G(k=#IM!":fYu$bOS,V%BS;3K(+g^Z.qUSq?Y=)_<=g]?W*g[4\$Ut+b^n&']K=89Fn_+!2h]I,s<#IP1po%EIODq
%fj&A^>>VE;?UU]C/%!1_\O3J^=7HqEi"b6lB.HhG0`Ou!GA*t2PP!6022;]6Qa)m%GXn0jr]V&\RVL<>WBlorF7`ShWI(I`8G%g:
%K(!*\+N5XY2\;KRI"5!ud/.ZG_-1HlGP78-0<As/O$T&G,/l+?2mB$:QJ8gc.GC^j4b"Im<U01DZcCZBYmetrV;L>D,+*^^+Q#8)
%/<"YD>8.eI`BP6scOQCuPo+7CGh%mi53=R#TW+Z&r!:kDH.C7f^';RPnZ%^?3"-LIe^2+,7UH9?(>t:EY7>f]2t"9[rj'^E;cmrD
%%\rhL%$51"19Xn2S4YUG&L^;k-TbNpnCET;D9IU`6RHW96gCJ$M?TppT,nGXh05gC:o1AZ_jK5jcq4I4LgU[bFKrc`1T^ITp2KcL
%jM^O/dLMEn9QP"A`b>/Lq;-#ZJ%;fF'Tt%h<@h*OLC1:1:,ZCsc":W@3JNpi$<-%qR.m.FF^mVsbg\q@r,](lqpK41mFA++Kr3M8
%b>m5X=@."P_h7VMG7EM:;!`]IkUpoN(hconLl<B[PZK[WDj':]UFrtNf<PX-0;"2*cK^8g"jSAb5f9B$nIu<6`4?t\B^Wt]FHj]O
%MK9EN#!'?60Mb5b@U?iTjT>87jX#:,b[TYbWWk7bAfBe<1Nh5sE!P"A@LGpT5cm1`5N-p#-#Vq"a2WIi&hhOU3!IR^Gu7Z%n&dej
%L[%B6U;-ZU;dDiQ`Kp'`?#<O;jA/Qo(#]5e-9LL-@s*OXmEo!tru(4iUolWI79h*2K/j_Xq]g]S+V@,+7pX)YVD3"5,H5Sbs((l&
%#BWgEDlD/cO9+Mh?)b!d$$3h\X,V"@ZO.b%[2"mj*.>5[BGbcM"-B)9d)qB_MU!DgHb2jV"`)n.55M(YZ7Ys`6G0e&^%8h.h`TCO
%*$s$7)n,[Wl)Td]D<1hEMMH?>F5]JSX6XZeX#K,'Wu!Vb<Q#N`Q:#"j\o:c67q$81h"?A!=RgHJLCQs?PVLSYWj&KPdsS]Fp,HZ\
%Y[ZE1D>GZ^msF,qY`cFW'W7_12WV#`bG:o;U*j-Vl)U0D*=D*9\nJ0(PU^J7/iu*D.hK0Z]r8#Kc*fu"Tur8ZBK&*]PnfC3UTf?-
%GK(CX$7jKWI$d`="d82.DaImG5t>@sTi+uapU`aBJ-+?T0CGROqTcXh)6V.J!$+[j'\<#XYeo+UU_DJ=;-8D;LndOM]niN3=DuP`
%=`5^2eeT"&:K8*>g@B2iFk4PRjf]KOfo?7FV=b$5Xn@E@D8jhh,1^MpjT-1*[3=cXZtu_DA4I,4A+>2#[e$N@qVJbh/mBc,9;T&1
%O7?jd/*Nnu)o&>Rm+E:_[%t,SM<_/MWNFr462Z&Y<XcpZWN?_QrN<SPUo(o+X^LS*Blpni*/HV@Sc*F/Uu@7`L]j>`;jnVtHJG0A
%ECk[qZEFXH0fEgi[gS<<I_mt3/+EpOdK+6!b*%;JSFDO2d>_kCTc@U`h[lBcU[d=GVZ8pd9;%9/\&\;LHD"DWT^4oO2^=u9\<`Nj
%H\8?/DXM16^2A^K8T&te@B'2,q:=E?Cd&Z\(7>4L)?@.*5Oem'48[M%loP5iW%4a#^BDogOD:TiS-V0YY`PO@&5*[nf&:V@BJY*m
%C_GMWK`gh#kOd0J:IuT)ga=..6Ki^0OM(t;EQN_2(lJ'H2i`CgG0UM38HFD1m,1)k!s1.mb+#tehjtEHJ)@Ud=sS15,,Hg-j3$/e
%":qofh%=Nm)0H'H3qkJT[;(tFRqWTtD0]u6IFWV4[G9Q'm$770$AMWi>Wrt4F6H:[Ctt[,p-TAG"f6ZtJ^,7lTJ/iLMmTfr+deta
%c1ngQ+8^1@@b\%AfkCYkHS[/fdfjM<+0o,0j2dBZARRr'jX?(,54NUT0;<GgSF8VWqp3kT#9.K8.rl,e-]!_`V$,DA]&e\=9H:l,
%EDURcV&,nBN=r*)oNTc!1LZ*i(.ndCOnf[]I+rN.]^WHc5et^d?6OJujh4a&/'/SsHZrN/e=/RrT6!!C[S"M`D9+ne\cB,YB'iu^
%W]ut4=BP@TQ%pB>H#tY"ihmu*$g$LPYq3E))[D8fPkEg7,'@Ij4sd6DEF)\"T3Gp7iZQBFC$28p'gQ@mKkU4b[KGrRMkA;Wn='LD
%-S6]sgQRJhhKk,fl*9[rr2KfS#J/WfAr-8pd-Y>QMj9N",VKBLW>aTd\p[i=:`5C^T<%8(GC;)g7E/KI]fb*O<$l!o7h^157bgZ)
%,iUJ_ph2$(M<#76Ef6T+@emeS)W<fiTc;s5Yr@Fo2QK:JGLUV`r5t_CT*oYiogm577-]2fXkmNDW_e\$NfEfq9(E<S/b[#VF,Y5:
%X^!!0s22qE0,IA*O*Cqk,\6H]6T`uN@Lq#V9VkJ/&2Gprb7LQHhP$tYH(rN(&JVkLZ1dpYlP&JEmr@f6fm5OO&ai#j(iOgEX3]9p
%QDCZc*MK>?(7nhkl+j_kr\>gaK!4Z#i*_R&2\8O#,5%g2kspT_eR=TnR.ci9kZt5-T?Dr0'.Z9-BVt?.D5#lCO2mD1r(6&W6;gPc
%GFk\k$!g?6.r(3R:Qc?KG_Od]i8*@QmA**]-<<&qa+2Q4aT<-H%MeIk2Q,n:Q?oP$/.63TBT:FrV*_R=RS?'$^2P]u5pGK.c>nJ"
%1hTbC'V6+MO2\4L,g#C<^RWt\WYa]')4$J_)kF3c9QPqR<e!V_\GIoBZ<>MJ(?ZNuYQ_eV[o;*tB_WujNa>(?N8@]2WF6i'n*E%Y
%oGL"$`=e*enI^MS:FK^X<5`]Af23+b\i^R>Oa&n&%X*V.[=@Xs%M_`Z-(j8+9[NiLbnbTJKO/i<\Zhf9.,:XinifK#8m6?E+S^Lk
%m)TMiKM+SPh47tS,&?An4I>feHp,+HCUc#Bm[ZO?jP_a,_;@Q0T+Dm3k"9\,O;ggJBD%)s84l.B%VIJ-<"]:JZdfEtYFkB1\M/B0
%K=*i]3`hl(!Xt20dDMbIBb6rMFhfB4*5I*6&Ws\h8qh!3-fR%skTZVSR>(>mGb5:@1b"gP1Ap#5MF(3r-u8o@+YV5U2fmHPDE$(9
%j-h9Jn$]H1L124"?O?P^;.kKh4=+1J[%UggfS1mcV[/hU7PG"<Q;G_67.U^H@O$pG@U_:Zq4'ReZXZcL,A(c]gcsJKc\]0/0p;1/
%PhUm_`+tJMaYZIdmH!JkFOD#2EH]"#dMPK6[`9bTnHPO@`X@["h4\=/8)i#lQH^omP>2l<hBcDW8n,`5#Z$7s(f=UacD$N?#^3$Y
%3mL&\&so?U0pL?!F:@CQf''6S6cXA]bD&rU^E9J!,U$W3b'Z)H1"godk0Ke2Z"G`=PE:I(@YTW=KI!iXa3%D0m09,7U`6=Q!MCH[
%6!>;?QfNrnSQHQ)1]#:;dlE"T835qS,p.s_@7KPWmOm<\mGnO[p[aTD<Q*/B!ApWWd/YW"6h=:)^^XK1fhY;m1*7+")EBQLB4"F_
%/3G!+e#gAk(^dkP*T5U1p.MnW7)=:mGG$M:>9hoDCnJ#abK4^e9]>A`'3DZl!^,(\btD(_"F'H\;Gnd9]+m0!6k8oJ2KVh@ES7<S
%Tt*bJ0rtL-,8-`!(%8&a&IE$up/#9fo(X/!FAt^TjGo;`91C1&cJk@*AOJkJT6lh8H&!RgnqJV=&jJ></^k<Enl<#?8Vqg9;U5_4
%,eRJQ.?X(/r7S%N;MmN<PD>Q.=S0'BBL&sq021'>TN*MI"HOoJI,FolH]g\;QMW7_#UY6HrnsQI:D*i<QOBFfn#..Tj*ua)IpC+%
%Ri^PQ8d6#[%@=Lc`8I)#lO*/gYTMD=]+EAXE'qg6I"<oQj;TRef-D*/h7a>\-U;`@H._X5j110l8_?q\T]8T(/1=^B*:kD\<L#-G
%#5Al5L6F3L60R.)KsJZPUc-30mmR#1obu]j+3G!8mgHrU(f"p[MdpX#o])l0AGZdpk'4X<f"=eaH(\7q.sd(RGe]5%)i_^l`G]Xd
%XiU2VHC_Lr]#\#=]_,+)j]Q1/PUHs&BDDa7cJC7s=geRGb1'+NNd8l4s3UY+)WZ5'IN31qk#b+)Q>t-[OL1f)Qo@TpU@<>m[%pm]
%ogR<Cn(+O=7B_sjB.ohMh_h\$r4D)P"0I^4WFTX,;3RYXk::SI=BA=ec4e=G3C;%Q4$^1p.AS??)2p%&@]d@`r;$!P;kc'O&$3jA
%5#H*;d7>jLr.q2R&OLa@)+ma2"j`N%.6$ID;JmmM.JU.h7B)0+i2Q.=H3pF@=3`PMc@n>M2c,3+hIkkIq$YK3nuC9)?DiJ%K8pUj
%d>C$YO#YP.FOW\W7]@/:0R<lA*hirWel03tEYTSUrP[AU!+UGBRleSNfpQA@.\lOsWHU[5Lb!!XN]5)oA^`k/UVsZE4<j(?U=(7(
%,:J%FENT^EEPK_>"^a\kfe7U7e0Agl&U[CjmUuoq_`b`Tob6$$n>Kh2H5SZ88*]nuXd\4^39oh;_M7L\AN#EhI65[PA>fFL:gu$g
%!`pG2)le8p5ij7=0ZARK*jl"rMdaHU5M\3CaKY@"CJb114#CEA"'Q<&ekWtGB<0odm<.o/lu]:C!:*@Jf3Rcjo89LA\M0TCdq/i'
%7ZG4,g$Bgj*2/=_bt]J*G2)D7>/Yf%1u=>j'Uqlp(6UX.DgN>n9.dW>bmoc:I!U=TD&'gg7=(D@Ds4'BWE@4%V0S)uY\,Yd??>&J
%?J=.\KqBE+'aT=PhHVaY@1et%]*N\=/!?/TUrcQTC_>jR;ha]I37rBl<tu79RngB(W-G+l>#uFLX=\kW<'5Pm2sOD[JGFZfQOA3S
%\]$+]geKSWRuq-0pZ\*:2W#@lA]+rmSOkd(3K$s<nejZY,>9^"!_c][0&5_mK$,b$[?@el^%_9-?LOO(\B#;PW/<ID:'nfOKq7s-
%dXZM<ncW2p9MLQfR--,q0CgJue-B;eCoKYI$];I`j`:N>f*hX&GD#Mh+bRWg&U/?5Erp%$aOUUf)k_X8P6q'Ae^FC_1jY)3CKq]u
%KSKaKF,Ml5*A3+*[?A.;eXD;e!6rr!GLZN@GhkIS_C0Bs%_Cr^nnc[[-V$9aGrB-aHeg_n6gWF,K/U*3h7([!Xk2=YJ[r0pY0/o^
%FWt*nCipb&-V,%-qo?AqdKL%jNKeF[^>=qb._VPR<Zn`f`aP/WIc!3,-#I1fnTTiNaRC.BaeTU202<4?9:K#E50t!DUiN2G#+7hr
%d>;mrXPD\eX]bSS\?[XcBk=q,pH'mnms6.U?,fUL-W0#N<US8OEfHQ/s+&=qH'EZ\8\ZbL=DFnO9)&&`BU+(BJ23ktLNroRT6X^u
%$Fj+g_Tf`D2d2>QE0qI2l7TFXo`?J_&O,_6C_?kVTb#C\hK.L*"J+!IM!bB9Jk#Y+6bGZ*mqFGdL_h`mP+[SVi<BJ]_@7Jk)'Vt+
%dOtUcI:("8\&oNup'&*IF\#6f$Qqj^%OrLe"\^oqiB=^fcm;nuU(=.'#u`&mEOZh;Fh=cB$YP=#LWC8cfg/kb\/.&M%0R7Gd_=,W
%l?oS@(N.UY?FZck?GNb8E>/5dqb$^0&V;9PFQPUVoC#$#=D%k(X4ld*cpG*TEt/dP8^8$JW,H]?fb%.rhLi2HoUEGsMts>=SEWBD
%o[Hhm0@_hpY9S89"hM3ZDJ8SL[N,0;R=C^u_Xm?/*m8(4KSr')ZYdU+7FAIdMHl2DMqM4k]9`R,W.dtsF7f_XF7k:9>fAKoR_Mfu
%0_6=eUSI^Jq`B2BkJD?aWC,U>X[2II']INSD!rQq+VF,,#QNc3<H:;s*uBOQ+C+:t97aZ[HJ#eT;%gn7_:AdS:Aml=\cke3r5#ga
%$Ta3una'bkTZoa6=ge17I0uMu[P!s+[@tnqMsoqn3Zqr,!aUc@)_,>6PfKpF#\+YkU9/WG<u3cBFsb]nkqLKDM@*j;K7,_78]Emu
%5(dGmN*UgP=cp]i@i*KXBWQ6U:(DF!\erraH$n>WR"2GZ(,0>QR=$JO_l5R#H(^&.hGH&^iTEP`X5Z/CeAP-M;L+hQ5dP8)SEtnF
%%)NOQ7,^eiafQg&K5fBud;PKKFnEZ9k/>X[g4At[L?9/P,T)k,,`Knc.,tq98EmkKd(MKR(mfK`QI=<BjA=<1]m?7=afWRCJ8n`E
%;_2tF_RS[PacUk&e5qTWZ,+CscAbZdWSH$bQecBKj-)WQnMkOiFmo*akC+5WH[kQQ&9X/+r=FWo;utGYEJMCAEC]8Ki.TF)FYEl+
%T#72'IL$F\=Ze;Qeu7r4)ZiPZiAq9("D2;2H25#n55XE=OSd`/O2(^Ks1nZq0E;%O[:9g9`cLEU$q>A`B@@!JH448WO[n5571'E)
%Lg/.KQ=ki(0BM`]s87rXqHlCOb*P?OIk\?NTAf6Wrjuk<n=&\#^?1cD@fDksEdcBNq(L?4q4IQf?[;[LF62<ZPm?G)s7Y@MrI=]k
%\G"8$^!hY/haBEG;#kHlR!9r.L7"NW6(s?+!^24CSQBK`1SDNAa<?bg)gX%g1+nJ72GfM,:5+kkk:TRn(\^*j"r/3bf(8&G3n?Y@
%49Xp?\HdH9qg?6CL!S)$TDR\rV%ipJZ$kJ_B;_^=*#CG!h0A;Dk=a`?6</?GC`p2A$LmlQkI3'?4S1O"p^q0BQN:_A^Y`WMT\B`8
%00Gj<^\5dIrepm;<5/mh"c\T&!k8]$k2Bm%1gei8d\P_(kQ5$rong[94b)gGp[b*1!IDK86(acgLAUpJJ&VI3&sg>QO=9</U_]\t
%,?%^h<;8uU`H_=`>BbsEppkOB_1R'F+[=o^%7R&s)=3W^-`E7(QO+J&.B_*l&&dpDb4U7Y"^+RoT=[AY>hj[&1kp76p>[8X5?H4'
%jo4$;ED=I]*q]7GkN>&)hOcOlP_(q[IS%^'SJ<m/Kt^g#*SC!jo$Dnk[5<O&`5EE+SK/<9+jYq[<Y0(T</jsRAagE)Eg-G?-o.\$
%[2Se&pTK[=59?k;GXWVtYXWh<Y4+BF9]7.`jaAW"R8\l[o^V3=(bOr7Ze4gg]hD6C#cKMD!Dj$I3Zt:k'<7uE`7'ik_^ol%V5YB0
%YiiUS'3,gM$Uq=NW5)hiPSIl#fp(MB5Zcs6BZ(-lG:Yh/_aNEYQ6n%DK,jCKUep#B/;$Y6Ze<Y:J-4<GISRqm7XPn)E/U8-SdI`p
%"<[Yq3JJ'4S-(kR<qD)1YId"?deFtM!;1RMQ3e>7U6!k>0O;D-$3nDEF[$X.Ypt\X!ZJU7h*8-*&=sTo"Jl;&SSI$r.%jl*mK)cp
%=j3Csa"6oQ".DBTnEe:Z?J'XUT7'p0rgW*Oo,XKtesKP@0YuU)_FM!3R2n!ldBtp3@"%c4+i>@%&:PJ(PA"M!qZ#2cf_5heeO/o3
%5HAuF$otDSLRAN.$G@iXF9ubd"kSGO:Fo24*Vo/X/M:H.[)?\EJdRV`Eh'>EFjk-Qcj2AWkpe=3CnMM=2Ab%.)rh?KF`-^.*crtm
%Ojt7*jQ';H^@*,hR8s!U968[tK2+m$$S<S0Oaa-X$9c^VY<7[o,C'Z/._dqV6M[DugDKem6N2Aig*f?m_#hM08)#-jOrk;U,J4HT
%/1kg)S>TE=5W)DCl7s\0"'Oh<Xc)sY<NR2!:B):@GNp&E?]#mNI0A29bl[:Uj4@Kj`!DAm$?;(q;Uo&ZL(pG8.%\r@a+\&meI7Eh
%W9:_OhSl/nl!*`Rm@n#Tc:uo#(!H_98'D/uYLat?[3\[%P++qL3"@BQ^Go85b,$*P4p6?i]!J2[%Kp%O7$(,8V"D/1?=ag^EhJlQ
%4jq2N4<rGF7!'i+&^;KA6<ukpJd-EX&d,NoON_N6Ha->>$Z/G$#:.;e5_r>R2N+NJBPrO8\6HKSfH%3`&792+gdnBCCbX!rCe19&
%]PiKA<20^k81c4-#Ws/,Oj-LT$NI8`!PF%E3n4Mdj+YPd&Z.ViR7PHkX`X)H&?t=(nV@=t@>trKVCY(8@Ga.Ur$kf#Llf0%Z\0S>
%6L:FA#j"<klcaf/Am382nlU88ro(QQ"lrl8Nt8D#a.gq7,du`r"@n0==JZ+IZfg35A`$P20+Y$)0I%9Y,9q^\Dqm2?Le\bGb/i,6
%%okb2]&N*>;EN@V-$?ci`UZAQ=79f\$0)^SN<"Q_)%)g&]l>?>Em49>e9L=^I;RXm(ehG4a?(BilZm+a)C[WR\)*O;,aNg!J4+#b
%TS-@"]U'ep,>5Ma58*3OZQtsn0c_[@i&7<?L<e!G6cn;d,Mg+:EX;A*:XMQ\`&'gYF&:PH^aI!/s,FNI2*D'm#Vm#(K;gh?B&i6`
%>-IhU!Sngc7HGK_>#ldT&N2)eM8_3'6an[6"c]j:le3=1Sp&K2E$;b4!3oJ-+Kbg<Pc^IrAf;\'5?PF(!3IG9d[Di01Fu1+Na''h
%*ahKf:jjl`Bnf9]BTNm[NB4Io3s4RdK]3$SHl6J+K/>g"L,M/tB>0;b^]U]H(]j9UA@AQ_2O!96e%H-fj+Qp8.%hhfO;e@6FI?45
%Q.1EN65nXl^2l"@%qo.0%#Ih9W$jH9T4A74.P5Xd-"e(bTiS;S8P]8ma/5.*L6g#I;kj%U.*+ao'N`a17-.C:<jNkaW:U5"SR4sG
%Dl18hMH]._68j$(nCY(QUm]CXP7r),LjgIdRpdL-pnCQk^9:Qb+%(b!H^N&oacOl5FN_)$WFWi6,8i`<aFurZe<MgJ/WGp>CK%9%
%.$LSo:nK"$ktk\e=:UI1bp4_+KOf>36aJO5JBf=g*4:,^pJ*S06bm[+etF.\RnXa[cI(=eMG4GY/h8bH&<oK>*21jjZ)`k&m:m8h
%.*@:&)piDK"P-01Jll=ZW$(-aX7*IL!Vqb^C#DsV1(=n5$/q!NIsl5qT%YFr&o>+]7l9UY\;k@V\(9C&"IZ*N\6$G#6H#]dH:Zs?
%BLC2F4'e/>rf>$!\ed"lYI%cc$Qd0R9jO+a()]^iQJ\cI\r[nQ`]ELf)P,7*BkCBeonhP@9rKcAX<l<keZ^J1:[Eab9jHij#C-La
%&o)1'0RgarX)8[80@3k1*o"cp!N87Kr2:!sYAospc5cf@@(_De+]k/GF8+;NJ8g]X'=3FbOCR.Ep&V/3CodYu8s2gIB2t,"S=&*.
%jcd+B'+%.5aEFlS!0du"kK8/.b1(DUCr-pFp?V+>B5p.C/p74.B_'>96)>(i!f49$DU2i7+mdhjg+Ek5O[l1;/uY9Gg1p+AOCsE6
%=Oei2$-U4:O),EgMgHh;gXrd!.S^p^.(a+>H?!'gHpMNUf1/m-C*p3,l(Ku+4:Ni!Y8!+6%"tcsliLoF=h";9pirb%W&#r=Eel0+
%")^oJ1>#f(%R3XYd0I".p>_Xi2!lgGRBpuMK;\P;92sg_Vpb<hY"kfPkK^R:=e%Q_PJUFf<1iAjj^j*0Fn*"XG^^VH)e[u:,Z$3J
%(FGRU-Cg7jkqE$Hja<Dbc(noYF2+ua3`1X/]n/G$97$hBX?G=!N\aao"02h\r?)VRqP+7ec-D/h1l)B9X4d^m&YB!-9a0DUO#_O$
%[KJgQU=_kQJbt%'Da_Y$j<Sc=A.`B[_-X+r+Kq;p&#hAqh+OagFMf-'+i!m)-WkOC6ZjhGkm%pK"-A[Z9!4ZrUpXZu)G<ZT$Pk-?
%]E)#QR1Z/J4cn%#r#+;t5A!LcHXV*6`Y1^)(GqhPEe:c(o58\SYp4_.D^u='.?FG]`StMF6SF?bT"Mp`jn.9$lR+m]q^]6S8dji+
%4<5<<eN:L@k/$;!=ZXIaUh%N)+>-HDVp<Jpr1h2=b#Ha?S_>l$eR4enXWOn;"ddb')06p_NBBjn/#j'@^-PFhb&JhqcM$"+-jlsU
%C:R$RYL$WA2Ykib%MW(h.lT's,3_E1,4>^WBo\*41hZ"W$BJQpR6?(TW!2isf.dGU(TjaI_*@qLhqD-0PP=pVaXK'TJ2Uq;E&#7%
%`ZZgkC<^]q3NbtE.n2<=MSG!1Q)s#HZ<nnA#o1(&14';cPA9^ZKt<uk+?IjOHK]>Io\+.:<<!m/`4"[^-B/qg5:]_X,^JYIYgk1R
%QjhujX_Am90WVWAb4JT<Yb-Ynp7`c@59AR;,Ed\$np\?udu;iPl9:-=5G.o>U5R0nda&N3/\BqNC;nNGk*^/reBc_Bf706sY![?!
%3<t2Wo(+4CG0AgQSI6$T<gX(1@FkA0=q:`'=*K/6MQD^!C`Fu`T67.K\63%B^ALuJkMm)Jn"8=to2?M1f7fbCo=STdoW:K@X\FM.
%H"+cVB0W/BS"%$:D?!dVBj#`<^+/T](JW"_*)`c#MNQG&ID_1\U[#fR\f3)J=@W=4QI2m8ikER!p!CXZs(&2fMCGrE?Z64OnsN\Q
%<JtUleb@4$ddcr$T>,2C#t9FOA;=#^"T`1fo+TOEUU(;uJadDunP2ds^9]]M?19SuG!Wn!;7(UH=k**\OFXUe/,K0ts8)%Z+UZB)
%-o/<&&bGoQ[--DmQ>'a#d'N/mJ+TEY-r4;&?BrKETZi6(</Ci(b17Dud0@O(=j9\#\,g#o3XVb(_mCnW-NfP\L&$VOiblIu9:]M,
%[Pm!Y]]ZhIke(sUF:<#aG<Ytnh4&,m<bhmnI:EI`+p"M&@5Bi@j+V)H@M>XQTg4@YZrOX-dplTQqG:=SkEsrApd3HX-:'GG<.3gJ
%j/'!s#Ajs)+-6!@Z7Rnf/&B]^eA*+/5HA#C.aE-NL`V51@Rpbii*&.DP"3T&WD,EA;l0O;9\NPWJ)/<4#CZF6()U#Z"k=SU(3cb3
%9V<<-qo"D,=9=04`aCN*HkSjALr!OndAFP^7sB_O%<,*5Oor"KQR?b6H-i+gP8YK3\0@Gg1iKg^C77r,_8l$,XCeBLAM;r`ib2kC
%HtTf=Ol#j&rCD*Lc!^aV3n;,&]TEc[nd,P%._@$9b@9[7&*jX\5mr@"?ue9E>:KQL:L<1=^F[>h*n;.]Jq"I0gu%QK)*dnr.bVZX
%CiD6%%9WXM+MRdnqG$EY9=s!h<DW^WGf19cX75ibKrBG+BSk"^\j1:ea@JDp\Odb"s7n,L]"R#fq1J3cQeQ!]0$cLR]Zeu'a7(F\
%Iuf+N\";%#I!E`QpI#UE6`JeK=0s[m&<+tpen4,#<H4Y$GIp*U2+edu>Zg+X]):7siD[Yo+r"tJ,kf%?.Z]'fYUmS]MmGr1CaGB"
%m,a1''ZlLP:(DDgq!;H<<(/\9$n;OXi0ki=-3K8c3=ha9Vi9jDoUuR4$=I0nS7GnP7)]a#9JA'kKG8/-lE%R<7Tt"*%$["i.1V=i
%%tqn>V20;@nsZ-\)>7+Yfs6RZ9?D6F^bONn%In_OfHTF#h,XrSd+!UmDTDp.ka8G.>)4prRK(JuZDe5h+u0n7IXD/HAUWb0r&lkc
%DOK,DBcuI55$=UeYEJ'-(mPno6ISIdbS,CU_niQ<VO/h8K@t?YP/`_0R"27f13)E4>)ha')5#Y2Em>BlNe]`jGT0EA)uAr^:=0e^
%*g28Hs'4D-+:Aq!H(YpOrkrmTAU*2Xmj%Q!drG<ZHQ@\q(\\r$#^e2e+jVAM)ooI]hl\BX`?>u\q$Wgif3aV<D1h0Vb<+`I60Xq;
%1t#GGFJM)".o#eIo>s[\N&g/ahPJd2qX'$W.JiH*$_O2\?hgh6=2-l%+t^Z7DpQV!kV!j;qZB&=;:%cTba];-B-TWgfWH3#r>!k$
%d`pa>gNkN%-kf^V-mpC9^AmQ/^Q?\<DuTt!Je7FdqsqN$+92<>qg\VEs8MS-s20?]pE(LWnGRk:Du]e9`5VcEbQ%-9hDb#u>8U9F
%"8)QkGbZoF2*i4Mj/X0Dp`(T2MghAJ]5c';:Jfd*7;0?dVr6[M<,TWbo`+5as/Q`s7Hr"qp3A@\<Pe\6P6MX4KM+Jb.u3,6_JFP+
%I3S%PL[F]&CnKV,KRaZ`Plc__::j5/Zjc,B2J$hP]4*gLE[l\ZBr@+A:?Q_RO]!7'l(")66RFsu8;l5L43>t9S7'uX3la%I'0Q];
%3187#+^e'm6S`:QN`B(?R?BRq-WaAl4tEs"I;`VNp.I:k=S%8#ltD)<BLU3ZM[EHPU7>D5dQ&P1l^?"S!9-2qSBjm6hRhZ@fpqR&
%'doKnG6,e,NVt\X,.a3VN#-R]>rW9RRhJjLVdqQP1[a(]EsuFUr>?=j0D'/XA95?77"J146o2HV"=#&\42LF'EC*WWcq<P5!;c<k
%MKUbFn&N@#VK7n7"(aWSOqclQ"qBEiDZ!((,bn64nk;sZd(QJN'8n,)YffF(ikSe"R`_mIP+iBqTGkXZOs94KXKccj"nb^DP2l:]
%L3,C#n5.`N6FFiQf4rci8W*&X4U`NI.3e=DmobOP?EQkW^/^%DEtl/B5[RH.3JuaHP+mIX72#bsFEg\M*jZQ+*Rcm:Ukls,baIUE
%8W'57;]g!7'f^>l34lH4"9ZH2W6VkE-*4DTWWKaEXFPlcSJa$).TBji)8i"GkZjrZEpA!T@=l8HM.1m2!#Km7XlVRFY[Z8:(FKtf
%Hj&N)q'6a01sI7C&tN,1imDJ*O-s4<BLRUrf5d&8:5S^c&ibUB.48OBHoY>FVjsQ5)qBgj/Pc%pLJn,8><PO^=)(hLWUqR,,+TLX
%%&)6h6Hnf]SlrH`RMmo1]cJN1E:;tZGGUN>W"Nf.dFdrdFs&<a<T*Aj!n@KD>'K(PJp\at]dJ,<'!_^uN18p1K'80Cq38!A/2Ar6
%`)J_u,&36%5Ig=A&$V+%X/>o:'`N(drpE;8^UT9r93<%lJUuY0WZCZJgfu^h]72j3NpIIJQkdddl910-+U0).WN)?i\s*Enrj.+%
%(//6pr;!3t\57ZbM'>8hFL5-E8;=mm0S0%-5<LVrla(o>U+81N"b>#Oajcp5`Td!3B0Z71:YOd'd);310jGQ,5JNAC\7V+@HkMkN
%(T(YB"?Gc%o97>&J,&Y;o`G0_gB[)M*:XD]%<U1UN!_\+GXQ2R?B.Y32dO!s\Pap`OlWI@W!c3S[L0+Ak/Dp;4qierNI?b,\ZlA^
%Y2)N,U_P194N8m$JDf_b[@QC;%isU`5e.oY>KLXu;J520dY[C)e/^$r'^/Gl70`F2GZD&dP^gQW:ulSE2T(uO4`;enjVqXY2['nu
%o2rq1iI+"\cp-KSf`r]t;SNM)?\FYF7-S;Q54j:Kc#L9f<@@_,`WFK,EV!gT1IGLS=jC*.bj8#a@7dJ8=o?9KMjfO_V'^u56]k?j
%1Ilhfc@sjoiDqAjAG;K`'(S.]HJhH?\ib>9Lhr7_"I%!8bDQ-kKdkk[fO&]cTNW&Jkuc]5]L0QY`b6`I$hSLZ6JK)#rI^"HRO,"7
%/""5iP0?q>OV3C_<\mBs?UZgp>t"$cPdF%*'U6[(3nhWC`Trl0Y6-j&&tf9Y,JiMq8iS/G!ebnH:I8lhBn@Jg+I8u<$.,Z!.(Wb$
%Ir]FH?=`RZ!F"8"P;QN$*hm2%8LOGuAQpU[P>0=fjKK1VFA<de.=]mWjdr![<\\%Zh!O0,[L=G"nl051(?GZ#XfXS!A&8HRW3ttk
%NfBpqJeV\sZ"#ul2RZZk3niVE+Z/;H!F+L1X#/qF+\Ng+<SZnI6rYTNh"+^fN;&aPWa^?hPQ!U'd,=AH^J9F3*(4%;!Efls1@;na
%r"QcuaH)EKVoC/h!L5^k]i3TJi[r`8UGd0D0O]iS6Q,"sBXk2SW:Nd+GR?>M/?Pmq"u/a!"H,JU&8YM,RYUIFOh9Qu'QHo>@=/2e
%kM33GE45/3P.T/;2k)tH'a]Q40>2SpJYo=76CnXPAKfI_'"$&fJ]ASg,Q,ebh*qD4&rAWF/Z_SJo`P]1)$7$tr0CKfmVullRE`DF
%<lD"CDkIUMY6eLR3_RBEl]HK!`kBDRKql6e@NS[A\k,C$_Re/5#tc+R*7'7]mcEnN-un?e.;B:BhPtfSd1jE2g]:q8RhHLfQj#fm
%**,Y5>AN"TB(^]JO`fXH>2rgD/VMcfRSu6@4SP`<$T$3O!-M?JD"YjoUdI7FORMRB72SRZoW:1)((4aW8qpMfkA*/l"54(n@Fo.b
%^2s`$-3_6VTBEJs]8a`7"Es<H);0<S]C%hrRZd#o:=G6q+t]>fYLNo%k/Y7!PVG/?\ritagKPm26)'NN:A/A(3%<3p!TfT,>iJ8H
%a<8_=@"#u,C>DW<29\[mEFe$pn>hi$ONX0&KHCR[d?[.g>"NDKR*Hjt-Pe,Y.&g]R2IfZCE0EaG6U#8cr/F=3mM^%0Rr('/!8u-4
%cc6ja)i"n*Cdf]D>$73R(2$3-dN5*a/:[$!I-uDbcrk$Oo4LBg3T@9J8f$L_&onA+O*dpc-'Ao$GTg;Hi^eG&e5#5$[T/r_O2LQO
%GFk>e[,\[tAa"ts45)G<knlU+pa+FgO\?&?$@Qh+d_Ntu6/cqGaEHp&BVspEW`]&)1rN(@7!o&agc,nAMPs4V#g(FebZNhlKDl6l
%OR0BLl3V`/J==pS;2^'@n\%q,'`P`2W>-._AJ08$7/#FAKR/8O@u2gt!G#j:E_J=Pf_^kq!DtT6bY`61*bEE/]hCnm[WWSd@d2!J
%"hSms@*l;lPkQXO[,R^Rp'DjGKjs6oLsZk2F"=1J&TPa*9pJeRN@]DOi1Xs@7.i.4"q8D]C0XhZU&]Mlbejulj*0&Bl`YA+iBrnV
%<'umhLb0&\VK0IaIMRlX;JmEX('5ORQ:6@m>O(efZq+uPU>_G^,bn6m2Y\f-TE$RHYssH>gtPeuf\caUljQ45kPPF..!L!&`eKP>
%NDW,3abd4<g1/k4cSFV0ZkY\SK]mZ]kYRZunBcQkZR2`XVk>Z4,R(0?E!CSC+[u%=RdF_06oP9)kdBBr&2Xh2K_[+00_02L8SpLK
%eHr$W(jbm'!MLH9.8"KQ9bUu^J#<[Tp&tcUPDg/c=gRQA7i[1FfS-DYjPm'17X7h.f6b]?`r[h"'J_roluEbPl`fB`iC$Og&-JTh
%7d]X86qOlr[*WuKTTh?g0%`:(!(f>30DVVpP<u8[Zr'I_l4)2J0a\oZ+)rI*g+"dB7K[WR"#^^HGZZ<BW1.(j"F3:j>G&HqW/%3<
%IV'Eg[VX`IQ@eR"Mcppcj<B;6:bODd;:<deW[3LPK9^Y("mtEW!cPQ"?Va5MQ^.I@rmY'0Qe..T!2rb&??aV(YN_q?`YQT7(*,&)
%")t@3fMXk@luLE_@T2KGQpbV^C<EA"_*L1`--rumChe2<28A;X$OSF>*N10U@hA?W>+u@M6)W.F+V)JD<658sP@H<7-KO^ZK*$'c
%9dg9-X)TCr+1(9`5)uARFe9'76JRJ"VKA0]?J$Z4#8Y7d>r+jKnse"*1R5s9-,l?Ur:0$18pR)b'pdlHl;r<\@#ok/lIR'bKXS,Q
%=]k2*]_Y!5W-lNuQF#nh>R.B-&Vi-.Bbrd+04DI`<sV8F#sG6dB()ftS$MKg&?(+[B-@s3fh)\g"r?C.X<*[)PMq82Yd`sJBS0Yu
%faU<ck-83i/@pS'OR4@TW2b<AYo=b0"F.(`#<e^\W<Ju,s$9#pSlI'jg1RR=L4sJKQd(9&\MB'"#mH<WTSJq8?//-MdCnmp.t\H8
%1JfpA<>'HS=k4["mpZmlcS[:GoS?b`/;qOY*qe$jR`Ftfm*GR&FZ\g9L2R?0(R?Z=9R'j;EIa*XWuaO4WnBAZ`:F6_bSWTNH/.%R
%OFktMG.=I$[^-/%f9N*<9/qWR!&]CtC3WfCJON$JgmYjGBhd$m_q>?O_;+laC^0bJ]!PZ3>-8HTM(X,fkU>Bo9:;b0(%L1%ggE_H
%o+gF7e<^N"(S/Ibj)"P7-i;i^Y@Ln7a8(nIcZZYpqXi!-G/a3*Y.N\1KmrokAqdPP\s@*2#@pPZ7^sPTjh$KJ*EUC5]Yp+b)5k:u
%-d6e./9g1EZ\9A520`saPqlC&cd^L38![F$W0JZt(Br'DFQcP)8NhKlZtrnK.#m=j!]f.fg#3<o*jr&]AP?UaCj@<<ETiXWnBk"C
%g1r\9Z+T.\"bea1!`YH>_c)W+0qkZK7V;gjYJ0[[1q^M.]:o`gF-^]-8;?DJ*S?"3iL%!^JbE8\#6@PH)n7+r5bKa2jQ(%O2EJjl
%lIJOQ*2'i@I7E"+)6+TUBW'XH).g/!K7K<rSKEY,^jf$+8OZ8:&,"$Gq=of&)Us`n"//UGS7.+od`p/CbYS%;Wli@((>M-f"o$Q%
%R3ipjU/I7WRDp738(@[T%-m4F;"!Km1tW6WW(a'S5FGl(+^e"R3);ot`Uqe*71pHp7b9E+'3O\UR$CN5ZZ'5eNB\taIo6[;<si+0
%,,0)-_N'(!A=t@knG"m;:-Xk#?a[&Z:.E)"rUV;`?Sme%f"lIc5jO5YI@uAh-Sk&/?g3aU>:3VZ8p;fnf-:YqKu?MOK8/>iJu+.g
%)qr-]h=M'_]l/ApoQO)g__3E)k0L!+>H()@4n=3oPb74YLpoo5.M,3sllt;KZrWLHKe[fTXslD++)%KmK`NDb*CB7j,'cdu=l(+?
%3P'!'WagS-ge[<BWl/?PaH$$IR97<"lQ@mN'I7bQGLMHOh9t#pMVpZuo`WJ=]&$<8ecNtJ!A46(*TdE^#fqV<c43c_1R*I1R#ug%
%MPG<RrPncbOmS\[6(1bU*0uWn5p(a-[]JjVWt[-bYuiS-L8NU*/O65^m_Qcqi@P7bbcp@o-In35+ZSR_Gc3,K*UcA=g0[Zc8s_>7
%<SZMbc:q,tb8X99a9&]23A?Ofc8_h3Tp7n.LMInD=>rYgIUV?%Hgl8F4<5IEc?.TC7KO)g.oKJQpZH+$h-ML.P*r2O)NA`6=^M@2
%NDirHbVj8m'GT*VO.Np)SWLATa[Z&@B&#b$e6II:)>?cM#;Tu7&rKW\@J$e^"OSf5,f0u5#a)C9714W.rq%if-^3;84F6#"6*."6
%'7cSjoGhajC#[5Di]+l3^p0p'#^r)nSQ4NQk(d.IiGUAJS'd.ODGkF>I_VXP&cj)@Zm+/WXm)+K]XU<'[BC_(!iRU`^l!J9K#.TE
%k6!>uhrLgBhIqU.Fsb]B75%I#.aMa8LVnI]H'a'LD\slc60Ij2\">rG&%OrSS$/HEiO@k3qjk%c7RT<Ol)]3l!'aHZ-FC[S;V9<`
%Apsfj4o+)78C)H)k]g-%>-SYN?oO8Y\ffMZKB8j41pF-E:m]6'NdFb5KW6fh>EEmGN!Ht^6QR%]p@q"8^s9YJ+b.0ZeB_MJ.!MEZ
%!-)kQ]AfBLIR2,#jbP0qrZE]q`2Z-h]sr[cI:.LbBdtV35HQ`BC`/Q;WCu"(?qc]88lsYrNku8PF0)*&Z!$0S):2IH,-&rJTH:!W
%Sc*h\Ne$Ti+T_CEpj4[H[lXdg*+d4S!JR&.8ARN/EZk?f]_+SdMt)&t]afuCnhsNU58h4S[t=We.YS+q+^?us^?tAJ'F[Yk,-OcV
%,h("%-YX;TPUEU!!PZ!kJUEDhdEb!0S;.pLr7htVF2*G::e]_+VC4TqNhGudPF$Iu])+1nf42F88uF6-*dPV[-pdg3/g@A/cW).3
%'KQi-@)^PNZI-7M>\s(P.+L"X"u;n?(I%h;c;%I.&rG4B[_W3EYXtKO7M:W[XVlR0_*(Z$SHi;t'fqi,T)e14"m'Ci&#-+IO%q8?
%JTr.>I1;CgUeZgg>1?^lLaG#P/bA?jHq,(UV(KbVAVND0%s<I@:uoCOb_\XE!9ai+6;e77#':NMnA3188B*,_cp.ha?`7=]mh>Pf
%=!1d6a-#h7F<ZFQJ'heV@7EdT&N&_S="+s,e$*IqPI.9t7dj'W<BP3g7J0]J7pI1O$\.[UrH:]QZ7(L9*s.Y16h>`?9gCm>rT8Z[
%Mq*3gq(`6GM"f<nqWSiG]/*!kSd+X%p%P(6M&o8Dq]7Nc05:K9_G5D5G/!o`m//KUcMp_)Tu((\;3W?J>oO>#M-92=p^Hjl^F"%H
%]s1fU3r.kTIV3;(4qftQ[NQ;FX*+ZqkThiX6>(A%j!CD*l.8]tkD*+&Phgd$3a;CAOjT#;Fh,^k6DrOa',2th8a'^MS5X''!_"M!
%l'(q5^9c+pe+oL]O,Nh(9'(E$8RGFj"%>&cF\_+9+L_1,Ced."9JMnZRBrE=Q;LH7YfE\5lU3WY$H7+P:HTtF`iX+Rf">=\_+#[K
%"B-U$Pr$.]MRj=%K8-\sCdWLr:)o:Vr/aa-ESu0)kAtEA]n`8J,337*@\*h\bqp/N1+O#PTu.;E:/lld3Q^eKcf8YP1dmsmMC@YY
%-W/8TR_<e3jX,cZi1)CH?IF[f'9ci'?mdE*;N;f1dRj907HL@4#!o'A+X\``nOV#kZh*sHns=-`,)V_FPrL-@,!rEE4!uM,_uTLp
%W0l[qC>DI<c;Si&#3RH/j,j[!ro>MgTR:.=,$`3V2jW?!;;.=e5fG9J:=$'NPJ9#V"bRfG\i66Z3@^u`H&<Q7Fsf)I`lV1\TcDro
%^;J79P4E6=q$o#kKfR#pca6$GW_/BgV6iQii^F&[EhWhk^l5ridgC*AN6!/A=s7%5f9]]F+[aff2d@k*&@GR:''c$I2b'XrX%3sO
%bUD-7,X(Hb5US<^@V4,R@"j#S.4<fR^UX8JgB:Jm/-dT8a-TG`R#,Yk#7MDI*j?YMPV98hcPMVm:?Zs_&"9<8rJ;"3C7i?D7'sR(
%Tipa>&*dI-fW*/#75&=#NFN3&WFKnCa@%q23,i/rE%ON"EGD+DKUQ1k8[2Q(^@HGlIJb]l&H=^)s#:aCk>UnXi$S>4q',e0.aDi9
%,cg!\4tNj&,?jb/?tV_R+W[ar(i#0t%.Z7F'dFHg3[V&E677EE+/R!C5X:8?fgC]@O5X%H[T7LI8L?5O1,"ge2'[ZLBc""<kW+)Y
%E"26!o%k\B6&E]70-#'ZpCm!2:,V`.$3)4nLZ#M=>0_gE4d:n$Q57eT8am8$"Z_<5!^-u7VU#hX]1AgBi,.\=R/F)"%,P@W]A45s
%c<[5=0U,oVZh'YeH@h5sU?mfVLeM?5G?KX!U7%Pr\;q5]0<,r2UmQ$pMXFBu!52@U9LdWqWkJI&MHh2k\IAiaV;#;*5ec=eH#e=Q
%d1"lhLJl6&esP;1g]^3QQo-S%"k_dQr4e%Y@D0eQRcujnGmnO>E<lW9(P:Lg)d:<B+lkmLg<B!VfXbe-UP'Qag@u5]"k!D#qUmq0
%qYRI;<-ol1JTdV_a^fRQJ]Of6gH]!H?#!qtNX(1bDbK?\0.'3aouY;u)0.uOiUH,$4kr]7!oV-Q.R%FqZ=5s>FiSV_)J)qcBdQfn
%)I5NLp0gpnHSmJ.^M`NR`@n/u%a*AL#R.,Shp')Plsu&f0%-)LDJc=t)Kc#rl(RVNlA6Xd7m*TBf+"!sY%*H6=jli>.R`H;(;CHE
%s,`5,TPK1g?F<=;"C@XXZV_2USHuO?&Lj@[D/?N2QU%TL8eAhdO0[P[$L4"-BgO,dGuLY+Oe50j!TH/u,5<L,8N5PZ_W)%"R8n'^
%lX0dWOZ<-nG#Diai,leMKuVC3#,tDe;B`ii3<_T1pCo]$QlCRA\sFOQKkV]cQMcBr<*-CDr8:NagM0?K!C]g,0n0jZ;HS955r_Ve
%o"D!6'[JtmUrS'2<1*jj#^4'4lh9XOVX/P`aLZhDL?ROmK3:_Dp3.t>B0TsNT0O"oP0b2BmclS8WZF4mf_]'F]giH;h_triHP+@5
%e-+??%18btb?e!rYnF]5*SWX%R`@KN!fP,Op$<\5_83hcPSmIh_<O9g;+hC&+fK.+eAN?ROKT[</O>(iZ180[G][M#3ZpAD7Y%A.
%HTUPkJ<l5%!]Gjj\k$)UodZ/nMh$tu2kkGA,SE*D!6*SuHP,`d_ccMo1Fko/j:,uN6M5:B_)"d+e3e"3G(&Ee;7ItSZ.)A[9(^%'
%WmTW_Oq[rbmcuo=i+hRs\j4^[_c:cG/1Dh43pq,pAOOWk6$E_!-FRn;,R/*^,JethO"I4W,/]X7BcCgZ-?$2Cq,[&OJ%^n^#=!j=
%_@Y!fkU/<&0'a31[)]:t/?Fck2c80AVS=XpQ>`9^^BAkDUt&t(397j'N'#Ked4b3)E[o4/7kAK\A:`$scSe&)JC"lG4*Pf.-b'4o
%oDC.$1(ios`Vi%r@9#%hHI'9VL:h84@G\Je]ZlA?=]i]\/XX8g$Zk!UjJE$deMt0+&T;Z-.GJNiK?7b+(OK1`LXJ/T-,#E8]PPN'
%kag]m>Ys.YMCIS@+<AH:ot+?t>1Rj/M%f8@ZF,f8cJqIn;D;05=%S*MP7Sao^:1Y?&EnX_Q%u$DrFD_R_&V+#gu*tGbaK#SDYBr2
%69DUAN<;TPM.#R7BG&TF'BDPDh2cF<AY*?)%m?[FEgGmeYh7@qX-!n5,Rd(:bA&hYgb*G'#4><Cdd[[`/o.+pcU&#0)Y&_A812l^
%pdKF/rNf?L#!;D\NGTKb7W!Si=M[OT5p2WI\g+oW*95I]P5rl"4lZiB&I89mA.nb#1D%Z3B.@--7apSe1A2i]KF`]+(;D-MGf;J\
%U[SYJ,"E%>[,W+]S"_bP&[5'74r@ft>=?g(<RF4RLlg.Sa`nq$X#qQe27G5`XkM8n)cWNe$47%Xon04)?CMc)Xeo.GI.e[>,gF-j
%jApq%h%g+,Q`B@PE'bmBgFIq*p>skX:(Wt$IgsW:[G;nICmB23'gX.WcM8&`qSt(q!srNr#d;9K"]Xji;HB+tO#X=1S']22it/f.
%7ljk/rPN9TrgN=`!#k*@P(TD7:i"m([+83*/#RE/%>"PZms-8TM4-#bNO@R-gb2D:#n,fRN:FBam<s9J,"Mf)_];F^3"SCkE[MA3
%n19t461g"A"a-DIc3^X6=M*).p7G&6bGGBmc;<`O[E#j_^CX)`gMuY&AWt%Z)4-X?;=uTg79\[Y$MT(sRcS!/Jneg^Cm`d008IEr
%(-+7k>$C)J/+!]M`<;2k6<!HY,HGSf@f6JKDY/u'$W"$DLOpscq,BoK9hL3_7@kO=DGfu?W,G%h&`]3,/0G#:<q]!=1M(QRQ'BQ*
%-%o]KEajG;oUMi>3?9d:$NtCmIsS_Ge^&\dq5Z+Zr/u'32CT.28D^#EX@'Ou]3M#J56.%Rr0H*(:%Vj?1r]/!mDPS#TKRC_KeX]<
%ML6j8:oN;E2N&fC.V@aW:3A%A%NJ=_16)U.d92T49O3CKh]p6d#F"B3T\!TY[)]k\frup&r^6bk1rsm9-p4S\Wt-,F>CRlub]fat
%:+LVuAg3)3<\S9#3Xlmo"*>]/FJktLrSYdZ4MI&pq2`:idei-adX7L/4W%=oB&9cf2Hej&1U#FJA89TF=*s;4OV`)?4S@([KeaBJ
%TQ[i//Xa_T+5.(H&/e0%XUlgO6;kkMYSD3S`)^";buX&a[_f7KnBfAP;r8\Z9YK'c_pc5;5/,_XNpXR5$JQ)"$Z6jj/Ern60[+E<
%8uNb@ShW6?Y1:fDFa0^eOPASnBWHMm0%=AJ/0+cHO:EqXTGMH0(%:=je,0=PVoD#4n)(7'&1;ZP,/d&?;Q$UPpef_8m$"!Tgl2T^
%f,iqZ+/,1URNZ#'pe8>dM]hE[1\#cY?_CaM?BID?$J"[7G^[=+"\l$^Kl1%c$/JWLl=0S(Lg:DEE_O>557tIW"Eldpk)m2;^WYE<
%4qkK7]o$((1A^;\\*]9edfR#0&@ggrhC<WI?F^T9N[=40A;!RSNC0&+aAZR.q]C<D]O)rTrmJ0g9^&tC32(94OlXSb29\DKhV</C
%,=k#BfSI[1R7Q$/Kln[*m+mXM_3_!p:UOJROm#MrJkAqfGINTL1)8/qRh";75d]<>7$Ba^W1hEj!qK<,*rDiRlHtZVGtu)?rGm`q
%U_3]#d;sLS)G<KdI[3b\58Mqme")QBT[t.lHd/u(q%I:JR*%WRl4.dCeSe=a+s8TJ_WVi0*re<-fZ6(4Tm^TX43X",0)tbBo\B8"
%dk-9_d_0=VWm;YG>9Qq/Q<SO!+5*PK%oJlC]*d"N)PPhpX2$HnbTW^OLD[`4IM"nVg7k,D'*+/*A,N=IlDr"FZC+[5gptu2!E:k9
%h=dTr<-3d6%A5<cC*&bqZX.m5U)_]-;uGP>)8Ku]%P%#]#SgLnaDK[dHEmQ4iFRmnH^LY2<#-2H$QDbA6;nmOZ79YL?8m+P>6k"C
%eD:2M+(1?83JM/;$3E!aaY]X@/,FeKBL^EEd>rQ7UOi&R-1:0t[&-8,.N=AG+ptpaFZ6P,8ro"i*Vo$6G=75]9sXhl#3se+W#Nfr
%Z2-4(]XiqTqmOl\UFX,B0Vh7j1BHY!e1R,rk07F7moMZ[Lf+6S\)Oe(1f"cWcHQkhe=lZSWDA/F%6@_uo)4J,7lqq:["-R32Vh+?
%PaSCb#^*\h[jrjrk/gZg3<@kF"3JV!LQ:qLhCpP6-s7,WbsA1hN7-MaL?ql6mE>LPC^qoJPP)0!&NTch+&"0X6%fV&e=T:\+9-BN
%WB:TF>^p&KkndDgJe/oK#lP=H=jPd/MYiY9[&iGC^QXEbTL%%i=l<:V7s+VqpQdpi@:s"0+HdBN,"D`EW.gP*)`.?AWidg/3Q5u8
%6j<eVE^D%_+k0elLC,'D6dYN^=`qPndrI_#qUa*Zk,mYV*,BQMW6aC(O,k5"!?e`dN*)]O5B+$FXN)3cO86A>?3rW/D>?`*b>f7t
%?;&2Vnj@Yo3'#`o&C"_=3Bj@+]29DF_(HQ:asp-eICe,E6^gHHG3(Q\c,,\Q]s>,OqIlf2,LJ7$?/qV>2.'HPdm6guqK'_?mH+#O
%*W!)0mC>VdMsaXa3fe1+*6NkCNZgiQ5(:%$?tJ$CSnd\%q)mL*AQ^00a[q+\[rT;.*5V;#p?;h)DQ5S@+nZLg=D2Bh0;[cnRDMI)
%qk%Yg&#!Fe$#/bBGCBtS>4toYQ9uhfO?H65M'TWkBaDK*(c3D`b)$m97M'V+kB>l<@H4@"\*c]X![8)V(l3[(#Z,2LMC,]N7la+m
%b^331_HT+W)k5HELiI*&+[\_;p,KU<o=6fs/.oR'VAg\&Xb&(7leY\01RpIdGc#RITN,<E.-oCaKO#I\AV'.[e8]C&?8\R4r9]I@
%*!D,DF8F2EQiaf;r5)7:FFS%$g\9jU5UpkO"c]fMr4_oW,$"OSkjNoX;U[9GoP*)b6o,$G`ds4e;Z3rqH+uY:q1F-[s#`s5b&f'-
%9[8-20<c_)?NtPVZp-+T/WHfsA[Se/PX@=/Q+J$Y,ja>KP\\Ao:dQV(<M0%T&3[DF@rRV.NPUR:F::@7$HFRY3VP8<a)S"A%Sli.
%V-]l<%<P]=q*;L/X^,gs#PsMbN>L^m_1iDkaX9pr`ug`YC@q3f;CKRZ>8#:j-40"JecknHN+]2^o=7]2bT&-8E/t"aXDkm:(QjSu
%*<Rh_bom+P:cU>&"c1-KUOIfl,ZAdZ@-!,.O=RpKIAlQHq%g9'Ao_cO"0Uj?efnn(M#(8JJf;@u'A\AG*ZI;U:UEkf0GDft((Q=C
%Du%EX).D``+0oEI;IdD\kuZmR@Abo=?LkOr+3a#kNDO[\Bd%2DgFKCi<O,6,SI:[,UN:#h#Al91i;obpcFuS3)OcZhI$^.:Vj6#&
%_$L(aq(JA<arI7TT\/+PqZZ-PBM2R'-^%lN/ml+k!rJj'?2`?!?am_#JlU?nK/kn?d&ihF[So-kOO$D;I?L6sp#?Qs-2UWAUiLLD
%/,]qH@h>[!K&BMnHh5I1a?nE6':`3J_S\SXCZG'<W^gZ!D=t^=Icg"Yl[H^-rl`B*325XGl-WXloGOT?UdKi2\;p^4]g;nl1^"<u
%E0l[SKb8t.=#@8](\G#EXI&TVbM<$s2jQ9e/^*NU/aM!;k3Se-obR;QEVc)gd(q>Lg%MV/n3>a9ZFOJF=+A]AqO:ApIJcM_Z`I<-
%h,e?>=t/e'>q)i5I4_.@5qpAi$,M_DB/1T-6LR7Vc;t@(>!iR?F^Kj<eB[:'aFOo,5i`t-hSO.3qRVB]GOUP#N+.^Sjn<\fq>Jh`
%U+iKFmQ8g8XGTAe,:H!EINhS1/[@8bem)+Y5]l^PLJs-eRgkk?%-s,7rSdLX2ErXeL2SZCN+sekrVKC(#N!!+\Ha!H&\'uXr;=qD
%I/2=MofN0592>+4P!JY:.=Ia$/Qr'MXRtq(/B*_lAo=P[eM[O+\(FkGEdr^>$+n3Jj^=ZB&*NALQkKC)A0rSaYsZTtjD<lsX[!dD
%T58[`[52:c#lY%9.ZV)rbnon;TL9".`Xq_/&j=cDgNSZ!m=Ue`Tc0im?@qu"dcG:CHE]2uf8)Jh)NDafXrs3IBqGO6Uf:gc?VH<I
%4JH')@#Dd4lNS`-ZfA,CQC[6OR@lD^'n)LUUFU\]\n)71NKWOUDQ7^l8]6c8_1ntF@3_'09Qq8Q_'Y`>EHh)\h;IF8f;@lY<>]D(
%[&Na?#9=/IODeR:S]^0J;!W1Kr9?kGDK]r5L/G&#pX:p%]Kho`V839O^GTOAgt1lD[r_>2<@T_!8jjP\DL:aNnAfJmZO&@Wk3*Q!
%ECOT->_HcUiJ;:.1^?/ZMfKVJKdp*iZ.2#BhRCNdq+#jN+4IC+%Nc=ib14H5S6aKpIailX2*IBV&]Mq([N9L2YK-8CRNd3O6Q&T?
%nr57RUKJgUMl!DUL45Y+RZ<0=0_BV*adu,BQ)>Q^/\Z)$+qT-aE/UcREHS1Igf1KZ1bI;E:%C(,0@,#&*!f5qH6)dA^X@KB7`*If
%n%ZQiM;P1&$%,qieIo4ce=@X/Jo*@0):h&mH:&S^'9M!ea"5hKik9+=YaolAhU+$U2uETt<8)hb>oQ87>Eg;%Q)amb@*>Gs$%l[#
%Co1T[94G'jJ_mC]LI?hNDf>F%c]-?5+EqnG#u9.?r4<uFfHBTZ,R0A[I2hb4LRd<plO:bUA"M"P.UiN6#9pcR(DC.8lC!PdlX#>A
%lgMJ!I[M^S*Z;t,1Y@89CP2-Lbt<(Il34'@hW9?*[)[t$W%Ib2i_\3'R)\$G[Kh,?OVMjeV"/?#1Ysu2\(6f8(UX=pcCPgN?rY9&
%RP\PA6+)euMPI-,n8uh<&Ye@(KX'p,ni<0KjIMgGq"DBc7"G2:.tsIH[5@!SK"Fth+[<PZ;DW=o0B7T(S@/o3Q.fM2_Bq?p3k]Y-
%6fIOSU78\`aUHm6i!XRnY)b"n*'cKue^k9kduWBu/k+A(KX:JoFtps%rE9aDnCB&TU`SBJek^7aaQm3;H^7s-G,uiLfgN5@pZQWe
%@P1:eqD'llrY/<)DmKtT'"8IQ=QTX>k<A7JSb#&nld3*750mVhDAH[B@Gf'O(\!pmoC]TG5JO#T&2C35=Eodf8'h5\+:F4IL,)X$
%fFD*#3fQ!$UcpV7,,-+[`0M#X\<ZWQ5DXq4Xli7r%7LLu5m*/u7!>FBpHI!Y*tePbRj^HC"TKQR`[C+"A>gIKmm;c)#M>8Y_f%fK
%jTE@VU5_.r\VD<+^1,_CTE&WM%a]d\#XF$T^488_#b]FOMZ`c]KsQ:FkcTR]%N^]n,i,0!qX`Qr(.a#B6P>h35"6F^+H17?l<."M
%G;Ok>n&LeFDJ`oM=G1;'mK,4c5.<F>]RVmCK)#g93k64A!kGs86Z/1+kBmF;[kYHf9]-:43!Eug()`5!3tCnVQ+#<PoQ_UidAJ%;
%1m1/#jQ_Z%T7(B5/nXt?YJ%Gr^d^fQ6bFMB)#Z#0[fcH_2Id<DKoP4,IkDM[':Pm`mlb?6(aN9bWYm-jHg5o0WIXIS])qhM997D1
%CDDjpdAoNtou`qck9.#`)C[tEf>W,I)kqsI<tZ_pq#*;hLZ4I9_f,H,n?E=.pC:Q_41_t4S_%+U)QVJ"2;^QHEFC'I1@Y,a*EC\d
%oo6eXP],0)@k\*U5B]Je&&"\VeR!or07s:8$Z&(fC!2$A0-fm:g3a>4RbU0PS]TS&%lIc-l?&g(Wh@\r^$t)>n$J)`-@G2)NtS+R
%Ws56&S_8R=0C"nTm5cYNc-U,sd)\;`mT\g@pqd2L!tIDnY;(<:nWg:S0N-cTL1?<07hpTu!@c\9G!2KUGDgf0U\L5RKLuQb+EK7<
%TqiXK>Tk/he&6cS>'rRSU3d`-_X@&\KifLKH;=,7H)(YU/)2eBhSc%]"@44,Yl&>bH/PfR7TBWk2kb([0NY[@iQJIK1*LVKif-gG
%/]jVopgCdTCZ*C0qJgq]+_6kGYDBK>I,i%HWW)kQL$[RtNCB-5/@UpTj;Jo7\3J4,%Q#c>4=Cq(+PB5'qoim*)np52/C89)IS,@&
%FlX;`%:+YSo;I+"dm)':q6r<Yha']fFQ21S1c=:@)q"a*cIjWq`%3kX=H0_BP`k"a89=&99<EK`.a#SP"L/Z.5F7YRa]I<Q&#&`c
%Ee#,<i8WZT#'j(Q!^#.==Z6-W^u.i!1;%PuTksb]'5EVaEUQ2kNhQ\@)pc[H_8B3LC@P&=-2HDWk/(#.T\!%7Tg"T8784ATetcSb
%aBq#U=k=$1VJ?%ai#6,Y:DK,L^ZVUKJ9h]1c]ArA(CnuAF,#RLIY^S6Va<i(F:KE4L>D$^<Jd>!$nWDmKT9EFaUPA>.r$dJ-@n-k
%_9^82@OK_/Gt6+:mM@Y;h\*ZQ.S*.eGP-[OKt_LMq1u>3R6<Z@YueHTI/4cP]qds+?3mm=q(&>^iUR^H[i4Eu'dkr;[Sg@:#N0UQ
%jtE?cP_Kb>[(lDA`tuoad@I]sZ<)g)i1L<*HSu+?j`YE8XhY*+_\*e>XO382Mn`o\f$5B"Mb[."PZ)!\DE*pH-Fmg2?Uk%*-Yb*<
%V-Z9&LRC^c;=q-\"Y+4.\JHZ_LF&LG1-N0*I6Ogh]\3RaUG9A\6dq9SD5f/u1#=d9=EBg$lE=<<9O!35I2lDQTNC8*O.a>L(!^(0
%;OheJ/as=c*.;57.G"ZaDmN/>F1E;sZa\9%a4-@n"D;3:1:j2r*=Jf;d,TZA6IMfeG1uI=PAFpfYTtd?):2IOl@SbtU-*]f0a)XN
%$i3S2CGAIl.u(l+SBWg#OTV0amtO81b21]F.%b@)7B9/l6p:+N8N^srE49.B,Ie"t,4q@jF^j%_jmH[i6N5.s?sBtJ89d%V*_)?Z
%#GQ=h_Zff!(Ml*D*qIR2on<516l>oY:\X4bl^8)LM%RcF1r8X,I;uQ3q<tTJU\Yg.@="i/:,eYbSM%&6$FRQ?m.2T.-[-?SSW[%g
%PUE"pUH]@JR3X]:AY?]77n]:KZ^22+BWi40Rgu1aEBejIako8qFXSB85'^hUIi$htU6_`FO]!'1U!TqmWds/Wp@'>tks8W[Z>u-J
%mtG5`%5Ht>%&fY<?6J)4h)F+-^(;_N+Z[@G7>/T<'Q]B.]G3HK_p<iT(b9'2pFXmJ:*LqEEe1k;S+Y(:&=q^[!b+1aH@s"i'))#4
%*MR_RE3P6#9W2197.m82&'l9*_"0PSH%bYg0=*Ml"RGU3eLm/f7VdMiirW2oZ/RkMD,1PR6.HCnW\_SjJaHB0#]GALI-g01=G/]9
%!3ShRTWO<uD0J4NMl8n<V>"75lu_&i;)7TbduU[,+43*M3"8#tcfEV8;gCgK@<"XNiW`Y8ZI_26E''b0Mp@DcBsS)[>e"MZV%`Om
%pc&td>';ne_G>'u1JGIhe>h)jO[K8E$lZMp.U@atmGi&qTgJ(#:H.64G%"EaLs!E?[?9_YT]`!==JjRL9cOdbgsrXM.$>Xu9"eLQ
%Dn^+9ic8J6&K[k/0R8@?d'1qg_VGi'Z/jL_)VT;-l[V_-7_MBU.o]\96N2gB"N:+O^&&(M[Hh.!T,br,+O=Q"l,'??JFNO.ae4*[
%#gTLgnm)h1>HghR:^#I+:Zm$PJeJa2Z!J,17''R`=%.'ZF,E(;3KV\HPrgXjOg!Kt2_E&#qYb<-+I=cVW<_:QUBb,PciY@SQ[J"!
%%ihNClJk;D,_'nd07"aSNpWeT4V/lk/QS\>5kH:.iNP:fi.)"D*Y@ReO<XM#h/TN>c5-bq,*9J7(&]J$id$mF&P6Rfh5;09JM(]q
%%Fr<c#AdO87h5`6iK2CaW<XWo/T9[s!tftJi=VD#31q#J.hlL?dWeUl#O/J`M^!sS4=aNki#(U:HRaV+kU;$A</TU1kIHKt#I_a#
%7JqmNc+3.k"-1RZ^#7k:ql'`oZ6R-<q:ITNm].*_Om/&"<=8riH8"YS%D;/S:]oU!lqN_]h6P%Y)Mk9*ID'<Fl3&(V+18nheV*Lf
%"l>oI"l<'K;Y\4(Lg2"!YSYkZiVW+0c=8a-ZBfk$RFD9CdNFPU%P85hDd+h1/b&^s5LTZ]IPGZPVjmjS8;K:YV$0#+7^p+Xl@jgT
%IJ@2>(uqt&Gr,bt11E@WUA8HE=##DFNR=m50Q4(2k^BuQ7?4'=<d)?Ki8U/u'iqqqcl])pUJ-^OUctW"5;i)E60HV)Tfe&8g!_gD
%\'HFtd.cZRrnI\rS,0FBJG,'J*U*QW7ZI"]Y4;p"lNoM7rIG!3H!2\)a.>`7K=H_nDp;p#Sa02<,M$AV+RHbpb8LF@IP1RSptcAF
%W7D2b]@V"(RhJ%ceZFBTFa:R4;%^b\QU;*.dp%ISPr8CAiZ#][;X3X9W.;pP>re`W#S-TVmX:fcErdL4>eM0=':[&M>P=(4r@D!R
%jW+/OqFI<cHZSBOZH7]o%J[n[&Ck%ciY1G!k<j8<9ga,"3Qd<U1U=.@\83-.N!!L%;"i+AFnF;t1L(`K)*e2!NtPP=:s%(:bB!S3
%>o.1b?A7^7R(*NfLVA9@qpf\pOF<M5EJ=ZsJ5Qn"6V_TX,QF_'q'ntoC`K-%8X*$qhDChG/B[o@8l1kJAUh6E=U`2?>Zqd"l_2[-
%%[]sf6qW/*Bm])t2ES]SFbe6SGse"38n`s'D%B5me>B=/,[lL;K[]Qg/^*POB!d<-UItc>IlahRUSEO^G>P(?<h`ZBCa%4]?Z!9k
%@bgqY$Q7ZIIn/fZ&C-asPaIL0qS!n_3;`9cJ_C]SM(0qG*Uf4CZq?dl3%jD9^:1SUp>CVE$6&Shps-V:os0:1e/%KR+!%#P:R(LP
%+!.!f7P"XB*/,:\$]euN40O1[VL%,@YPX*>NpX.>^'i1q`Vr.p(YV(H;;5sf%+Nm`j#QfD;OIE@Z%!O'J$.cN:nIKoV*;7K_V9/b
%6rA7)9(M,Bi[?E;I?s-XJ`]s\+_kg$lFkr.?__OPi<W$P!dU%$F+<LB7'N[u3?`>8$F*(H9f&Ci/=N_u*HiRYU0/m$cINSg7C1Xq
%7:8"U0>JW0:5)<X3Lo'+S*5*LcfdAuSu&"H+4H]mTX^-%Bn&q2,@Jh=DrqI+LNY/V$UM)Tj30%?)VUr6-&u/!c&qX'9'fGsqI-e=
%*+mM1`S%MEnE!LXg/a1e+MqB;2;HIEX+jZoI!CZ*<o)(<+!\3`j*h-\NY2Y9Prj)J`uD$QYL\9lEq#b^>tnNVk9Db[F1ki`$H-o"
%l$Q_m6ggis2Gm93E]g(cl:Arm`t(H#<";.<fu\.OokJ)h<8e_/KM:DaDK&m@(G-54$OJ:E"&SH[:=@Ft6-%9\Ts?Hi'h93!1a#hG
%nNZnGETUW28h5!0R2Lo_UT_sTAFSaO)O8)R+H,F3(^5!_Vp_/T:lY[O)iC^5,%KF;8j%:S+q;8/T4"-A7-`eB%hharpZ_Isf7RO1
%bKl+765nK;6hWj%,k$2?n1Tcoc%><[,(%.je0CJ2fdj*&>L3mL/+_$;K6iVbDe9P1:qCR>]j-,H*HMAlLo(OD06=cZ]`R7I=`G-/
%nQE1UE@m1qY[$agd1cO0#ZD$:aao-!4-GphfH!E/(*U:2S#X[4N?^X?ABjlB)UXTTO!@/p7J((E.`$SYO[D[\pQg+m!Bp$DOR$0(
%MeH8?Q#2S8#X#fVs*sb!D:Oqg\IO$PYlA.F(aS,kp\X&LRX1KC^ubpk-Y):)`_];h)!qe/qigC[3ASVpX/*=/d[!KJp0=^TF6'1l
%kg:VYZtPHDUR+DRQ(LKM(^@C$pTVeS:=>(<>FoZ`$n#s`dK#+*[:YF]=tj'OBU7`gRZdHKnP^IDZAt!n@1FWB$.[k!<W.4XLcjLe
%O\GM[UJiC][`IW,G$-GZrUgtq(u@@g3p@5n@R/r/BKm`8A6MiA4][:YXdgK[aX+Wo>,j$C(VrU2OUHM6oaBd"?nM!K3&U9eLk`/a
%/H:[T2U#gMj:ukJ2BVf*9QAV)e*(iR5tT`NcURr@Kt+a5CpN*Qq_00Y8)CrlAl&Kh'Ka'hZ,]W!&V"T6b;mMQEXpt6?4=G?48Alc
%&7uZG'!.B3l"Knkiml,+DH?#dMd^\$a_'?]5a`Y7a`,$ZUML]\<C*Cu]Ba>J`OJ!sS2?9XfK_\b+cXf,XAq>)^\>mrI^]F0"-JoP
%[teI?=$q&To5iO*/.<2:fQg=s^%qqK*VBb^o\\?bLju'2b[*VZG"HW>KW7t.@#D=3cBd8`?9@p9)H5)r)e0\aS+$,A/a%B8^*5AL
%3__m$r0Ri&?D*3,F@-q@^s>IkS94l!2t$aSh:;9eT"C>^%)2OrGTeHe]8j!@Q^a.t7Z.Q[6\Uq]cLEF^GD"1SmL:2@=+k/g9K;_@
%]B@o>YQeB>o)6?]_lmiDfShqe'#AG(N:8F*[_r7goaVR^HTX-SBSI`K@@`C;s2jV9=9m3`O&T6E#!G0$'p[[6+)0>Obsp?k4h7\^
%gTcLsW%EXDnQMVrjt,0(Dqu8f`<X7uKfpmYhX%]QC*i8Z$%&sSNpF?^>?>_Y"+3i_OoaYi4%?ob)<QXMWM-3.*m,VK)"j[:jrs1P
%ltD6e"9rdU7j85f-I!0NO9d&:d>6,nYn?WN?;J9W"BCRCg=1qlgotGA>W'm6I,*5k)P^knJnBJ%H_M2?#+@QSc04D\FMk2%I6_ei
%.h'dM@(#Z_`5X]WJ&a3I<&WeEYFUY?^C%>l#PY<J@@o.KdnQ:iliNJ_:Uf-B&@*rLk!J>#Y67.X'p43%.Mk?1<VtY.iR]n`2Dm+Z
%OJ<2K\LX3$MFo2G?B+GlWV-?=qfK.!]^#f+o%phX@I2]*=N@:W1JDhR['3u+e*lINmJ@sb`)g_XGFj8l=<R*R+?&$f+(;D4$9`tM
%=*.!6&5_+iZcI)sS%[@EU(+W%\q6"ZQF]t,Ze]I6%W*#oi*(;/^u6!r\-SoGN]qVkG:7W>G8*+k,-tNu>^V1g#5QboDQh=fpUR8-
%HsKj;k0o%m%l\gQ2J]_O1.hk*m=MIq]>d_4T,nhN5Q+#60N+>MJcQtg$9]I*MX#bT#+t5T*!d?NcLUM@;\aZR"/i+=k7`K)F9_Kc
%-f/MP+4S,<OYqrVRed5b,%tm[O3.[ZH1O*SVHffVg=V38ES6.U.g>#']0-ei]=En,HNj]QZ;`Fhg]MiZ_--tDKj!\>GleCF1E#gI
%&;tC_ncZ>O\O.$],+n`t2]&BNN'L5<$Tf`p(F#(U_$1t4Jr2K`A]=(kWEe<gTNu$+5@5/jUh@V/HluY1)<upBX,,`SbELu\g!3oi
%6bK'8QPZ9%WJI21*YD7XgT/Me7,@N`L+!176QBcj#Kc!qYI4q)S\!2I,Y)C+OA@GU-gNlKcW]@DI,,=36MRn-\I\=W<LjA\*/,76
%9XF%<_"Y7i7+[`gJ&VOm/gn)^%T2bf>CXeU':ka**'md!+FJLU0:,$O'`+a#E1NM8"M)mu3_pRfE^do![n>gk5;.lRN/OA%!=-]U
%"9^Ir5NoG"0?eU&I\!E\DeD$6@Xerb4]`U1PuCbo56ZBnbg28<,ZsRLp6jt7knk3KbtkDs]g.X<iuKEdPG?A!6$qd[npOrE;g)q3
%gs(lERD,bG7bP<f@0^m4AfILbqi'X<:SIhWNS,"5R:VeO65qjm%c11V55u3#a"'mMM:TT=m&4m>m:1P<1U<%L@ZWp3b%$X?1Z\#:
%]iL[/@R5f<oGDf1@Da^j9c+k$#aj>!@1bQ@j(ZE8d]@l'@Hc0a1JF_s>0k20_q$B0o0AJYmM:a]PqcoI'D?-Xgh[f:>f7]q^uER(
%;Ej52Y%iUrF>s9glClD2L9MDG"0P0*gN:9=;uo#>EXZds)CJtIR<tTLT*8]^.0(hBGVIsOk+*\0e&lCu,N7`SHT.B;:^l/%2!-jT
%>jAfSTj[ZPd7,3&98\d$7rB0b[bWe$JY-SnFF7K(E!!_0Z=FT>^4gAD#-/d(lT-iI?.$4.4Nu3`c<R'`3qGUHSH3eZeD'Np,1cOr
%c9N+(MQ;.J6P9:*c9.cc3cda'c@G'h997\ma"L]L))R7dpN;41]DM."8Z#K?O<6FU(a"e@kIN9&cgUYZ3`A_jrpCQQ.jg@*G@h%o
%nXTOFbR@J9kf1mk1'>QV7u[#-Q)t2ugA>>VTZD0606h(fBB.9KiA'#N)RpuPgqXqAEe)LrZSYX^bL,VQRN0,f:cS'YCN9Dg42^kf
%%M6e)$O)[qG9i=R:FMA.r!c0JS/_N.<d_hV%e.a0jtX[4!21*[-:S1>V:.)Vj8^6>m2HCGN^s=-3ris$m9>G6!8ggfopHeueDCNa
%3.k^G#'QdW@mX\$*R<5ME/$i&X22nhrs?i\f5$33,<VFU[4JTc(g3gA+"X]"5`;VGc40hh*otTVgnDe!4J>]K\#%1Ecu25qbF-!]
%7!8RjH1Vj<:1jffjq]b+h1?!6B$YQ;kN!)0Gi0TRG(>pK;+SX(Iq:^4ED6T23O1R`kCL^$?aBj%X/SLtAu#Z^[N/Ru7cOKN1e\<c
%HD%S4b^,;OI5Va7l%,;)c$coCe4$Q,+JTsVlusK:=kOD.O+_`QYTjOi`SHPnQ[6+c@#!`T4&Y:pm\^/XK.tUaLr?0.ELm7'*J'X.
%iIX?>p'bg`=FWhEO-arW[I3$h2.@mG]4=/gGQ_T;)E1o+H%=e-gP?fO6)\M0N$g%=0((.bH15i,8ts>KrFl`:QC%.eNrr*Nrlug4
%jn?3N9``8PN;%OBp6`EOb)7=>UV8ZF(-ap.2r7CJ]P-h0NYE3DQA*4]3.mq!&?GG3QLNg?Lo#6F54gpJS:"'PM!EQ%:Ku(nDU@Vg
%gsDVf;*b0m<^"YhOEN8<%0+8lQBP&GC-V-)3UkOor<4UARh(G7!BaDk-p[hn!)Pm=H8DsLK-4s@8t>cDE=lMo"Nd/8Y+/d(Itr>)
%ps_DN%b5UjmF@Dn7H('^1ot_A8%H"t7nglu*hZCaC"3IJ1ZoVYe6uJ'A!u;kiCcDW$BZs62)u&nR4a"6;3%?RF?sK1dAMpN:mZ0-
%dflB2fQD+0VGsB6DV%sb&c6'$"d'O(RFX@UDG^%5p4h-lO!6Eh:6%-'53&SN1,NX^\IJ+\aN4\EB%ZGbmjPH;GaOt(!bBN:Jl4V[
%ed?[NLf'_n:gA\PWt^DPMig+4`sPW6=DduCpD<LA5(AG`<)O6j_k4hu8]g:iffu`A89$o[+hOMD2(AFm"OL>Q=)H)j76^4S1K_4q
%Km"p3$rl;oHi"9b.+[3N<?(ekS?dd[(&&kZ)\6:qG,fe<kYR3`G*/YX_\P(41aq[im/.?)%4rKO?jq(o&%3kojmf3B%14TI$"j"!
%"2.KcKY40e"WU#[RJMRn_l/`K`&E,`rD]<8?BQAM'dp"=BF>%>(]#"_8PXSNW'65JI1uS$C*\_aBjtODbu4])GRkJ"XC+!sZ[[NI
%4.`eB%2uD!60r6cH0a76Q>AXu4^#lHNY!%h\Ds#f+&)(n"'ID]<3[Pfi(d,XJNXm5G4'9'i!IX6-["c>pnh0Da*.T^hEJQ*888k&
%fPV(QeEp^9R]'R93e+*t4]"CDjhna0qh+O]mpHpEl.iG3-Yh%*]_8MuasIkTJYSp@>=(l7ie/20<RFmF@+:)@T_Z[KcO+iIU]KYp
%_SljV@m2_k#YQQgUYbEYWJ&8ubl(B5%uAt&i6K=4#<JW`0&?aH>1qfdh&uMKWHaB6X6uk!fb=puYG,b+@d"[iDq#nNntC\<2;1&!
%DbpOKQdFe]@BVUcJK)`aZi!hBL<qEQ:A#_o]\k4ENCeLIq(1DH^V-<oX54;5YEWQc5^$)CV?r]/4=:/<mR<6Wn*F<^.P."VH\l?.
%M.1>]dF&E^75c"2@Uucme(-c!]_gJ&/S`eB#Z/XjW"A(BER-2m]L-R;qLCgjaRf>c6#3_CABqY+J_p"h\\:.-Y5L==q7+j%4l'C`
%KgmoB(Q4W8Bchb":o1/C1)/BH&GDu_1=1=WQDt$9][^qm*&TAECj1BAat8i!)7sZ@5o;RtItUoaI5l?V.P]G-IKLaUWaY"V(,G(/
%:fI$>WBf_GfqK$2=ZL!1K-[Fm5g('Wf2\V>6=:"7C&-5H5teem;n%74a90u[2;Cntr,6\q7W2s,NU&C4Mh]r/eJ<aM?eKipqCi%1
%KbPp!rIHI=%PSqq]<fHdjjorth1hjR4].Ae(hE\!d'>r(BuZg?3RYP\f[[CnH;k[_s39_A?%G\Gg@[S$L:seY=D&g!>>(J(NrerY
%/[o?rgVJlJ)S:J#@Y\%BEP/slO8Aj9+]6rFiMh(YU9=CHASWcE%3E3;-sS%R@"t3e,%fu3mbrH73tEF"(e4h,&2Pa51,^7,lR8.l
%j?@4mr`n]h8)XLu5t7M@hd^A3^]M\BQpd06QGVKh3UF<3g/=X'^rB3%U@Mi^!2Xg7*N$!JU(3A9'=W9T,#@W*;pqMJ7"L7M/+p.7
%j6i`D85\]EA*$ge=lU"'>p+<mU5oM#H]&.[V3QHq&\,pZ)MPL,[6sR>p8O_&2*S)[[T3f%YlC[Y0/00TKjbNr^7D4r1lhZrh?."r
%(?63*OKsMJH*c#qpc@M=lk7c)2a^K@\4q)YY=_oMU,GnujG2QAXlcPl"7tJq;e09$6KB=OU#/^b-L1\<Xka`"=X<O@hi&qUh4Lh9
%j'3u;eFO-H@M?Kl<L:%<95:R03s;_).';Bn/tedu5Ts;AAB47s@)hZsX&R3*i6+a%^Rh;Bc'(Zto"r`KYVu)m#F0._(Rl+(PT6Fl
%&2g'h@aBj=D$]6D*s22pr'Qs3Is3LZp*qqiUZ0\#hD98IYjul5;kcE[./kbGW9*#)E>',%c%[,l>I'.5JiVYQ)[<(OCuk)OT^R?B
%^*7PkI/1m*;*d&4`@lPd8F"WT^eK@pX.HTFNa'>0^DMZCs*US\p0K(7p01&J)dCbtJNoqW7N1qXqOg^3^*M<*g.4"1miW;;T3m:Q
%;5sjA2RUd^+q]d1jo^:LqnttQ.fh0`=He80"-d^1<UYY=)S-hkCBN8+2#oVG+e@+dQ\ol?E9to^J1Q>DUjUBB\]/K[>J3RB'JiRr
%!YM!B+E\Du@4C)]Y(d3]9Gh\8?()K$:st>B59XU0-cU\+Ej(\[I@t)eP9Qf6WZZ&Rhd+@%/r*e22FsfmXCfFAFk,ED6Na\7J$7n$
%WZt?*SWZ'hZ)iFhN>cQ)JmJF^6l.^jZ$&Lqcte#(p"WD_kp`9(/N+O&SnA[l-56J9OeEC=[SKHN)#)*c@/CFhQ&o\L=SA.f6,g:r
%8F[[<3d42f)MRVGYr3ch_._.?T5QuO*U&f2f<!C&@VA#,QP16C/4?E:=)@I(3=pTeqS;XW&3pdEo_c:NB$ZfP&<R0rKqk]#iWUR4
%58$3.XgB"56h?<sS_>PpnoOG/:*jaATGZK)\Sq57N?Nb]^R,4UqWq#LKu"ON;ioV0rnZpC!SF&<_3(7*1Ygm9`R[jQ!\]5aZ@kUL
%kSq9\kf.%RE8iV>;'(1$[j6d1Z6r;+R[K*<qb9950e".#VX_'Xfj!qb\@"^fEf,ff6CL:?P(R^sI/FnCinP^"FmL^rLOD>9Fd^$7
%P8@lI:gU.Sd'+Jf$nkItiSCGi6_Vsr.`5nOpr?auNo<!Ap[qm-m-YWXHiK:cU-W(d34`+P;%9n@H@NE-,,g"_;]?K\Gh&!3J^ukh
%"nitIK#BJZ$?KjEIS=p(A[eL4Hs+EOq%d>4.stIBbFWQ.KS!.-/TPu_'=H;YXqi=2U[oKnng9OU)2mb./6r4re1;c-Yc9p)ZXb7.
%V'+5srXJrH">t\q+TYap.jORQaP(@p9W!`-Q*$(iqLpl#HU6t-KM$k!9!p+ia?6*uLX6F)Dm)Tf:MdnmUOXJ/P>R]/)Ab54(,k$S
%W],+S[cR:IY(k-RY-[)JF5'e`Y[RZ+;4KV9b/1<170eRbIG-fdg9RtP=o\&<r0Z5l^kN[fNA9lAh*rIL@DCT7A9!$o?N*t1FZ/fV
%?9XfXIH]J5EebJm>pn+Ir#G_ZRq`[JISdQ9GgYjDb5a3dO#@/HW7]IiCD""h63I77k8T).pCYAG'!;uA8(+&(;f_lk9A+lib8a?'
%P7l/c*8&g$k^]sLlLdo^CMrdC=1eMnl`J93^V8"]0^e,u*mXF3mU5_I[erkONn89`XMSUO;d.tCQaNR?8V71#>D]U'8OSJb#peob
%TI)rA94t^LpX9O6(Y$>eX0aW_\EmspL\=lGKj&(mqfLZ"koM8<7\XekL&*SaKL>jc+WY8dW-c#l[<KB:cMfO4K@+m44#T-E1G&.f
%7C-Popp@EpFZ]8K8mu:t.\`0s2F"t9[pQdQYHo,T8sotUGu$9>EkWl#mpc99pYk/id=*RjrTE!4Go,).E'5'[.6K.3Rgc50RIW4i
%NuC)\i#KmHZ\WeM@,oQ3N<VmU0'VrgC96:]I?]b[i)mf6_beX'/_']FZ/p6$rI;tUj5Uql3M(CTs,pRrY_I%"%W!(JDaJh`Qo+`.
%p)n4D]]j8$@YKL-==)"cc2A>XJ1IV5Qr2L0U?#t%m*1"4NWR.u4ncFCJ.-8KjT\^^9g&$E)LMt%=j[Y+1+Ic17H?-$^K973eEp*f
%ClAjNRYVV+g_T,N%38XV4n#j1+J[]>H9s8dTHEM>q'cbh;=Gr7*@#B8Kk&VLP:DIKSf+oZ-t`)[TMQ;3Gb25)5jYqGW7"[m%5k]?
%4Ks*[*Y9;E5dbm+,U<^:9<R!&%]BMh(*V&$_TXNfXOQ94=EEr<epN/]Z"Aiu],B>"%<&\dS1lWsQOS7V*kH!ZE:1K\OL)7YoF6?V
%7?;sn#.YL7d)0'HB,`S1Wgd?_q<V(:@P)3Yh4f'G1N>HgC`4b<XMiBO;7AoUHPeH]<ReHB@[BhYgYQb*aZaYT6E+#mf@Z.R.ZG;Q
%.L`fM-(qr9oN<=R1n_G<4l-h)Pe4J>7gu(_#-k,gRTH.\d&q'eZkVa*MGe]\23Jd9*LW+e8-P8_H];!"(2"L52TkJ,ZW"[l#a<j+
%.0T20@4i$N(GO]]]:8:)?VH#X0020tIHED"2fB$OJBI*V((J]'';m9G##,>KiWX@^N!FBC;&ThY2q<L&qBu02SI'uK*k[Df[VR2J
%Ec,Ici`:O';>Z'>l3^B2O9`2%YBR@Sf:MiKaot(KN6<>eF8615k!,OV$6VpBG!-en8kKc[Dd4FBbaVq7dD>8A)MAokP1[gR5(<\%
%([./ImNnP'*<s[.Gs:0Ho^ar1^N"gP1N+r(ilt[,)B"&.d\r@HLZ@esb)+9K[+0PsLa=lPGdk>:^P)^mCd@&Z)WC2=a=?$V>9PtN
%?L%[g7i`^+MAtobP(jXIB(*dabsfLLp]-5b>G*Q&<,;jL6@3_\_En8EL%uau#[nG@.`WMN<<r6A*p65\1sIQF!"[06m^;Kg_Yn$>
%>pSbt3Gp8/W]k/?Dtp22dhMT7TL;8*rsWDCXaQ??+g![c$!So.kdUI7%@\fM*2CIDNEr"iS_SXG(^97.cO0C[nq'lkebFGuAJLi1
%/=3?ADYSm4mUWq0U5d/7-8nXcFGngNFSH)52F2G9Up$90&q<taF1j1"H@IYMhl]H4([Ur=1O#OE,&%ft:hXFebq(%8K[;2?"LEe#
%GsM?7.0jL>W-sLc)6,\m8"sAImJ.tCaEPNPIR;q1-ql[8p6Qje6uPd[*PS"nCgDGOJU2),&^SoZVDitbo,E%'q&\FCXjmt7BW^"o
%Z0N\J5r?qoC;U\Jq]3r0h0ctEiALJA!bm\Q@^TdrJ`[eVS_I05mQf[5kd`mk?a&r;]jBZ9Y'4p`5uO^?s"6N\U-I`GT7/JBC[qDj
%Ljf6!.o"`s(,#%iJ(2;`Eg#=0F-;"^-i%\0cIT,JAZ!H*$2,4ke\iIbLehc1Sg5-WR3feE8[b;:+U&#rh[GRnB7$MK"AAC45md,B
%KnG!NC3'Ud`H9+2*m(A+.R",Z+Ij^^j6"H$@@r`5;*2*>p6mA\DQ-GY\.rPpV&<)bg$i*!:!/j._NS-3c-$sWUrbcPd\5+\#MBSk
%EmQqmktJ(E^qtPDKQ>FR95@uIVc*H)3ArAui[=@-0Js+^'5W^1r<t8'Xl<T'P-KR1D;K^C.Ce>Dot>ABgeMUXC?@5()!qD^I'jC#
%:8A'B2\fuo+@TBLYC]FnA1_VYWri:YNNsgVF/YKN\dKSh:7\n`a>Q#t-@%Y'=]ENVnRo?OM\J`>ZfW':J>YS+eL"scX%5YLl0sk/
%@rjZ/6OpZGA&S%*o]C>f$?ZuKE+do8.nQLUl4.0FWX!kOrR_P+l6i.n%Zmf5r:BLIOI(Z1#+uR(;<FWs$/'\WYq&SV9ZM1o.mPpa
%if#We!r5%1Mo#P''mFHh(m$@!DZr\C5B++J=es8K)'ZbIkCSFgNKt/?%bLJiB47\o\N%!Z!UXXI9?,@IQA.j1bZ&6_@F$V9("Ei4
%&GLJ<$b"_0+;&Ag:aDbk_3qCI0Gcf'=>_;cLa"7P<Sa7,Cm<Lu[99OC,YMD]&8hon/dNpV#"Qf\F2s6IY'H43U$"[9K3AIS[eT6p
%$Td.t#S`R3]-Z-qae%s\d,_?^:p5?"q0UY>0oih@j!p*o>t8.PN_Hq35ChaA73G8ahoX#V&b*BCj5N4`Plj(]e6Vj?`YhoXFaf;#
%=GWbSMMX-kfELo;:46,rB%2KeW@p(-nrDC,^cH^uPqAB\q7PY\?M3`^30"5W2Bh946U`_&8UhEY0F?)*[XAi!o:&*11DU5L?9<*p
%PTmDZKC3q=!#NB=McKB/Qfac^c$&Y(>MY@*pfrXHnj9G##;!f(LU,-O`'WfQ+Vs'W0#NXtBGp5hp*HrR[jP89m+!Dkm%qD)C%h?D
%4t:4.V79cS^PPYs$S94@*b8^J7S)?-p/\ADT51]R^;[(jA1?Q\O-6nS\^BnYcbZrriiFGoAZBpNf&\PdnlDU1Hn[TSXT+s?AY[b8
%W[]MRUN9,?*@P-k44\mS!V#Qa5c<"<g$0Yj2CM3+2O**BXNent.&J#cl%EdO527m3I4kB1BN4DE!A;RGW3"r=J8Xs@.]:@a:F#)T
%Ma;ft4(#a:pn9jA(aG!,j,Y_rXR\.XYmo<q!#9/:$11@[_;hRR]_S`.2&6@?rdU@pr"?_'XRdoPNb<a4j!02[_)07VbM_pjg(:TD
%d!6CEp0]kQkp?`3lPAu@?B[[9/%e>)=888O=Xj\A8C%td3/j;D!KjgsQ>jGKnUe&RV!RO2$Eqjt'n38E!m4B<q.4&Rh_R>%PRI>:
%8&7U@L@okHfBD6%J+L!1Cc)eT0(5-1AbiJnH9k-s)"IHMJX><Tr,6s_f'l\1Ir*S7]V2'#-\9"h;5?U#NHYt9G`=nin2ES*\GOlB
%n.2N9#E9T2@mWXuErA1<",N5t<[4,l%lV8qBri9:CW5&f*r?<Tr,;US4C_1-itZ\GVT3&>%"J1Ni_/M"nONLY]n>pRrkj6#?KOKM
%pZmP*YG=D/Md=Wd^]*pKH2da'ci2pBs6ag?j?<+2DZ8*U^`YMWVh6l8<uOoQcktj0'c`=[78aQbD9$:d&RSbc*OPtNEL-NAf[^-m
%oT1\->iu7Lf00mX,Z[dq=I#3(F\39Lrpb&\?n(b3SHk^0*>eSME*>\[oL0h`rYQ&'.3mR]+hJD@W';cU)O(s3o-hK3Pr\3jRktiO
%)*a'WUu!5Tn@7$OnP;23-OdWlDKX8u*W$n6jGh?$Se0e<DXDGrj7_MBT-*Zsn89A%qe<E"_"c'N9tQE$((NHf(323KUBO&lgLrTu
%bNCslprJN^`'ASFgh!k24U(JflZ:^,HFSIA)rUcaoibgoUBQ;!Ns1N>A2R0TmQ*cb56$0_3OMgKVI\ZfM(_4j^Z$[7M1VKP*ms%L
%+d5-EB;uWn)!_6O8;<\J]+\`<k3KE-5l;m&4AiUNQ1FR]<6Ig%?[jdAPDXHp!BtBbY4U]srs<W@&!&j;Z,HjLS'@u[#sps"N;F[>
%=s+R[pP!HbnAiGVa1K>$@Se,U,rOe+=F>0+%6c8Ld]fq;2P@nF_]4Dt^Hjor0t)Q;o3pNEXH2b;:j>NA[R)L6"_hp-&#9Ysh5JL^
%g3a(Y7qlc'2]rG7d%5;OFC>FC[uE-Flj<NU:%.$K&;c_U6"sr+%W^,TV5VD<AMCZMSj'XQlDET3Ql'^[fc\Y=9H[kAO,X,NeY-'/
%3J5lbj\Bu]WNar0Cijk,=f'3H9qZk7af(J?O@j%tGsu8UqUW4pa8d%A\;:n7:-r3n&fJ;7+dP^8^m\5J3elc^2"t9/G`m&G_3=>c
%B#\6"Q6<YBoKBetljlKai`6pYf$`T"<OSb,f]1/j3@0p=3(Y\Z-%/hfY&^1F2IRi8ZCECUqCj$pI3+Ro5L\qG\g9/C&kRe"MhUs*
%$#K:DiV.8!q#/VZ-cg:9)o11%4bKjrTf2ZdRo"^-^0S=d<BN&o^=='O#Qc\ub)fX29-F9u@YfS%\VTpU9(BedQfKoR%&eUVYUD_m
%^dP$f$-@uSs.W`sY+`$!WNk7(oA-*kMVO-&[Xj0p2n:Gel+E%@>j#U+5SINBN1oU>o99PN0!W>b\:PQ86s']7G-g38=ccC>'/AV]
%"0#f*[\g3l2ZlB6MX;t=HTY['I*Y0n8V%T(Do'_i3fU4umoYCFa>gsqi!b2d<jS-YM%1N80d[)oJ<SY.OCSn?"1$Q6*E;7Eib1#t
%@B@8f_2S?>O9]23=HD"H9\sOh1SbV^?j(m:.Jg:/]]1UK_;)($;a:/q?r8;WWM`DoI@R_p<eu]U.@\='N@#pqObmU\$.q!q4),!D
%=G1ut=U#lPRPXXX*`Rk/^ju+:qM^PKS6+@sG-L[^kV+?:#/?^(XR*u`R)`qn:*^u#i8KFV#E>Bi2J8Yl#W2/)0:,175k9ntbW)+2
%,sjW^6(R937(.jO8.f\_CnNpVXe31KW?2Z%\>_;KDg,2J,uHPU(uhi;(!.AuG$L"4Hl'/j!=Kb-OZ_0%BPRpL]1ET$!=fB_0Y.E2
%ZO>3T8mHM5`R"psp?qtdg`R^jQhsM]8bb^[)b^;@7aPX-;e?ds[?BQ[QpbcPKds_Q.il3:icMQk6MciN:'#D%!&PcFeJ&SCW,'GT
%c!],_;pN+#fIp;!&)>@rJT]>p^E[r3T*J8.(PL42c%>)j+Qt]@Nmg8a))0[&R3#BbTa`e)DlI_27di4ZbF1T06*[Ub?)2Il<!Hd^
%BJ52SOCU;L/g7$3=dr*`39>LUE"EeTn3qL1Bfm:rVS&nO0PDmcWuXC+)';)<+qp*`6&iC3P+#]$<g?c!_aP+4AsoY`o$S=HFT1Ln
%?K+Lc+$^i9EK]c/?I9J&'!'U/65>"r7fZdVAhm#?g8@&T(:0R693+)K@aCk$V0bL]G-7O_^)>m7`kGFm!+B)%c,+I\SQXQAF4%O+
%2MT$;P0WY7Bf-@kC$6\>cnlO!l,GYBO,\PfC>:1jLbNNUWaLX5o`?Bl5Mr`1C@2i".PfNCl'fKfo'B<J*f;qndf-oiPC8+TW8Y!=
%Yl8#m^l3qj"!bV-8dWWh+7>LqYW<n5W,3)_%)$"?hS\'5bX-:$VH&\N$D>`R@=bCWnHht#E=Fd)Qt/J?%lPsc<>R.7r/&%8ds64O
%>qA?kN!MM]1h<bM+nJ2EQFIL6V/@Hd;3"d_.hEhR/?He!QX?,NX-[a(P"<g[B*?"1(a%Mq%I=ol,^RmISV9'D8haR:Q3LPThd/fO
%%q6Z>g^jaZ?;=s<gRHM%<."-qXC]:_7t+OSrA=FlLWmIifPTN,mhm$hbm4b!k*6a%@+B=8U9Bsrf]i\+eb48.l'FDf2ouTlM-NT)
%)OJ!p%ra6/*Yt0G$r4EciNsZGjnCg7n]b*nDeBCa2uhZRbh=n$\cYD:>6ph?XW/U;pGuC(/C??m`=^jkX\r9&s-k6_>BgY=)'e->
%Dj8NC@OT0]SdlD$Mhd_BJVBYl@mM#r.IgoQ&7HEKg;?3[3U&Z8kh=J#-UNh.mObk?oUh3l64$'C5tP)VLlLM;\uSgU;YEc6(<8bD
%f&D>>NCu:feH2$Mmsnq]hEYku[g>4f3P?;71.,<J\VW]F4WF&L\Fh&^(mdIR#Um)h<.A(.hL=Uaq7"o;?bu#K2bLGUn%[PTItMoZ
%WZrYq5f&bVAti/5XD!gsfd+6/6BgmP]i!udd'Q*VgBE^"95"srL08"=gcT(;<)ijEOr-=H,;g2CU;on2(83'L%Z*1eA,<_$Io-!]
%Q)ZXA%<sST<C%S/5O&@5:AT'2e-O-31uGCU=[W`a!FI"F)pN*XO6m&@!AK*oIMgO+6g_SK]YQ45R!:])bk>PMLQBFh;FV*DYCk%K
%s..[L*]#F.3%]2b+Poh^"=a_u'ZcDBf=AZU+%le8flmk[V6^.!bCBMpJ,d:`fAHSR07W\^J,'m&++O(^?iKK^rs'&5o.U...7`t;
%Poi1SRY_n243uDldc\iu*+4(E-;L'*e3IWOA\f]o`%Ta<&WsXuLAla)d%Z*s'Y@Sd%\:G'l9aB?"HO+ZUl?im4gH"'$'EMb7\)##
%\f=3<]LHgEZBR$lg7n=:Q=#qqWd"#:p)kT->+>gEY8mY:SV^J:"U.OOqF(s^>CqG=5BL"-CIXD%S5Cn=++6GE/E4(##K@$#<F_6j
%TdH>_kGdtElV@[8'mS-)8*<i:Rt:%6HZR,)+Ch#qDg3,_"[!4Q%t$%V,NeAp*RkUg6gn!i#?.M9_s+Bm(s$PjCC,Q##e)qrYDNLi
%oSaZ28FDWF7dsq6&8!P.s4bfkR`/mq:D04aZ;M_`i5p:G?8M>KI$*BdCPJq>JeOtkaDNS"iZXMee6)6R@B\kkr62Ej;>#O.%Y\Xo
%Eem_Ie[FBc@O+3^(-]SGHK8R\/V\+','l1%:B0;'21PDoZl:1R:im42^'#&I<^1p6/5F##L`-I#b.rZt47Xf\8W5Q&q)^dRZW?=8
%&#6X$$uC.=_bf6a5%ri7gNd8:rN]kPM!oL.!G(,l<tP1XW[_:*e->u.#]edSWj__S+RM5B*9;D[&i3WScO0mf5KD5JOL=7YcKgQd
%SZ]^C#Z$AJ3Y-R"N%ahfkrpX)"YsM+Y$inX[K%,3"-oT-M6'5F0eASp)9!'G6dojJJc%V=/9ij/*g\pMpr*c-jTT+98)_L6.28G]
%?17TIJWS"e2tf5tI%n.#Ve>pP0i<G30Ej8shH;Gs;+!Et7Ciqt0c#ab2):lo4f4=W^6=WlgAZg@j5%S:Vr*<ckXm]aS[V_Id408?
%(lg3*dolI+W^`fic+GJLI0&<eYRWJ[rWYI=@$+K?6kB+uZWUq9g=_]0\\k'a5Po%WK6@Mb;7C7c&2BTqPO9,QcQno+J-GgVKn$<>
%<uB5YQ#KNbAV"RZ*);6mYDTn&^ZIjRh-^3sL?:h+D$999eQB&:?1\ahkX\A^#llE!+%jD5WK(U`-$$bQ]?,s(#a'^*/J"nDd9C=W
%4T<RG)p&]*Rl?C>)[I'N'I]qLam)aGNj=2S9Li[KPuq9<bITV6"(u.k;V@(g=;4&Ql!gYc:KH=aDQ7-cO[T;]%7uP$pf`s5&Q%u6
%6[Uc4)RRLRI!!hPk:Z]-**N;JaAbN4Y<Eqq`9)/L6m3Z7&"gFI;JfOf!\P$7d1:3a/JgqbjY5r".9Y-aAe-`GP/9M[f;<[$U2o^S
%-<'50U$+SR9uSVr%*]1$?LSVcmoh!P8kmf!"1Zp=;1`4S]P[q@R<1c!,gZ)K_Xp'6-2fssYQRQH<^a+sdRBCeEk(]Xle'HP^+qLM
%b/I,4cGN$!NhfM+9E#5Z.g"s]3)"fI[]o@4Ss/+OARj(e$ldj`qD$h0Ratp*_'EXU[BY'j6ZqT4[G1j(D!D&$GjlWu\;GFAP>sCb
%^s$u/P.tiEE;7N>CB?%jMFoBH<k(H1AqDK]Y?Tq&,"o5h'Tg<i"<d?`=a?eW/MIZ\eK#AGePbJ%+jWW2PrfP/957abGGTJfn=c_s
%$g@*!`#rgK:qt)h(p?6egZFETGDF/7G6^VrlX(d.J5LuLX.UI<U"kTFJn4tm;"<1M,bSj[*o4`2<]+(aG^_A8#h"_Z&X*A1QH63V
%`):U7jLh@Wo$C.)ZG9^o=%D@,&/EDVBbqpARUVmjVr'#)mm_@.&"0s8H'bCZPY!j6W#&nUmMKl.rG)gccjt$7@r*0O[ShdB!IkYi
%\7pTFaO\@`+<tq-;995W0fRb#^=9nR#AoZ'maGc*=AoXI/G1l4-+?6_"B.3lAl(p!EA?ZC!/uWKeB)%q"KQG9R$fh9cEPtiY\Tig
%1!N-4glV@5;WNl^7Z+m$c"[gkU^tMt!$ZXgN'e,8hq3huPXJJs&ns_R:qP`SGG[\;j^iWM&Vs.lWW]WST&?#@5]@^gZ3LZpdP&YP
%aoThO2uL9Ael(/s<9>q^e[#7WZc`#+B$]IFRF)gI,8C&dA\3uEHhg'k39]1N3'j<q_I.C(i/iMj^`JA5895FmWXhp"FAU5rb62i=
%5#f3(/%MUJ8mSrM)Ug^TQC1I-"&],`CdD5Eok$%aljO+W`c,_pc0%p;$*^0`*fs(`"gSZ+!MrG2":46#Zn+b''qL[&.<HTIN9q"?
%/,2'":oFY2@-QBZNYPX\bju?u7Is[Q_>_(q`<SU0iOgLTo?_8=LJ53R5]e#'-#,cbDCA6Pfg%=Pmp)sR3[sk61i&\h],,c#P\:GW
%]h)du&buNX4ks.^5eFV<+a>;8aLT#/Cba_4M/0Wb+mkGM7%l?M""Xda1\A7i2&c6<kYMU3Y9JW.3/?Lm2@*qA`C,.X_m'_PIe$U&
%-\6r.@N^F:Q'EPI>A7/[-tj,mV)f@1'#hk.F)i-GXLJQ]6#&?F(6(bGI&9$;EjCPJo?$b'pf9i--\(H_i^'\Jn!D)oO`gQS`4TkR
%hrfc#Qhq#8s-*G4Dm*L'],fe,ACK/Gr]-0:buCp%cr/W5;&9-f-js0L]S6LS>?\5qp&.Ks]sefq1e'-Uhj7#3L31U?JWi0Qb20.W
%'lm9Xl4_GbU7XYT-O!g.!cUB:\n8kfIp)R5Zci;IbDDZ<7pOOBa"`2?h5!2\UrGU/Xe.c2(CoqI5P_W=rTnQSgGsb,j)'@>]_rZD
%JJXf1c[1S:qiBJijmCUQIK+RlJkn3a2h\d6m=M;2M3dmf\p%ZZ^$.pEH.W1rYoVh+;DZ%4X<\\4R79^j8;#6AkT9us>j@Ytld)[!
%=6/`rIeOK^gq:['D"5iaEeD^1o?S-D(TbR,jMbb`j4!aLZ\mC6%*@K=gdNGmFB6E`>XNMCZl\2-hr9?>b43?@;Vq>,?W*n).mc$l
%G&r#+<RM0`%)#<#ojK6hLI\5YQ@#H?A0DL]f^8`30]R65816,:SXuMDK$=W!Q7>UnO?:=f'Z*<NjKG4AZ^PSq(qm4]o!",U%eiJ.
%*XNj:Ye$Pj-9K"/8.X2B4197M]RgS<q&?&hftBu1-OmfW!TqON9J4hQ8AUT.a@6X[8@=gag1mDU?&#@iZ^N:=2Ie#DD(QAWEq)bP
%:5I6T/QMML!d$!ORF'sZi),g<_N(-<3M=bSSGk'=*@!Jmn=6$YFOXa/(6P#^^-XTE*8oiMPd8>17;`86'Wt3CqU;eYDdN.CZ2H%R
%DX]GQ6tm]5[L*?K8=J(6OAY,R!sq9e32tPX2b+FA@)_mZfbSKY=(>=?D7%\X-Bnd)oi1ss^O.)iZA]VEM2l:^D8oU:A\sIq6kO+V
%6d$;\q^R':ArISEXWj9&K^HeKShg7?UuNmZDC.E3"!#4HO^FrE.gj.,pOR4<b8bsoQj$VhL:hthX5;m'GHhp(5oc.kA?HTWJN.Ue
%6gQCcbA@HgnT9OFVf<*VW\K3EhdJcpi1pI;a)kc?7n$ZPJA,35"?/ka!%:LNp`gLEce'p<a;MHb)!9)qdR>+368,/BbqNa[?tg+H
%WgEq1@LOi`rkf.0TPRJ$0WT/dJp9%n0<e+?)le]@X?srW.W+P[SdpC5\^PZ]5R0+^%hpVO([_S"H'8IW0+C(Ed[3fT;Hrn5J@NEK
%eY1k%Bir;MTTD\mYsiWrf%A10[H!R75a;R6<r;>?V%koJ@49>%JcZNj$TkKTIQD&EPN)[QjbKfbBH3*C'eh6@FZRkeNdZ5Dap]aL
%lld3u-l@U)!6V<&EO'pf`]bWZ4XsnD$u';>;5ePB:i4E0hO5q>#Z5UmUW^e\LlSEM)JfDnT-14FJ<$V>"_GDU\.-^=]C<FZnnu6a
%S,/7Iptehrah_'2[2G;u-"rp3LW-tOUIbh+Z@"+&Hi_a$hr^tL&1k/X;::Ja7&pD?-sJHhUbPl.PMlp<=Y*l)]5[i<6ZKf^%5,CT
%p/gU+:'bJ&fW@DIl?Li=QXQ"d%E,t]O%e+O>g8e9>LgM\i]R?/&.`A.dJ`.*CT;ou_QMKCFC@oF3kd;nA^r7og];QN'!d!tg-OU9
%I"`FIS,F=Ne?V3@aBNkUg$^q5>[bK1,A*!=iObt'eO6Q7)`=B.,V5Z'XKQhP'n%ad;fs"D61,4*G.&_crEqlif7/trXh%nm?B;!G
%G/7>!nQ6H*D1Q;em-YDS/sF!%D&IC/D1R3g7aNlP;$BFq^9VUkETV!%d=K1nAY#0_/dm@`.$74<iE_m9M#@-eWap;[?,_7dmS[>C
%9q9t1"5Gq,c!WW$jopu,0b7rj:pP\:\$[Q*d-.<?G?Lo"gmE;fEBTldSb"@?Ju>bOJ8XP.p$q'TDCp?BC&`if>"3M0cH`=@M1jG.
%cR8qp\lE//Ng1@lT'faDOM7ck<G!o6$VSKt[G+JEdQ,]AgP-6m2">2>COMe3*uZ>[Q0ggm>'ON)%&qRG_^*GbVj;3&#2N!(&T6-u
%k`/Ka=o5ZeMgp2`I:di-XW-/*3e!>i[]%$(R4aH+i:WI&_J30Z.%/80S`/.%_hOgdQib,;g`gB;/!f*4RX]Fi`e"EN@kM%INd\I2
%@J`;I,%s7.ojb&Xk=$i6o5.%3^O0JY5H"B+WslN&.al60.WA60@R8ZK;U3X`?mpc`k`n;A!D6E+,*7m(XphE@D$W(H]H-n%GYa/7
%(Rdr%R`a_b8TBHa33"p="WeE<W)Ol%2AB"ST3=4i&`u@>#7-TNJW*QMAn;El`bmol"f11oq1bd=i6W*GS'T<l2N1+BlIKo>:"3mL
%gSscKPak90?83)0_,J*1R5*!S??u0&QVA%TFX?`*X6;:qm>)2cb5bGp`gfT#P.Q*3S,9B/K-SM:9^If2"\<6S$i\\]i2P=OmGZ>4
%ULfLoj6T4:kmUpQh*e5h6D$9ebJ:!D_N.u!X"%tiD8oHRl8X%F[=_";59HD8n;uS&/dOIV)Na%Z+^]C%r<VsQfNA;+iDa]p,pPX]
%Xq1*#;\f2+V[7MM+S@V246SAIJ(0$L)\YakYU(7dAR,o:)KE:0r=09-Hmen!@c=]j:mTIh/.'Z/df#m=LV"luQ6ZJlAJ/E<na(eY
%F+ltnZ$dY`N7?atN@e]+2LS>RGHbk!9Z,_A,p3gt14r*bI+R"1BaUtILB5N9Y9;g4(j^q[A@VPNbaQ`2`RFrG;oFT'$8uq,gL[Bk
%Si,Xd,nfiu/ec"9SO%kr1_AiZ3/n35iTBs?2'+ki?mqWoWH0=I$l9+1a'u$nN490J5_Y:2$%lu?B?X"O%n:&S0tp1,\mb[0UNT:I
%ZepmH"%]IMZ"=XHHm!,;Z"?ns%]r<rT1H4b.M?]ZKgTk`GouJ#-j#FS<m[6W6N%ksBP_Z0S(l3OOFp8JZJ8"55-1HrAkH=(mHfl:
%D+p>V_>&'6N%PCe%8`IQ41Bo'(:YhD9Qm=l$JkV(%S[k#J3h5%LtXX^cGIr]c?dK6lpRJ($/Qm)O\a0D?[m]hn7&*dqV+@,gHtGb
%6LjM_Tm1ou%Xr:.qA4IfMto4[kTdN^^G!g!hosD*c-PQ%&F4=ol'$u;N>4dMm.cGj(u(NgXMDXn:"f+'T9_QWZL7&+qbL@Urp\D2
%:$Bi`Ps0+hgkH&i:L'3Dr$7.R^P0Z2hHsPG#(;'a<:2RdPmP.d]#^O9/N\[OgOq'Q^.YQY6ie73GZT(Gp(O7[UAIdbKY.2)d@[fK
%I<fVd50mMPQe"X;XntijPWO5lQM`2n=4k-KTR_?g.+gm4S?cHPT42=i5q&lLg$G]RFbl_51pgq6KU'q\CM90FQl#hT%!4q&#_^m9
%]KAG>"Ag2!#[is"7f>UM/N*ha/Oq\mpIds]Ans@A&%XC[4RR4@&o0XH0HL?#)jTpuA]^5+/-Bl8cqTCe1*R%I*j(pS"s`+ORo)tW
%kHd<j3!5se/k/9A(l'Hp2c;50OAK>lQ&VmOLK0LE<ErUPH=Sno25>[-(9&$f4,#5e'M*9RdoIBc/Nb\9YN.>l+8Agbjp`U,aIV*X
%1:!_'$&_[5XD*<X=!@XW'bZ+;/Mc5o(>Gd>iEu:=4J=$Q3OYh-*K%W,c=h!Ge3$h>Q,:(Fo>1F/8BZX.^u_N>H_qm%AalacqL)ls
%/9QIB4ANX[!.OGL?b\I-aGJ=&!bjfWqfLm&c@l/2LN!.?XW//g,WBg=3jfG%VV8AX=]MMtS<Q$MFLY2*Y"`,<iEAL*!"#eop-bVG
%;A`p)3dGsMOEMrQ@TY[sDn\>rl\EuXs60Dt7pZ2nBlJ&6n]l]G?29A"182@E+-m6#?n-@APunj<<M0.D:e"!)2=_oWl6IeTYb:6(
%aCu'r"k<-qFZbO#Jq4%rYGbBTTROGa;T*&7R@djWR9]Tbne[p:a\HB@]P2<Pf)cbGEk<@*@;S"De)s9],H9YoWqmd1>@OHWM#NFe
%#^%Un[0p1Bm3^ChO^'JIfOOF$a`kBg<<bcMAS<[5<T6Y:IfE,P+]Ie1R1Rl^!*NhAF9kQjE5:u;2PR[9+]I%YL:Iq%^>[2B0!EZB
%N%2sT%kr+\Ns;s3VQ*+O8e*3'-Agk%<Z+=15aH._:do(;#LL>[MjlK+IB!VVl:gU:.";'$7r\b-K7]R$RkVap/r3#;@:-e@0Id90
%4F[f4_`s3M[r7[D=@8DCTN>`K_eQDIOJtF[8hCSO6m.l4cokgomDWKCE@"6B<!j;$[r:bkhiYX<EXAF;]NdYeh@J\.G2jlp*J]'S
%iI?Xd:g<9HEd6t"9fba3lYm<Soi$VX33$S4UJ]i%?o5c?0-nm)U87*VUQoOdXI5`7&6do,q4#b4Ld&/+@:nto<do^LnN+]XL<:<E
%rMQXT"IY']#X\4UaJE\_(+07lh!g:k([Cu$)FI15F=q@O\Y6*V^&WC<dhT6T1kEd@%\au(1EIqjHAU3n*Z>9D<cVT+MZM1-]F(Dp
%K-bEr-4Hf=@"YhPOg2,3.)i7>$mDTZ)/'o1MLnd@*)#Zb%E**"CRZ:jH'/$Rfk'cun\ktkKPq`M-Fgn5dq4^g3r#tM731&s#,Ato
%6M3Tt&a=[aa$gpUc="[>,DU,:I#6RaR4*CO9cgdp1t&T\f28=^95&-umT&>kQ9GD&b0JEi#L7`.lpHHA:`:^j)RhH67q1;IjDTp]
%mRFgoU'Ko!Dh;^f!Ha]t$C'@OM9bWN[`u<5GPQb7ci^[bPe-e#%\.Y@@GDp=^=XVMi.MC=Zl(%mZl*i`/V;"c1@7iu^o29G'F@NL
%HmAnCOGhFbB<p9fTPh3afTl\)PP.c`3!=j,$$Dk%^1Y88-khnO``JOmbSZSK1UMlL65$?jUpsD$Eqq2`?-RPN)!K6H#DqmtjeQ2d
%O$f0BTYWgOR2t_%[UU`UcmFbFB:ab&(%9;"2i3A0h3;Ee_]88WZP1Ga`Les(d:G\R^--H#aCh!NTrEe*KUr3pC=0RGO\OZ`2>*Zu
%4PWg;A]ridKG4K\9QiUmJS]Br$*`P!k#%0<65=lgJH^1"Po\iY:>n+Xs2N56/&qU4ecPa30!YVg\Elcl<OnJFa%DL$eJV1h%cP[l
%k+t>dkit$tl\NbJlKJ>G,3+6fjmosd>!_9VmPZrS.DQ-E=I2;=I">$i0elbpH%E5U;/4tkg3!Ydqj='b!U2+Y:;QPKN,f?$gfYaC
%1:!=@d__uPYamcf2j$lGr;f<'3KUQ+\D43T;m<_DPh%k4C(f3N4oTWKp:Y9:HZ3!D&^>$RD;?VaSh]'cAeiU%eo;$G=Q+d0mGp;M
%a*+/UkpXr2'`_'3XM</):I7W-bQdJ0@IoFk.Z$B,WT:U1lK_[f[q20ZbC7O5CEDaOX50E]#i?'oRAP%fM;[L$3:VZJ.i'LA(sG+l
%9`>D(I9Yj-ZD^gi%Oq!#YZija*U*TeA0K7daB(m:c&'$d"HV(OJi1<h'klI_1@4GZU9F$0cs)WpWuQLl$_a!qqH.)Pn$]2E-C76p
%;;eYZ),\R*[`c8h_X@"'(LQtKNFcsqo:700]G:;+aDlAk"GWS0<ptR%n&4kO%k[b@G/7aF/VAtte0PYoQg(hq'*k>E[KZZT:<X*=
%mKPO&J5jAf-t.`3.!#n$g?k2V-?Cj4Q/U5X/Cb6(_Xd%@QDQH-olS_l3g.rU$Of:4R]/(NLm8@l2!@X;X7[o5JXYi!e4@nT)K]M@
%<"Y8FGJGt+*1tIfF6`J85O;rBM0)kqTtG/BC`FEXLFA7kb!+@<FTb8M.0QoAqoMWEg7[*(#++Q!G)B'V&keQu0U-hMQ(c^DE$dsn
%KhOYMTq2(E1]HpFM7bu)qd4hWp4%2;02:jZ[LAOMHqa?JL^j%7f'`RUC\R?B4&&f^(Y_g_8UWQObD/q,qMiJjonK5u#Z#PS=0hdO
%fl/M,m:*sf^#>V@(O$--9E3I"%DPMe%$g*/?`3%_RmK>)Ue/bOra*ft^BW0?o`S^p8Zp$Jn8e@-7-S?%OUe+Ini+AMY>Ze+S)ED[
%5<\0+2u,GJ`FH(@(eDYXZY^3`\AiW?g(V5:]CiN;He01?&l\%cTt((HAu)1<%TF6@?IZHtbFd];I<'GdIrf^\P,%Wp;rGloD@6/X
%/VaT?C[&[KQ[M8uM<id`R^_W,iq(]8[]&)lX0\],oDnSN0*G/i=@!7ECbLV7ktN#r+W9@;2k;EuC8029`'(A7o'E%Q-.)`,_!7:s
%G+bjsO?B(Z]\/P!3`MsSR2Pj7'fmqfS_<ADX&j!#.`&A\(n``(+G<@<7hhnsg.e=DQq>(fh0tubl)l^=>n%f,QQ(USE1SC;CKVSX
%0h5-3TLP7i1(lCB-S`Nk44#iak`ap@W8$(`h"G+\+'lpMo])'qK1sSFn'mo0WO)b1g16HNaL2O2j!dJ785tFH=,^[Hd\B&S69kkS
%9ZjJQRgm[f(TVTnR&KN(8s^C(FGp2WUl67,F5=!1$2nkrkiCVLS"fV@:21iFQ"'-QL@*_eUH.0a[pk0]2lN@A0lTY2([nDD0%=Pq
%rqqONTNPNXLYC*L.A7A:8E()?c(JVf:h^HF32nn/OZ$3a4es55JOcFQnj@\,&ePtmLG@M6p7r]5<8GSoPHP^2*(aHWZskYTZNu/M
%>]:sm-TgD7W;FJmJcUoqXb*FF1bNa"=\AiB4"S,RRNi,cP<&Uq5aJp9PKbN`TrA;?>=a)o]hnF@ZCkK6#Mt0_mj!-`H;J7bDa#+H
%(JWu-m`7&#TZQ,IhECgDU8mfl#QW@truCd:p(iCI]nZREhu-pB6,!*/Io3H^])\eH'5r&R:mc+#q/t:c6Yj<eCpdU"*M=c)I5]9m
%;I,SDpj?'*BMbt+^Ol3i/PaHK*HZ!+FKVkMD16=>8jChpQmIJ2[7cl9N-F#5Bdc6@8=k']<`K<sJr;-m,J@8f/VC^Umfe'na,);,
%[FqZi"e#f.nYY%5$*&pmi%,DGO$H'q#Js[p,"EGV$Z,n"P53-$RT=?XL@.lZGkS,-<+4P*KP*(=d7]>@/Jr<`,%EJmPl3K-@R>('
%>(M[8P0iG.flKao18t7e%VqfC>b*G\5dEMRV!\H[jD683U1MEl:6dFE?"KPib%cip+F32&*[hhX,%73dU=fALbon9d!jc?TLYOPj
%P)%CE.+*^<57@[f`J2'[\UL0_;[_R:@i?qOQ-JXBP9KfM2^EVSWQ>=C^q7V`8F!4+'(g&6-odf^5J/7\$YZS$'pc0Yl,fq8''pn_
%3bSU>9N,V5WtL4t(-V,pJ.:Qra7'W+Y*);tP"rH38KE,W]GJYZ-6:7WCo`CZY"-gi,dR\'QgD2h_,I#B.Kr!1WDYcg9sMtLXme+p
%Od``9?ti?hY(_TC&=Y1t8EXa4iV,r7'2V2USjj$pgseCXd)1;UUiirlB-52Q#Z<)=*at=.E?K0nMB&9E6M:niJ+irfHUuMAg+Pij
%r'I2<?gVgbXF(9$HR>0n?o[hF<U!;dX])`L%Qtl[;h\@@%>AO]@4eno_*horFiR#\(#%e;&$j5-*5:>:[$P<F;!8IL#Y&2&2+6X/
%'tQ)Lb4'TTRc93mmF.^SbAACFet>iRRT0AB!?7O^:D^_8FS:-[ibO_E>7c'D-Yb4AlbR[SlEXm^_F57..$W"j4P5K3:rDgp#[HV*
%A"fC0\NsA$R-4_(R>3es/Jl;-TL:+LiWHGnc;Fg-+od0U@a7iuo0EAH+n4*Keg#KWR&/t?Iu@,@]Fgqc[":Oa`'XsD)d.*Z5ccW%
%a6SJ?-,lU[$>jY0"SEaTY)HTu/_SkhU5ZD[/R(]T;?r9p7IpMY]E-Af:udEZ2ucXAHc-Y_?YWTFN/N7-6uX@8e>fdd3n6_B+HU*=
%h2b#7<RcMZE"L2pJoZ_`Q[PYnZrkG@KkchJKn7[jXl@>/mueD;MAL1fBo7XYgbrc<"dQT"&8-i@'4mE%IAo8oNLHtOk;&TEK'Ha&
%Kq#^4N?IAL>3&lXgd"ZB?6duQl"e,?8S+O[1I^-(;4E^Sh5[GQg`*dfWfh4ELocXJ%C/Aj=+X[QE^,!&isTI6Is1M3i3$a(("bXB
%-!<784-%*)8!>cHPMuf>Qh("Dfk^K[)+7*jM]QM5n8J`rr1W'Sh[rhETc-\.3&^*<*fNgmrb-"*.H*rK*^ZXnJ843?@Q8[5G>@0@
%6,X`G3:Emr+AHr82Od$'42iG*+kHGFi*J7Tnq'KK2k@Q]Ua2rM,BI(7$Vj2M=fhTT/(FF+a%N[5#LA.Lhc/\J>!P_q+BZ$YKJ9uo
%L.%:=7Ws>TU?pXUBF/jteG9D<O\eASS8AWM2$i`_$8r;,QX)Xk_M7I)P&6(b9i;:5%#LLa-"#0s?hAl,$<n8\nMFd_Jq>KV/P*Tk
%o6tAp5_c3jIMnhm2Yg;0&A#g9](4@ANKH13KMh?Ul&jV.K'Js[Q?2]m8eDjf\`g!IP(P.jDT!XYR;^n8AE'Le=/RH>Lr%Rmg#+25
%c%ZSum#,!-;C`&"V:X^&%\D\,\OdDj8A`U#inTdklBuF&RdMC19T.`K2K$;tH1*M`MoO&s.OGEql+if/7q[V]d*b)qcoL!7%L\b"
%N$UcI3Dgf(SM_2]h97]M4\pKVd3fY0am=@gb<=@AJf#.bj4*Iu'W6Q#r*]Ur<MiI@<(NJJE6fP%Be/LaNj0]MV",d_MDufp!RV?C
%e&X8/Z]H=n%Krf[N*f<DPXO1_WgttV`F]UXT$r4HQS+LHXRAL1N!/!&gHXD&>;2jDB5p_VkmYssS&UI3)4[jD@S8`qjKPn8bdJ[[
%%PZ^n]3[c!6Vdi1P%dL:2W&:N2bE:8MrNgh5aZTbTr]DSEgj7FaV&R_`fRk*9Zf+7*D.!_?FbgQ7@Ca=@W\QL,E#p;TXKUoCb'9%
%Lb8@;MqYNP)O:Mpb1]R4@9rNo[5N-s8NQ,bgeTLH$Ep%EPkM3d@*N+T@96Yr7(u@/=\'s5i@onRd`b+DC;oApZ?q9\a9`@M*M9=p
%.o3SS\1CoV\rp;kYUnt]#$i*5Hn@maJ^41&eU.1]m<sIg5Q;VPcdQpkm-4Ccp@L:jqCc_^hk'0QNSXK(KX(F0`Bo_[*1gHD`4oH]
%+1#QXC(&[E%;JlBk0a4.HLtpig9Sb_pHIF5mU,],JtY%(75>0pQn/t@:kV*rpq;IMa`B]'D>rdC]3m`+UTASk`<[J#/O[W>H5EZT
%<ULlMe1sir-:XF)a=nE8Mo"bfeM2]Fq-84Q2%R!]C\Fl<p-<!T:2#iL!N;Xh2(eHTpjK:4W[$&K.^VY%4^<BSYmj8D5U^%cOq=Vq
%ZIs7:^Y:"A95l@-NI<t$[/b6K)<-``d+XB?6DASBWO"+WJUlh2EDuhj&^a)YnTkmq[,pml-VIZp2WR_W_oW-q&5mTt3>*\N=6I+r
%0t2f5D6Ottr&tVNS-Df%`624_XUid76'L7cK1[jh-YHi!KU=r:.1Dgl',@52"!)DLn/9(B-8T$V+'>`OP8:AIgQfE<+I/+2Ur<o=
%'Ep`N4Hsk1/;DYHY>2iLjQq8sr>b"hJ..R?&7#L6!RR>K2VuiZ?6\i4BNI,%fF(,_3sMh<k:IXfZ)=VbcYc7%4(]"hdNi:."G<1C
%%ieV5S&uk%>90S`0DOU%(:0a9NZ7';X*7_2&Ssn^>XHV)#'#dH:p_&h/+#I*.U&GjHh2K6N-qo3H'_'gT9$OkK(ir_JYXN`VXQRP
%^oH8d>RY5J/NWom,`AAK3h3D"dJj_#hKb8\^iUbGdM\NT2He8#W;#Xfepb\(cJ#t5+'6RkO1Xa$kJ2_`#&_&/\fW\[Ae;4fIOk7U
%7e)PHWU+k:dg,O`Y0!TGn,"Ih_S-?Qq=NbbS'mWgRq0kVPWaSV<qVS^9+<Of_c3,2THI)?Z(22-H)gPEMen*IO]9?Rd\W5rELtF'
%U(*As(ab8AgosN9'[&<iT\I_YS"&!7M^tW<NAs%M)]nir-E>Y\d>jT@2EFJJAJFu9kG'K"B!d]<bnQuX7#@f+$tmU;@b2EBD+kP:
%9F-_5f]4WOUU<XS/sQAi`HQ5X8>%8(8.DdB2"aG-KC)ske"ZMTmq_n9eWmqD*6T5UM0]-oNj@L0@&\u$n.[jjaHrT*7ZBH)kX3#H
%PaNaY%qNF]^$W>b"nM,2R&.@RZ`nB8j)XqA;B7iKpOmMRH%VFc+-.##qu"*h`R+MZjn04H[mK[MogT1U0!>Z*-S)5f\fWsW([1]r
%*iLmXf?:u@Cq$S[d"c@tAijA9EZNQ1rH>^ZFSX`#)E2oO>Wg$hkIlu!NdZ$`r<H'W0G*D<.#pjbf"'F"/Daj8)l^@=O'n/OnPhfL
%7R*fSG8+TK@q>V4We[\hJT%3q_@J<'qh*Zj0`EIEOr)>n"cY,_W]N+CTiKYGE)HK:l7;f%o"+fd33"1qJ>p$>L7[<iDh,"V6</iR
%_O"Z#rkkdP`l#WT>i+sIs75IbKq&N/q`gIJY79,70[B^Wj]-di;hOZqgmgQ<clZ5%Yf.<fEqh$QT?2#M<U2&<:df_man^RfgOhVm
%f:^IiiT4'hLmis'4?+]4459sk\Y#t>F$U1)8L$Dj=kp]>"8*CXG^8,;og2/4=Ti+F%c,tDNFeU>#T7Eh=g-5__@J<')aemaAD\d#
%"hdT&<&fbep^QjN=[-7P`q/.1V079QYBR?@`2LYUhK$$<JR4rFo6#QXUd4Vqs$.fq^\lWcZ>d%S?7jI+Dm83UDm.H'b%]bgTM_Z=
%#HEbe!bZWNW7I8Y&thURdn0NaLgjaRBk.8(mN+HjVXu)+ZE>>)Pl7\(ICVdn&%(J3FJ<u[h;i(.H(\b/>Z#6kRe+\Q#Y'a+]269Z
%*WhkKh0e-mq^b!Xfb>^<;_"\&UCQ4UKGZgJ'6d9rjL/5"MN.Q,[Eg2O7$H1'=B"`$78WD1*$#29f1"_eU"I=L?NpBGB@qQYc3b"K
%O_GUU>bJrD7*2FJ#^8cY"T/sQ>S(E";?3'g3_3.P^4st(n,kk]W26=E*U&[Er_=*NM^D#i\&4C$ihc*'e]$>i5T:`jH,0WQ$B_J;
%TaskVnF!grYV3<.""Qf$+PFY;!g,&n`etY%f_3dPED.Gn#frX2UqEaUq1-J$.Oj70m8?(Tb(j^@J>1@+rL`?3g^$s--<34/G9.j3
%<&JiLRB:s.$?l(C;:uIV/p\iU>FU)Lj/K(4\1$Bon@^$9)`iNeP+C^pL3cEO4K"tV*hZW,YYIto/mq8RFMq>sX971N#]`44>RUF7
%KO7hW[*,u`AdLT<8A3cK:(%?'"UXhW"]9#(!`D&rc^">.h/&rT<<69L`\+e:[nI1JOAu7n'rYY[Or3=M%)<h1g,uFAB+WH(W*[!E
%Q%su4'esZmp<R,!LUJE"SP$EdmYns8Hn*E]`s1YbGC:`:Q#b%_jd,C6=gHAh'^363Z57Km`UPLu7jVX=6&]NmC&Lmsi^D\s@Wh//
%NsfF!GcP?.@ij*gNB%t<9T\oBcqZ&B`Q/TC^kB^sDDf:f/a;@Qi^\fV9KY7*"qTW3;\I=2M4u^XC&lW\H&>VF%bKm#/-;U,:@2Xi
%caAsAQEu8t;:FV9I;$H8<KujnJ\?kL]tUCb)t]&e^H_q$X#E1V:*Y416DY3M!i@uQG\kH-63\l5mjfmL&huIW/&\`*I#$_5ejmB7
%!JYm49PC0Y;_Q/"n/XE?-)cp&G6r*qIo[DHl,/OPbiEbj2=I?]lIoA&'H_HenJomn5;A(?^(M@VIS#tBAX<eq&NbP%T8li3([gNh
%P/9Xs2O6)M<*Ul1YJ2)(=@`Wo1W+$QO?kIn1!MiSdUe>>d:ep2Ym)j!eeq?@`7?Ur^O:>O\?,-X(^&HOeUfrElM^fn^Ne=n=$p;s
%3a+VmmF'b`Q32!61tET,]?$Z-eeQTaGuC<K:EA"2d68;nc<.`*hBa@)XFE_^g?QIl/f)L!CpRm*^dsrP^6]_f._F$R>7UKa*p67e
%")51XWZa<%d#;9OQlc_]/:=Dan9XJ.]8s@@\+l$g!t>KQ7rAo,UrUh+P)$K=bD$p?@Q*)]L8cF752aFKImND[[N2/2KNs)C.4'/4
%?/\Q.59]@sLeX&>@0>!PKhE<2NkbF]<#^"6d;*Lge8j2-7OS&8@51tMUC/U^7r:[oA0e>T7C:V6:/\dWi+X-iZ*H6%o-d>[QA,j7
%cP`haQiUt*M*0;5#"fGaj$=nmfBiDE1;VR'28P#3#*i`OH.QSJUcNt.J_+p^e8T@'UFb'LCgk^r=2`8$!O@nl\iW\@:n\DIop%Zh
%Qa^6Kc0@%,#A%lb0/hGLQ!grm`2&(Ndd=u1L]jJ0HB=]OU#qHuGG'0TPbXVAbmqfT.6<]rJm)n6rbfd*AP;O*[Y5NZcrgjYk%%1>
%jFLO>luTP&=u@4lD=/<CTN/Y-NLUM1oKiOr3Oc;u[K>a9+(FU).^]bs"2D3HYUnckQ:ODpk4%WS^4"k'rBEMH)k'??<?e.WEgq^^
%:4s;tO@E>(dYgc(:P53Y7ngoL6%/HqGMs$TDK6jI(EuT$j0frpB/)=gQ`2aWn#5n.d">SLSt>S1Y%Zj>Ho6T>Cc3R,_!4:-1*E<t
%B'cC^7=bdh^B-Ha\*AVh-kahuO2CMs@M95bFVkN0a'QUo>H`BhH+9#L"JDG+GGRaMDuAhGZR+cc[QLi+7F%<VdhXcB3;D\fG-JlL
%oZ6P4aUZ1:4)k6QLc:V2OW^8-'Wl,K/GC&iP"XfS-ol&PR<i;g\pU<JZSaO:=_E>4W(.jC%%3o`TF7,6P;CsJUWrE@7@%+ujDTbf
%9NX)e&s1%s:r*N3!2-En&NIW`;Xu6:BMOoG>fA-a1Kj.J,'*3_beF$,2EhIL,Z>!g1W1Vn.j^T;3439#crK1^UGJ*2#^*Oem-q;j
%@%cjuR)=1Xf(DH\=<0AcY5JTRM,g:XDA2CEmR?kg5`58rINRatT\b@*196OE7\V,c-<3A5mFWqt+Nt7G%IQ!OZG>s,W@n&Ce>[8g
%l:DoM^`(noU/F^a;%+b@RKuIJUYFFS*@fP'8P<:TTF9+a<JiOLSUjP`f):n&;So@+Y(c\ZBYg<hLQpq00Ck`bq9T*6n,N.^qV2&G
%jj3qs0E:%lit#MsbMW9ss1lI#roH@MoF66Qc/]\%B5rRH$inYSp@K"sZg$![Y(JpK]FucMQSYo&<7;a;U7,8spgmHGs,]\%nT??e
%Z,f^F`@#FeDX;a7XdiQsTCsCf62MmtA@\_kRFj'5d\a5P+$suoM%as#0nt]q.\=\ZS#_"j/Ku)_)rk\82F4&`FVM:'fL,""9GT$J
%OWK/b;R(6aV>1CrB+;?2k%R'\5kI_YH'-g((L7qPbucX]b1lrI\M=jEBP_srcT7?ULR;DrYf2^F'$Z:_`9aF;jP#j`hM^@bp+$Z!
%fU]j/CR^7PHjDiVr,GEAV02h9ImqFC"hD@%+#N^B5:DBpO(g-eP9Dj\<t)@YLGG%p5Ran`Xbn8[VVlqL`:i>(mU%s\?j@/:2.mN1
%prn\X=kX:b(<*?mqT<*<]?.<NCfRG@MtnDad7lj]_cjo?$jj?=:VT+P%6pDfrjgPSX3k1HFujB4YEdT0F+nadPZZg?E]$ZkY[!b@
%[0(5SmW-L2J-eJA'6jHfX,12Y56u[7N;TD\q,M;'M^%@$V:(uNWo&:"NUlD]Q.e\lQ#sbhr-hoprje3i7Ci58=o-mrch\[t%C:6c
%G9Q;"W"TY84fX@"M'**;+Arccs"C;2B6M3p\VGAQ`VTsf4)dm`roG"IL=UXJkgXEDMEC3W5IFa;r?)Jg]09!XbFOE$n2"A=';t:4
%q<qNM_&&>&UG'-40,TS==Wu[qO1ZU'4MC3%ZaCB!g0VQC:Z5)*F/Y7Gf$/j%Y!Q6ns1JXhH&5_ZQl"sP^E:lBLPY;7<uO2iObg>u
%VLd"kfJ^9k-&u`ChGCdH<*3,OYVb^4g5Q88$2*Z?(_h+uf!Y\n's;DRG\r8*J2Bq1[p#:QTs3LnqmpY;f400-V(GgTG:>tu:TS;J
%\4J*qo7p,dmR0PRS!tQ9>f4J#hFL@4G_Nol?Z"LdGD&DL#-8G+6Ze[ocfYi2nOkr*s/Z"[hSHUjm"kDa=qj2;7X]:C$Ia7i=/I6j
%4NV['hA,m$,P8NC\K>]d/jVAno^jn[00ZUI9,`,Z_k/H&URm4t?iLKC^RqH_p)j>(ap8\\jOB:"6,V<X!k[0KDofJL0*U>-62q`b
%<'.OgKgdELh(B:a5B&**?(0HV)12:5;AUi++l7@S]E4X?ld6R/\I]#Tb3sVKq3cau_CN^aU`R8N1)\F"E4)0fCakH(Mo/m8&^<De
%C>A@p/QaZN[FF2UU$"[3AM=au)"G,%M;=8CPr>@C9m8(k5]DHSO(;Q\>fS2tXH3sb.M+/_`clrUR\:+b0#oStVF1[ko$+O&gXC^F
%D:geDcPf$'<PuY]S\m)]q(mjo5ka,\,eX"gon.jLq":[R,9cs/1JtM3?Oa1=MWBqP]qWR_NTZX.(%Kkul5Wtu@%<Wf/9Q.b\aRH?
%?!C<,qMANs07i[.q>"l)Qt"n^7.k<:nKY^Z;Ep5e#b'&WIa@J)Vh(V)6H`Dj.*!Zu:`E36W^2>W\*$h8][f!\k82bsD0LD25g;#R
%,T@7&BZ6I?E(]OpZ0'"GAY+sE<!Dd,fR<p;.@X8@]2IQPb:7tgCdVDTFkP'!qQ\TP8g;4Z`,h%jjnoJ8:T]<+jn*GQ*C0CSG9e)h
%h9gnK'Rh:+%[<ajN:Srl_E/?Y3X>mDaq3dK5,e9,kLodQ4+7:SM]CrWqWSp,9cj:LVfcn/1ffCsfG7Mh/RqamC_mE2nk@#V*s[B:
%IGP<gD?.(Mr?PT^oUN+m`m<W`da#jl:n(@KGIQ`sVCLZ@h(`A&:H&@O7p4/^N7*PjP7rArHBFH2H(9n''[SmW,baJeQF=O5CPZH,
%<H-LsAQl"(@mC7^%W*$/>u9;%6N+g\iEX`JJC$<nX0m=g(2N-=9rV2-oH^$\2>*I71b%\rl@#3>4OMD\<r&^./N^%R*`5D404qiN
%J6i`@,o5DFE[]eWqp7Y:WKe4U@uJ0[$k3PlnX>@[h2qY)=r1#cptk3P2/U@)Q[\`s8@cN=31LRpm;PiYMs-8C@XNRKAJlb2C&t0=
%?-b:9dLPWgQE($u<]$4Xf(1-"%o\25H7D&4%+6ap_b*ZKa\=5r[?cIn<c/1=Q,/8t\-DR@^]ni!lfqM9#Q*XaG`=>E[h!-3Z']$W
%_AZ`'`.7-N<T!2t$L;W$YoGVJOCXP"H1hhKAbf>kQp&Dl:*&Ij+)JHS!d2J;-W6lu)QHLlf5pqM'$?7;!oSdcfO_"a[L!,dacPCo
%<@a"nhu0G&mfQf:#jN3a'?ZVIeDS>*Z7B==<s8,4gl;L:+=*a2.s?]F]-pu_L'.\kFLiE;=@f"P#?6)\_5WtecL"Y6,`uR#7qU7L
%9i,d9$f&o/q9WeM8esRMlO!d\h%("D7km>/5Ojf$oAfc]n&(Jp$M&qdpf25k>E,YXkZ@'\)7[qc@9IgE(u9'MI>:;C:@aEg6oPFC
%`FOsD"/+=Q931rBEUHNjL)Z"U!;.4-AK@a86E)uRE_O=j,;5$)VrRB^)ca$R1ZR,!E@`1^JtW7*XX@f&XLb,8ohE*S8KR1Gal\JS
%<B-XR$Wca&c3&jMX3dE4'E7fsBL@d<gf6ChVm_=/;<a6[[KaL6-8laVrB%,$2K"nq\e*HR<M\2>]iLbK:,*qVd=fj3EN-Q\:N"8V
%BsLQ!o)q_O]$I1R91[010+\'@CiO2ebSh]+h5GR>UAmDn%l<5*!r6*CXl#/F)Co#*q<@?dp>`U(0FV7Lfe!]BZD_L>kYOMM7MSlS
%5Ucre+_)Hf:l2Hca2lmf4J?4d^&Q03?QW/@@dgp[$s:LXc1um7/i1TGG2Q1s-D@1&$:0L7>M6?cdjWl6D`O)5d^cHd:59%3@UBp"
%m+>#1G2QjNV&S-,ct2cQ:kW5Vlt?$X%beJk5R>QOi]7Ze&)01'aWK1[\j2>@\7Ln$YC3m=$T6YFN3gL%9(RE:,DY(Bj:[&BYg<Jg
%'i)kYhIKt9T":$AQqmsq*7LR3'a^hn$#tADcCKblLWb!)pCMh9*m>@1:VH+]1RqhQRd:_R#(]R+p))UQP:YK:W37*amX_N4F+KEi
%'KT\Ba^M_uOAG6ucHkNo$bpR'CP/O#BA$f7T"oU5e"nV&f:4)U3B*rC$L&=pWrl:'GC6$*a348:j]&mpC8b<l@_DneS?Md&fkUW>
%T]-!*'k##G,5[4\VJSt!>uP^3:h7XGn<CCEO6^+4r>U8H6G2a4*.oo@o52&up:>p`\\ZYFbu[PY!QlC[K+M.;bQ<@SA7D$5>>[er
%q??G,PT?a5o>%R>cmS9;,#@\!V0STXT85-=;**bq<Bl$_*>0':MCZm?8[(oZ+gO#$bl;CC5uuDAiKeEbVFe7H)?0+V:++lQBdd.5
%AU\d"61=0Lcj%OpI?#=#h#g!MJC\3)#7?UeY/-^sZQHU`^(/2uZrXCc&A]7BDDR69'a8Q7Ug_Dk_I%h>5=ZcC+u&AZTRt,sA-uWT
%aop2].@W*?Jlj3T4R1%;Dc_bXp>D?D4_gp78dsd#qG?"_IK];7/(DK]ps:sKTGmJ:U(A[.do[>C[#4h6D@X:OYZu;oT_(P5".rj;
%3=s:QMa4TD((tONe`@"m"f;mhBU3YPkj@>e<G-0_BPE*?6mI/&LN:?$DJ3m4l\g#(8$0SccN22UF:([/EJl&K5o]Zo+NEGX,UUfD
%VE6i<_I2u^gm9!62:l:oCNuLk54jIT.f9:7I!OC7h^@S`-/a\1HSqRcD"HEf&';O#p@np(hP!OJJuaR\iu=lF:jDorO$,efT\WFI
%;1.jR/o,=rT=??=([/aiF7o?N?n\d;Jn"i"8hS`_(^6;l]KFs[0-C#gKr%-a"3L%;/KMp@/\]nHXcB*&5dc=?Q/S8b#lW?;I)I3@
%q3I)/4#FVlQ4=5roULt-6^(GO`!9b&[RFE-.fimKrro/U"Td6$S9"b5LXYB#mfCpD_QPT1s+rdkKocZ^3C:W%ZQLXo"Q_hm/"UEl
%8^F$r#=EY8!I$6IG8ulg3R:D0C-_:':;*Uqk-mHnKIOgC'(W)m.JCdEJPHJYc],WSA15LQ?=XH(jZ+7)QIC0EBnqbeVKeKI446u=
%1'U[h`SuJqH7aSU`/;b.^NXXJBQX0AooqR!rj1qtMnhtJ=`pfeZ)^aS?[?<lrRVU0WGm7Rd&9;jGXEha1PA`m8ZhN^F7Y9MZ,4$T
%?YQ,"TA.m-XiYI17td4jeQNNA_E>Lt<*#&1Sg^Fb#Z56uoUPskDh\\rggcI_[fc6,7h-1nR7fdoAb4Fjl8Cg_R;7i8CI0EN:oO5p
%M,>TVeMZo4CHn;DVjQR46=X;\nQ2D8f$[cS##@OAU?Q$Ics0O6gWp',,hKH-#%W^LiItE:4h<+KmDirk<P9FZ4i&$5a@a(`29Lgp
%)nu4)1;Y%^aEHM#f6st4W7neolsCS+)!'G&85R8`'!q*/^e!Q(T#T(GOO6^??eqpi7j--i)n&"O>lK9,q>0DimA_JO%B#?6=;'3K
%"ik[SpgU8'Q-\>3ME+KZ^t5Q_5,TL1H=U3^DV4K-ZM2c0JS5&qRPfN_F-@@fA6X3[@j%UW%h:c:T7\&NisA-5@!gnq/]JB!ecogE
%Dm!&I@/AE\`j%HH'$1>Gk=pl<J0A+T/@.TdpuN$>:7e-7np0MW.SI%$H!d)6bc[YFfEl@]Ic,8?;Xf7IF;TR3q<Ac1k[B&&X.sJS
%Q=Vt&"14Vr*@c7b9_Xe7M>V(Z?JQi*E:8Tf0GD?,Cc2*ZHN_]`'"^Y!C3V@OO7#iS7lOE8d/dC:o(76)ni\2jFh1*/C`%L^0TQp7
%CV&6Y?&pB-#edQf,]ZXU)JI7l@.L*J0jNtT<$-UFZ?(%FYbGZp<sqYJ:Dg)?oA%HB+,t$,eF*XNdflG&e<^tYj4,1c>#9\#Ms&)p
%rOTo;*lHr%l@W8+_n30oN/6DGiSE`,-D#r."do1Qnki$O\f:=`ltb4N""h341.a1"H\fe79G1;+Nc5RI86^o5%,WfC,O`_6D-g)Q
%3p,u11)"a#TF6,-..nG+_&Y@'kAF^P/7rlhEVm_%a(&?%"5QSF?;WUbbKfFFYqHU?B+4IjF$-(%66G+lm61.XkC)<uEfC#'b,joV
%4DoZo>t5SP;4LE$G)%9jH:*s._FR7rARbe,ClNF/^A?X8bPa\J^,]gN1TaK\oBa"u>#c[e[;a?si]VMmM+fG2OO^V.XPN'Mn`7,d
%>cBFB2L-'q<5NK\J;9VJ*SVV>Gdp<UmBd/g@#q_$I1uj0YUa['2<G$9B"cJ;heg%g1]HT@P'W2<_0)nE:][-qF:%GAcj9-Fmn3A0
%ngr.nV2+4USd"!@N'5#qi1XIc[:N?gLT6(@.8bVN.FEqqScKmc=5<[!!^&0_U'7+u"5]=h=0J2!hK9jj"*lh5/rk?A*Msr'i!SsY
%TM'guL+9ukV;89<,/StVUe]Lm#S.-6[hBA4_&k+36Tj"%fJ#ES4N^`b#PbIj5'D=MF(#,r-=O88_%t7;/kd]Y6"c#:L+:-Zf?p`/
%%^TGB`&Ceg_Rr9]\1,_4PD9J(NrT^63G(tB#k06?Dc?`Yk3d:96Q"`Y7\r7DhqRLV#g_ZoHZ`c\'Q2AFc3Va.M=KDS_'Ug(k*mF9
%B)ejO^sReF6fGl::jFaaU'@lccnSt67&4p#%n9dRr,c?7I9\lO%)<JLG'Yk;YE"NG!^**IpdK_264VT6X<*\1Z;*8.pn/*'j9-Y@
%84*G(8&XT?A3`G)WDOJWX=6^6o="@f(hTT,5W6VmYIF!22m^5#d=ds$\.Au\G.BTP,5KKR@o3RZd`j&R>bF`KkD&P1M[1NC[q0"X
%UGU"(=o8$!\Pt*"o^*.?GQkMl8\4DAVO4a[/AR1GXD&1scN9OlYD>gJioJaH2F"oEW$7q$')E.f&'cQ7c?`G)eE)&bq<1)bW5Q69
%dPe,p0Z,D8Q\V?1/8$cfaJ]*WNoR]`f^q84*.,2jOJ`3/:P$.]T9>:8L-Tq3"rFc#9JA(QfdbN[Do$6o9h![WCVfk!XV]l8MTm[g
%,(<34CAflt0mYeT#Vfi$N=e(DIqK"Cmgb?AI,5=gLuND:>79%CU*<1iEIj_DK$h`pnHb[+HY3fj8&Prm8i;@>MG+Z;N8p`K8U#7#
%K3SX\5Y?CWah=(g(Gf1H;K;ER)ulr,:hkA2G&D[,KOUi,BEr)`@PpCjWP*`3#FHnlL8qEhdU4"gf)VW]$q*F%s&qf4#F9&8*&M%g
%UP;0V0P^EH*7q%JNs:UZQ5C7fqulo@<C`\_#<Hl8qD0sK=M:?D\%joi`S5aEo;ZKNi!&1V;RcGXqU!UP@XIjR:l-h3Mdl#mKABR2
%!>RfR0o7X[n\ISu,#bcK"Vr=L:F:SmXCqW0/VrDXVa-I#A?siVdrR@27mY8tP$0OR+L"G$A<_80ZDYDF^XuT;'A-8OO?USh`MfrQ
%h@@bkj0DWU_B+][$GC8uO#mcpM,Qc#74"R_`GhMY!t,&K9%fq#(DL/L+US@)>`'7eNn:]r2;P#@2?1;-4_KoUfh7o$!]>XZDH!#p
%kjfN6bK-G5e_"\5`1/@8A:.!1?ruP(6Frqf&b'F3M>YuRE(oQ]*)XHF66j]e6BR)=H%,8YRcRjP%(1[#Rp95,0^\XP.VNfBa_/8C
%Dt"*f>B`TZ]B&'gXIK]B<sg/=Fb.2cU`H&/&+n.I5D&I(lU#&E"OEp[T3%3;T#@").9N(#B1>[tp_eh`!j-*CKVfZjHYcgir7i[`
%r)Qm`>@g-%Ed&5$;IsZLOI4`X]O2g?;>h,GJb=dH$uN6h7'mI8f=\[Sg';;;PN6C!TJc>i#5H;.fn4`^\=T"HAY!Aq+-^^YR@fUm
%R8)SNP]5Y05#>gYQT)Yc"WAF3ec^ME2s;U)Op#.%kLsbL4oM8D2X$a8?nr^N_=h?JI<VMuYF*]LGI2EdQ5ZV#$lgH[6=:ArmJ.'W
%l28d2\;G5!E4GfRli1Vdh-)I7ZL,AMK>'^d#UJAW*;>D:Pff$j"reZ>:I:;.0m"ERUMeGfGQ,ULOXo%[qXiY#4rd-'%:0"E1NVY(
%@U@(pF5*O7lq,tF`OWEX:BqpX7Z10&Vgj$/T8ZEl9NQHQ<04P6\MFq!C-L6Y.#5n0<=&0iLu4cS6^Y$NWmZ2N;l*]BpUnp=(kL>W
%@n.GYH*?7q=2$uYWi$uN%=\Xj2:KX[!A>q#+A1\RAthn<0'0-$k#"mQZmaM']$'ma:-5nb1Xo@kP,k6r(IgiIMkus3Gn3;#m9R(j
%rtpMh2L]%8<05D+]O5nX-7#FI\Pu!$dG0$<>u9L"pEtlNMI,IEg7i=[<doV-n9nJ8cNb).mR2lr.Jg8aZkkqSO3Li(W1C.nNqtA$
%-#F'4e5J>T7fGC4.>Z^*2O:IZm:h=HY)V#QD6HJ37nH.D/)-tbb)9s!fI*Y@/3e/h7I*\i/f_j"P(c:P=s._gY3Q:oA2>OZFH7EU
%q^p%PZ8PUd9]hbh8sU?1[Ci:a5&Ac]3e\0ADUZ45.Qh?YFU.\-cA?N4>=LrBA)i&183BNh+7UUU3e@OCB"d@K[)R7mE+^C,m^h*=
%\@.GC)1eGefoDV^W1)8E.pY5PV(FCDc8[F>K4]U=+:OLoP:4R&cU.Nf)A%).4Gri7"c3(S!N6q9e]Z-e!T7umi5:?FUj!2@*rVZc
%k&W8+]C"+T1;\i>g%?7pKIc)ga*%t<,@$YP[JM\D&?\HD+8>\'e_HB:%D*EWIo=:k@J`0Y:T&NMo?#*Ioc\W,K^[>[#ZoDsmFMu.
%&YR$_V&>\X0CS^Em]b1Vb=q_>7"+JlXF)]tkK+,+Hna!_Mn;Rdo3tU^-apbL?.EsK.I3O6h8`gtc-fUPp2kVWKm*J%O*MPX[hURY
%8ZJ?uM>Gjr5+4>+c!0E0h$Lq]c;<!!=/1'&gF:r?]L9O2hV\2,WhO6\5E#4FJ!,,9CRX&M(2&G-9B@LXq`F@IC(aBn4<'c[a_kV%
%D/sC4HbDO"3K%]dH=N/&`S+&N8khO.G&$kVlH"e)[J%8VaXOZbj>><4Fs+J^domsS4RCNiNq"ArG+-B)Y$gE"A'PUR"$K<WI.=r-
%FOGF)3k&E9/N:*;X=:SrrN8AVZa"/eNBM-^$3n5R^=,I%`rc6Om#%#)3_3gUBlS@`MND=DNZC'`nrmQb5kXkuG'6*"IR;cYU?7.b
%:8-7YEOBmV\JAm8q.c.0Ojo9uPB-&sjSFg2;Q492Fhu$rY!pjp2Wdl>jgigPH>0,'WCIoJ]5YdXGZ7MM5`8%u>ri6XmOcVFP.])\
%X)s`Ko&U5!e_fmJ9ipZ8j3HikfN>kC[-dCmO*[p]ZeR*t,ff=U[=@g"MK8*j<97:OlO)!=L"4nV)kaU^[7G(\nCrLqr2OK`O&>&l
%^0aiTrH^)X):_pI6;D$Cbc'):.`(+nhb\5Qj(7OA)3s&n(iVUFXeQ"sXd-E]MMVU6au,m_C$X!fnG1]tLZrUC4+ch?DG,:l*B&?6
%:BtX?^b0-T\7fT1j$6qt*K3PTf^/`]9HU4mJ8_[U/_ri71\iR:7><Ghke$m8-';>@DU&a<gFr3sPqkDX<q2R6HhsPRUlom]Dl6Bm
%emerX1*#n#WS6U#B@1niT;8`6k9_Xj4SAh#G_<@Uf=ko4g%0cm1"_m?3VHJ6$9Q,ZNdVX6m;AtenN0/o5ONRY.u`,+^+;h+>:bi)
%L4<Qa?DdXU&HRN)X*$)AhRE-iQ)n=CCK#USrhJm1qm"8(epcG&7*c%b#9C;N\aY1B!EQ"./lB9dh0OH1YX`D#UK49\2;F&j,l-*U
%L-\]%\*LO<eP/oZ[MP't.o(L`24.O@ejIq8WC[f.`HY>Y,NgXQhMoa/be[P)`m-bl[^@JJlp1r*Hk3k%I&VHUZp6Q9C<33($>\g!
%&0H2,7U:d\8n7a-9J/_T5"!gjHFWZrn@"/b"r!F;*GmUZ9FSaC"J&r2IeFr0ic@S2]t:"bf_^j.rh:%;)k)6/^A8?J;cH<h=CYbi
%V;i#f;@T?U/nf%=5279,7^o>2NF,PEIu6kU)UW79f(A&t>ksfqjCg^taN'0U^W>$^,`d>t9mC&frT.,<T\,.bWO75<_!edd2jD@k
%k`O?Pg#ALXKT+d?5B?S*899.KASZIuoe2AVoguLmegI-negfVNP:p+=VjCI,#ZAPtT+@/j[%Y=hDn[;h`#(PC=f8t^EOoc)?&AU\
%e+.agW"%&&rCS`$g<*o#Uk@Khc+3Mj,M6jd&/Y*:h@YZ@cu;)fm8eahcd?X,^Z3iZXf1EB!P!a;b1PNIT?ckk$J`Jc9lpbdDpfZm
%ep\hcFg,)$T"Y?><G]X:m^j[S$A$[o_,.4;RAA4goMi)5jgmMiF2b_UklP_>Oqd7`f$#aB3a1WF"VJm/f]>Pg%@Fk]h*sXhSq:63
%;H/;OqfEW;YYWSC@@n*2%q"&C-[p9-r9T/d6@)le9%X_D3LY.$C18(1PokU&"WkeX5X+FD"ae%59*2[cSoR@:b0G.kOA^N>?/an/
%eDV^?X&#uGU,M:P&ujk=n(*.B]]>i4jS@hX%4L*uXmiX4p:%YXYOJhPUAYEP[6>N*->f%c^e]c0Y3tG"4E&L3I(XCMH`jUdW*Bdg
%!Ij$OgXV=m1D'oE]&t7ek`<FiEQU^4Mfp`48a9PKebFnoF($_[#,q3`Ml=g@UA"cQT&%#"&Z91.TIU[QKnSp(8,N8*#C\)2?UN6X
%UqC["6h5\@-e:@Q`LW%n^#Q)4ZR4.lB%q.&rS.\A^([%Zh:-gPAsZ=mM!f(lesTNM(5W>:<KdPUTP0W\#sn8UGkXTa$X8IB,?c3i
%QpI*T#iU$HG\QR`9eCI,BgNIUHO.eH+iFU#^ZqTI93i's"9C@co1q3"J>j0#0-WD!fLJhlb$2WZ+YL*IYap*M`1IA0>s7i#&\Qk?
%%Gc@%<"b<i(i:P@Fu'5QClK_"gXSjZ8"4-gSV>?7dKW7J?Nim.BN-L^<mZEHK+nQ!7a'1Q_bWol=A-]!(a:"cR,-$\24Dtc5_fPA
%YPk?!p(0rWp"6RD[bg$u@nR++f(ARiY>LOQ[#N]"([GdC)CJXj]:B!fdq1/^^I'uV;p]CM,uA/N6h&*jk>Bd:,;T(XB_'gW_PR&D
%QD"77<*p[$HuRn1nU-_Y/SKB)87X@'R_66GO(caHaNEoaS0GlA30iW]<qrY+j';;94n)Zh#sX0j)[^/#hmaqg1tVg;AEJ;H0;QtZ
%7!IC]3q9L$3Q91AR_Hk1OZM4h-1rjWBY'A1J,2MUJV$u:Tc5l^F>r/61E.o'7).n2-Q>2+j7LJcU/r5tBCf778&Nf,94K<XRi`PX
%+L6^[:?J^&&82d[=auA1EX\Y$h.j)iYt.crDMl_[qF21]^:N!=ac%t!LZIQ7BG!WAK"U#+<XYDV]O&gZq/*TeOm24KOPu4`,&TZe
%ES[eL%'Ms[=H;9e[=b01^PEU>IL.p?5Y4ZWc$dH75beMicu*)4f&FB[3SW@bRi1h>;&PGtcVt)/D[Z](2@VMHB??02gs]Fph$2[g
%GSVQ->F?G4j4_XK:,,*?!8L(7I8u,$N,"imTZ$aF80u:.Z6J=Lb&TaA,a>]gB*('),g(k&iOL:u&8)Mn9ugGMa_(0YY[').9Y;t!
%e-K\4hBb23V5X!?-1_PVY)D7DZT\_1K=KVL7F.)ZFZ"L:NEfHsq7N(tRduV8`T^u'2mYiY!c$1`$P,s4\u@1AJO)AL)--F*KXWgK
%Dl`9fGteS@L"T-=SI,+GJ/V@?pU,]LF1G-0feW[\>Tje'gsH0f`k"2@G8)uU"DcN>Lb78L$H?,*Z&c1u*qYI`:jqRCe*Y+r6f<hZ
%9I"HkQ)"O<m>lQ:kK?%g.qQ^5&c8'JruO#EJ+46-[laGk+7=UDhk$J8p4.(bi;TJE=(BO+K^#dT9sc,eAX+f8Ho$.)9\RgGl=c((
%T.TmT^)R&qkMVO7na:/)]-AE2Q?VNSh#[B=-b[&hY:eG-BD,7Gm`jJoiL<X<l8H@0ZVQMLIDNWKU9ApN^os4jnYXW]r*5kB:eR&*
%J;G:7*(Sl&WX*@OE7\"%02r8BNS)E7#Qg$(C3)!'SCaB8C?HO;5)+gZIDtFWO7Ma;=Ns4Wd>.@)]3Y!\rRme#PJaVSr,3(_7u)ZQ
%`@Zk,"*:$^gop&t[*A=kq/$f;B.C>8ak)3<+#)H[()4QD3=7NliYpq.r=?)O(nC(X.l;XooHIp3)+g,p9W%[2_PogiUrb`B9lti/
%W(kb8g6Q<E!e_aTQUHcc849rs?_G(Q#[E/"''!\*]g^T5.s2Gf27ZJ'X\2dH7#mI"DZc6$3+T\c"C,2jVVt8B*0bS*bp;NrAJQpE
%r/>]!U=%##:UWa_;tC]Tq\VXl;;j:V=FFCEKX&KPS&9oG*n>feDecKl-,;DIqN(A,Kdpm[<i^F;rs($S6$tGkmk:+uR/0kns%7Ra
%`]-\,jl4buP4Q]Ep6'`1o/E+EK(AM@W$?Yed[eoAU6d0XYR4)mE4#sWb];pHQoJ]7hn5uZ@f)u+>E^:e<J:1@lHCWD44@Va.8?\<
%:hYg$IuA!pOS/&51kJ,YFTa;HdsCrg)[=cJGRBp@dA!>EA'F3kQ+[G2a:V?sIqdFAD1D1dPMrFP][VT$C2'Pd;pi+D&PKLk9rPb2
%+3r.*%1O"$/1oXON>H;X.2b""A40Xc9r=63E*LW*Lc.d;f8CckF\CB'?o-Z6`-l4i*&=Z@+!Hc<C1tgcB#RF+m50ue_)#(*U+.-C
%/?)5c0Qps.L]/%>Ra!SQ]P2*)/mFdt+_@7A6#gT_M6fT1_WZV1K@blIeYUu3OO+Q>pMQ47`(^_&,UBE5(RiQW="@aa_"c5TYHsOn
%YS\dM6t9*\rZKSk!qCl@KI-Wh9tbT3q<$o\U&\',?EEJCHn(lNdr`-DSTcKQ$a2XX6kT]W,"WR_Mb6M:9mu\k6i>n+D&O<`E"=$[
%cJssLWXH?doqU]$+^nPP>4R)eFl0scKTGGd\'I*(ja@+#fI\t#gfK;eY55B8L5@%=!)Y-rdC(6e<(gAC;;def)N&)"RW7!N@>>%k
%kYfH2%t'B.[]Hnsm?3^^?6h7q:H,<Lh+_5?e+9dQ\"kNdL-'L:lblFUNjA'M\JFTpS_#?)h5(R*o`?=UV%N03d!YK4/ND5@VLdA9
%aK-XQ/oBK4*NrHm\-)\m7%:#2(J(q@26i,:*[,b&(?[a<C5f+")4?q_bf*s<37\l-WVP,np6SISs2`8?M.T6u=%.ap9TkW&`-@F)
%GPoD9,2PS0d(C]^:m1km`!;/fJ+d"uU7Xep?e!nO<[I9(H(\/[1BqR/nMFs#S<u0GTkFq/eV"1-nUaP"*=?F-(Ka4LmC6Jf'q_J7
%W!GsZ3R)35Qpu'Y:O$Hd*;>`[Qp[#trHrCHO=3r)i&5r8J`X`NiYsa04idh%J*jUZ>SN:P#cBkI02I<Pc1^8LEa@8bFcOas(D`%"
%(VqRW;\.u%E3?54Ae!)RG@&Kb9u)^:3qE-?/,oNd]&LJ=>nKZSqelE,([Yf]"g$A#4h)ol[@>L5nOF\O"X)9;Y3jQlcG)OVnbVjH
%^/H$1[@,+m%^nQM*2[sc?9$+Vg"><WCB-7HWtLQMc^)KG\k+Uq[&Qm8bfH_p=FT=9N5+s]6\N2W-4rM+hT3\5kk*Ac&)1sie%I8;
%*I5.>W0pFF`:c@N4cL!/a=!nI`OC-eIt$B(]mE]H*nNp&m+m/<p[Oh;_6#fUr5E<Xnos&R^3cL@*pP+Cp<DEAonZrqkLf$C-i@2)
%?6/]_?iJmCIgZZK`"#T57>+"R@E>pM74Z\Mbo\/KHAd4.j.hZD<;$s^b6CO*iN_7"g4!oLhlZ#GbPH+,hsL%`>Q/I0^OPqchGr1.
%MV5Ru!51FkP\<ks#uINh[&0-6[1k??(G^MOat4Cd.E8N1"3\:A-9OmV3GTg=M.E&+HCKD=o$s:=rg:i<MR'6F$qNH$67MF,T]'!W
%=>a6L@St#XRE9kL<+d-l"&;`o]JD@i%khnK[$Ii*4b.iBVWpq#`bjbY+0,:$F=@=%^>1Z8.`'rq8dm^*;W).Qih"KV1%?6W)eMgE
%CO9DFU';XpV-geW:K3k(MLf=ML8kaeNac6$,crr%Nq8XSfVg&K8j3ER/Td3qEA^1<@5c5T?l-cX=%q5E`/JFAH1(:(2CUCXWfkFA
%9BD>36_[:#m91PY.TX$&(5FWHb7`sa8CHK7SA_TpEGA)".>mJo$3jeQ4Ng*Z6aVFi&&r$Lm$8c68YMs6G!pYTAk2b:H#^QC;Q5>+
%At*++92sBPZ^DA_-C_m(=m*bk=Oe`!"(8EG)M7^?-#e4&!o%W"2fWi`+`'<o^J[$g:Vq1Xc=75Ns&FkB%c)r8,>!p\!Xj(8\?ifK
%1m&%E-)l?u7h[Ns?sGima6C;df(si0Y/;AZ[l@WXF8A:KLEO.kd$SI<IC0,$[4(RpaGU1N=d&`;HGEI0$]E>6FfN@B-(-GIbK]*o
%M4qU4"cXA\`VU;,(IGf`,_\hr)[s:o&bX+gK!r\BJ&kgjnlan^*0PE7G4']aI)&I.6kqkmQk+6A.U9q%BX'skC8JXj&N*O.1EnG?
%'DnEcP=KGA:eY=V/?V03\;;KQbGCh`OkiPb?:*a@&uY8H*_\Po$dhD%2^o*%6'7Og-Dn)5`q;6\b@g(_pD7Je$q6nIH:TkbEiQN)
%U+!\"'H1Y%*=^Ms)4IqnH/ZC$o%=I08<0\"OU]p&McJTH.)Vgq-"a&iXa6GAV/sU&GmGj55n[E,9ftNhrP9Y(M#"'.1NO<sGB,n>
%pE6N]hjm'!hgO5*:>bnT/>-hsi07@H@e*O,ndnL`+q&6;G%jd*kYl+N]HaCA'jBQn&6*)F\SniYqnqrPpokr/`C%$Kha9\:#qQ8A
%?7<uC^-RGt(N](BqZN:?G-iiC>;X"kAQ.G`JJ0_2MYe#E/IoQ.gFOV`Cl6`]-6R)-]kI:QYU;d1$E4_CXRMGD;&#3`87[F7l@/K3
%C!/Du=]>/HGkG__k(_(pFN&uAJI7b\TsgmX&9c;Z6e<(&WeNYr!d>H<l7g&5L&M0rK5d'mXP:Wo'#)nZVO:C+\Rl:`TnAsDa$ULE
%d:7J!-QkM4Bii!s"P:nEUk@'o$oa$Zmd^e9,B*o;nYf"$804#$<^\"'kY^a8R()"2JQ6NPpk^Ohc!\'K'A]2V61=Rp`0]io;(:BR
%<#5kN@tEeMC=p+&U4SiH%]EOi`\?_*O&!bd'NEhEloT?1O[C9[$-N?cMG`T^X<Dl[-3&;4P?3D:A%N40a5CtchVEr'#NNo6q746q
%9]l*9YL([)F!X4ER.m=kk*,;RBPlqjc*Y0Q^Q2FdP;.JE\=_"9]CC>/n/qUZGB`$%V>/to]K7O6S=#A?cAP'^mPMWR<^68ohYabj
%.<oju5'VMurPNh<o%hiD>+Z;Nrh+)U\b[&%Z-\s_g8DO6/nena\<KMknFlJRHR([S=:o03M<sKqe,p:,9e=l)5@d%j8ZFb"^mab\
%Gn>sj4c^KfY!6ATk!_tA,?)i.cI::D?V)1&PSAeab%&:0O?M18*AsX\#bEkMBh`6=p8[4`+pk+O/#O6:-TW<sGm6@.a;NGs78cl.
%dec%p`N&Rm'l27-<#7S\>qVX<PSP*fc;_\)&;7,#W.faLoOE33lIst!c#c[K:I67XSckV"SB2]>T-fYt!&9&oX9$?f(Si.:6PDth
%X7jn>f-uP1)$!;+Ss`9N55_Og=Ia_9X2Et5^3jq(V>oA*LB$<6r"oCNfKB<#bQ$S]HT>)TP0O3C0V\>k/AW@WCPmIK$ssATE*A4s
%*nc;%_m?"EX2R'*+TPVUC7L$WdN4?+j8PcgY$$rQ?,\nmZ"@:P&L?^5c2Z8>)'kjp"=I>,@u&g;j/PKX;.VWi"kF'EPH3'?b&Z=^
%9N.\2\Hn7^B_^9$:/r;Qn\qo5AsuHC%3cZ7`pToD&n+<T!Lr/"SAKTZ/'VD>(0Od3>DU=+r!]LG)-?'r(pm.1$e:ms*)I>@`DQtP
%KZ4jM;q0:FWqV>2mnRsEl?THW7WBnh18BYjqDH[!!1&nS7u!gQr[f6))tXi_OYtdZp1&F;.kgUHX(a[`j!&iO(JV'8@[('"!H1>H
%qC7rB=dN*5Z0.0!XTZJu]CYZ1DV.&XlGEmj(!&Csb_"=6c=Xd[oJLdVcm7>7V["l,0BKu3q!iJYJ,`5^Pau$2;M)W^+'YZNAMkQf
%E5lXS.*Mn@*dBR(kD@)!Fp*%Uh)DJ2.le';Hm\Lt^c)53DnkN7'a>O6&)3N+oqF-"GMXFTm':d@j9I8oB?<"R==;[`"Ft=4SOFA/
%ZH7B-bmfm."n^92G4kN^,]]$t9P`6gUr_(^b!;I8JEpsQ.PsesCuPfPQuMK5]dQfI?M<LZ4`C'+6HpkOE/Z=VglWDE#[<rfJ-49*
%4r@m!^qliBVfQ1:E).E45OItXTGB,rp4<_-FOM8@],W8'IDTO8.T4&\oAEE<-YTHF7`9W>dhrTg)GaU;Kt6>N.2Ln&F@D'4$tWW#
%f77j::bO+Y$f*5Y'uX?4E?A(ZX2UZ$(RgTFkINd\V.aTkc,Cf_^2BR?fIj$=6''B3XATX<j+*#1U(C*@=082df.q?1j+(t>=0Y9\
%7YgjILM=N`#u=LA471>.l7JK<FC=mW/Rhg%Jb^qS6c/'\I8Hc3UY%C9'9\tOIH'j"r;IWCEh.rUBhX#n$"Z+R$?G(Z2"T%pmIZBq
%Hj!)mG:R)Vl\<it8'%.fqY<DAOT"l/^UIF/S_[imD2_?25ncAI3Xa^-pY3#9?B<Su(rm93GY8<c\s,b=m*dWHrQ+<H8UJYm1.Ubg
%ZqYK7jiGKes2TWZc`\J\T%RbJ;icTQX6!-qC7h63O)Z%/M\[so6ji&gOYEDSL\@p>TD4u?N(E^E0&\MkGf3jPs$d+g%fhtun)DB;
%2bqkPr"Vr?J,KKLT`=+,s7ZIYELuGZ24Mq@^Rt(JQtRh:q5Kf5>#][P&6o&;^*ULVrk_Hnbpu+;,ld2"^\9\ea6OiE^\sV!s-Ncb
%If4clmiT<[^Q\\;rQ=M@rUg^$aNrp#s6AM@_ghN<>;u6@.`FR;+m!EXb,/V4D:oHT,"ArCF$42_qhW`[eT:fQ?m@;?G8e8r')%*^
%YisT-&XU$2qkmPM>?:8Ri@B_bLkbHtc0M:9i&p88T.SeV*#EmK,]D="q;)Hhh;U]\,]J/rmQqA`5?4(aGat.^i=;9oGDe.XP4R9\
%h#M3g\dkKo:/Lu#e0We_aGH7F7tH6SEN-TEFn,7G/`FY6`jYAVoD;GSchM.cR/JWn:!N37/t&)Wc=a[O8.gLQq7P<l]-R+sEXAqq
%IpM=_ffs^g-+Qeb'0XnQ^]U2&Yu%miBr,Y)Fmo3"D\)VU]G/$Q7.W0FZOAAi#*oaS%S<8p@+'`gGlJ$'n;r+1mDJ;\G<@,Ra[:"C
%-DV`:5W$s[,J"f&npJPU2Z&l'S54Z42IC1>i4jNNcpJG\GFj!"h#/tA>h9S8`r3qET[b*-[#_b8H=,e4g&?qsr.k6c'RK_e2AB<+
%?gh,?*$NCl-\U\HoAJ%7'S\a52WKT".k(_1>.07<"8J/:6\j"kN(j?!(QY((7Y>h39XEpU),2TJb?(<[\g2jG.;kB&ri6r/[S5p*
%_E#)#__ol0?F"SQA!&Z9dZbU48hX62"^mGYH+`[r6^8!/@RET4:.)"oQ^/4f1\FQm!nFfQll`,NB!%IQ)5eQiM3uQ!f[5'j--%(J
%Us\q;KH3IJ1\s>lWgA:^Np2k1FuULsYVB5]Tbpmn.0#)+iYDZWo4^o;/iu^nZA#2pjKE^)A&hutfin:TisP'rJ.t!pBprD2*aa_V
%Si=(T1a>Uh&;TIpBfgp^'MU]T!@O-pc:_nlkuEo2al^m8O:H:;JOE)XB1Njjq7\>L!6o9;-,?0.O\"nqT64o"!F:J9Ha>K<5=dBU
%GR1o^#drq%i53Sh:Y)llh'Zko8K%k/)Vplu.+u^2T4eSVB2Q$O8XS7MRt$d$;RW[1_nsuqm?5h?9KG"k9;j$C\M0J%-#qBWR'@u(
%F$h5b;NGXV:m>Uf\_C:#MVq#^3T`n2fUq]4Xf1ob[!?E`/m<E$2b>m^:*k9,E>LZ3l1L:EMfE&>(jo\j*l8Vk1\H(dC"QthS=^?F
%;=2frg#CJrG0F!X6S"0&1c\qEg#aB1"sine90I_)R^qkS5Lj3Sd`YdZ0sJ]W2bqqN7TU\7o+r[Mrq'M8!3;2\UK!p8EoeIn2HZ<8
%rt<T>GpnR^Hglt_nk^'48]0(LM]aS20Uf755(TMPThfr:3&uU^Y$'`FB)XB8F[Rb@87rX(rQV&sOphgZeNsRS"CM+\?'JOBONQ3Z
%TErKP(Kc%SJT0udn.Ssu/Hh&`Y[H2XDQQ5SH>?`IY?e<8U_7Ho`3+'Y$65OqW_+HbUTg%0kH"*;<pI_+1g.^X3`@2Bf3sP^)8nV+
%eWWI[G$kB#87Z1f#H(131b2SLpZWA8B<akoTMC-P>:1_uqDj^HH24[D/NNZrOrQ:R6re<g(QTg<0VUrA2!gnXXrZ=.!E*?Bm-S8t
%kgJ7d>!p%co`+epKm;hjWB6^>rnK[0f[l!n`$fHPXh#7=F5@OaHQWpPG!,F1`GMLf@/0%5\>Ip<M&.?B`48DGRq[ACk'A4B%K3C:
%%1M@f2sjKkM=@>.`LmCOL5;gOiGhm)!D4MSbu'mll"^a5XcDsrQ]@bS/sDqTAmYmTWI&R8<&]JRP#7&ElpB-9.*4n,;Se$D^F7][
%_u`=OkX:l<Vb]ESKcXu:FPJZN[LunhXaT1K3fJI:nmTIcdeams+kTX'Xn3JaLM?<fVIo4h%I_.tgEfhM$%pg;WZ-GS9I0g"Wo\H`
%./acnBIYnqVoLYP/Q%8oG[+0PF!=GJLFdON,E+6O-R:^meQOYhAco0Z&hr[eO='3U9F3jReA$#BomCR;1mIHY:_;EbO&d6?%l95C
%-$R,;m37KmHt#3"be\/2p$><PS_bH(##S=EfgecO$,CB!Z0([od'WAX:\;USG1k@TB4I'_WY9)FLgtbWGoNd2N^+7(V['Q,7o5'F
%3n`mtP:)DQ&`%&"1/*%W6.&U4dB&/f+Y8e<^"$?u#:0bKVKNX0+mHCYO6Z%L9=Vam5f@GVGPV4\cd2L;2tQ_Q@q!*clM&WpPHX]E
%j1[-rpLWp0Qp*.4pN?;R97;0a+aj;\miV,nF8s;Jk-Xi$F+.r[0'3Q2Hd72s$&F+G'm%=Hc,`2+_)0#Ip.q,\a5i5MDRqtHHt7LR
%FZVKEr#3J'm/>-UpZL3s$9sEDl]WD:GH5V*l\dp3A\jMGs-dNS*4N,DT)ID^W!"X/Op)C/DS3dVXYX`lLmTfiG'KYm3Fs=h>+G5Y
%WN.\K\sIE&"'D&//4bpbjeuO=J,5q,eC8/PO;DV7JLC_RMR>>]S9$t:P-!1da!#5h5ar,>Br1l;j*edjajjgPWBiF^&5$Q:k0]pJ
%MfbJ2Cib,uG4H)Z>bVr`K,2aGCniBAe#AYWe5h8!h<lSYGP?QKqF'<c7ZCc'85af)-gp"SZ*q0#Ke\i\;j*7'/LefP"f2jl`&'s1
%.\N:e7^DB0+S`.&i4:?G-h,`5_^,]tRB7c,.n<"nEM]7.`:!g]iB]EC#XjSSg6?n-I4>3lGE)rpki)$FPImFQ[EGNR/r`aS@Og']
%)=aD`NGFtAK-+IVM37<G`AacEaG5ur3LpLZe?V)SW.hg>Cb*r;/DoUG;WmlSON^EaU.JicQ9:#$-<[%o\?W,QB_La(l.8rHUN=]s
%lkS*<hj$JbKSM_E:6e'/=t#hrk7^Jq=*oIW8j-@Od\4ST$4<9O't31*@V@4]-R3(mK$lOW_hU*I(#sFhJYe#h&reG%Ye23QTEerH
%/2C-,Zm%&Qr>%d^P1U`lLHFrH>[<5F'OHj<Noe.g+CNWg!X']]7KZ36r-O&s*!nHuUC"9no5ZEHVN3V.Gsr:4Q6Ye7Z2kVs6ub!q
%ZfX3H\*eNOaeb^F7@;Q"FSc[;bh\a!j^;A7bZH*A]bN&p$(;78!K^XPSZ^I+9`r9>+*C=M#D'mneq@&S0Y(UaJsrd*Eaa/9.;m#<
%-7'sE`*]-t*V;bZ.@Z:jMM)BS**7.c^EWMaO6uPffJN_XR%;6c$>F9pi&_\e)Ms@'Fu6Hm`Yk@DG;t2R29s[R,(p7gVfhlPp^bfo
%1c&bn?fm>kP8kQYbMR_%-alVH7eO=lq,9TEm<O3ZoYl3*Ks*.V$fA\?gLkm5\8P$u_^bJhQJP]uql9S(GX&>#pO2ON]=dU4pPnp]
%4l:JRa.<3$+h[-#2q@Ir!PRfu='bMkj*f@6n%/*n`I@KLl!*mX4DDNsqW_Xtl/Vf3Bm_e2mmd!u[ePKsIQ-SbXT,nrnErhpE]7<q
%P'=t.-iVAk)t`8B]fK-M5J(4UX)!6bcX$N34+CO-WChY>Z<-eckInHZ&\us5g%M0hNQt5;@SfEQj8:QK8g8jF<([?Wj6akhH;#q%
%HYC':--Ih]HAY,GJ;:"o&^dR<_Tj7[)-kXtWl3Pk6oD-9kGhNjdd%Em^SoG-I2MdgW.'DPB2C9&9@K?ncr@NP),KRNU\=Y)NnV+?
%G(f3eRain*Bk9aWZ]tLUFgo)6>!0PK"Iq3K(9fFUZ,gHL2:"R%!g00CGE%f^CB<fg-3JXX#Wh7.nt2kL]la_\!n:7LYHG$>3*#s9
%Q,TG?8`mDL,o$LDn8Za-1*%g$?dqi+E;cfR8H;3UEY]mVGd`D[\aF"K!JN$pk,P^7'FdW)Arm4f*.oS4(ZASpFsDXh"Ogkb-0aT/
%<16,#J9ELV(pD<GkUAh2MLo.J`HWNa\^h#rW)FSK^#qU["ohZ=d/DA<E:%"^q4IYqs8;orhuE1qIJHtEmbdutn)+07j+%#'s7nlu
%nA"tn5JEd'r^'<KqkM,.W&2X>CbdsO'qee>70c^c_!C8T!B2h!o7h=#^)C:7#h%'*D?dTq;%5K('Ah<QFRTiV'qk?,>k0b[27LA'
%JLj99.VO5'X\W%dRb\5ZI?(85C3CN]"nragT]X"&XP0&nHHA[a!'0jY9ss?l8lk(NFo9G%1@mYL%HHpn(lVFXjcueu6.[PI02+)&
%ePbfsr30YW3lZLg7hE'B^];iGpmB58h8q!m[9]7HH(@Z2YAkb/.C/-YFc19ZX5K\lOnU(9\aP&cfAW6K%1IY*g*:i)aZH5pQ?Qd1
%gh2BcbJ=(0Msq_Z;\AQ&KQ5f1jnKUCkV(%)?q%9uiLaT_:_jpKNcp'&YC4oX4qCc7jR%,(hCYo3*fQ.!n?9?a$p48DJ+tVH]RtZ0
%7j?<TAR4$;q<]=-k1,r7PEQ5'4sWO/8$'j+\-i_sPqWCF/W\fDP&LK.Tm-AfAWZH#Xt*e@q[[#Mlb9Mp?2+?lKO5g2Df3$Oha<co
%?9E.>b>)[WV;po[Oh&(L:QKu3@3?b`\??$G=TtqJc%JKGhq[Ml3".ceNW(_@komV9i$H&(lakSgmr)"sofhO#X]t0'[u&](>l3&E
%C@TZa4YJ5aiG,4'^'j's\\7=`?'>(@?G^J(>aN$&bOpef7AZtjjgM*QnK!?h`2+N<gFkaDf8X(&\o.N7)=NLKEBCWu7J$JhalI]J
%I/A(knFZ?W[b&@0bdCCkGB-nbbiMbl?jfW-0oBmVkpEr*q\EL^F^=:Dn[HR9[4CN08d/+K?tB<Pocn!aoS66U2&SSL8tQX9f@\Pe
%(P8Z\Re9nS8Wiim"FH1T.4Im6>+(;O??NS2ZuF5M%7%o0:A>2ge?GUY'ObM'N&V?iR47]>'XlP?$VDS?W74WbmtN-Q9UTRmJNQa?
%79d:6JbbIJ2)m&7\\!OsfeIX?E/8Y4F:#R:YiGsANeXS-c"W,&UbDZPhQ7dABGqQKKFbbd(c%(q$_$HL;N&Y*=`]%Bou2^i#*]ka
%"b>X\_;X(0eboqiI$&R2TrBP]T#D[_NIdQTE$D..\Ge0W7)NCLc?0s3!F\KVXkghDQjBhCU4EH.K!#ks"oKqTM>B)10)IJZ-u-_'
%<C[KED7UXbWucO(&>bE[30,[Uc`@^55!.[ZcRu_%Jo=uPkur1#1bDfO%;0JQCEG&L9oP@]_iu3TJ@2i4,K<%)&0ksI?dE&:LD"2!
%.%02!'qF+RXuiUh_i(*_c"D_`7]RFQX:UZ)DO(oV1C<\%?7`tK(iuZkfPDlu.9G)daM(9t'NU>A!E&C"$h(_%ahTY`8b=&J/%N*s
%(ppZ(!j2bI8imHeko2';))2F]Fq_Sqo%QC+J,Z83d=,#b21FS@2sO;D@LKT9'gDeYF,#>H_.'q&$CWcI<gE8V"sU8l@(^)npEW8h
%+HPft@8k:s*\i@^UtAlKKEb2uI]bi5jBrAZCUM'D1e^j8CSU@Z?kPAmK3AQiT4S[85:Dn2(MODtT:/^_fbe0m4a)7LB^3+a7>\$`
%C&.aO?=2^DTD$2&iAWh66R>t^JI`9mPr9[R\RaSKX"@X:1?X"EpaGq72[R=J\>=mGGT+Erj`Vs@0IWC1mtKigduB(N>GOo)caRse
%KU-#7o_%[9lS]g$ICG81`<3ffM*L0?s2Fmg#0MghK],)-m*^4o13<m-+B<GQUfZB^:h@lWZ%DIC?nuGh$0j)"%3#3k1+R0A%No2$
%i6fo#.fKj'NL:dC0(fKiNRA3SHsoBgG(`ca[-"C/&ZU$i,GIR8nr#t775dkT0WnFV%O5[7Rt,cd.dr1@oc[4flRm8td*;l,=<sm2
%lHC1pUD=_+RP+9a#XkgR7MU-Y60)pV,gBC7?*O<'<?c+nQ3(Ia`fB5Ks87lUjO/i"[(k/n)&\a$>>Y+T8I.S-(S@O#6m[s?7]H>!
%`+I5jGM3:E>4qLc3g\pi0gC=[h%7%'&aZuMs1+5=[oJ9Sg4qh/4Ke>MGi/Nm[N44"]a#uNSqQuX0W'&jgC(Xko\3ThaV/Xh3[iCN
%;"*#H,e(8Z&B;>,>\LmTa3WSulJnbE_las9=*f;-T>/qVrRR=&mS!:5:L>E\>b47%<q<aW3Ab1XJ3]c]j+d7=KM"$To7b05TWMQX
%dBgH><9+de1e%sWU_6QD,!%CLUsYn\`XO%,)T:EW*P]7)@?BPM9$<QAlV\lk`s>D)H$3\@2jbLuNoC!)Gr;/b(bDIt;r9XfK4dRQ
%F4;cu(7Z;d.`WhLc?g7ho0)$i6^l5u]I`fCdR)ZapdQ!88pImd)MVc&FY:_r.(L\A3.gsfV;ScM7fXlnC]HoD0b'l'8q^#M4P#5#
%%nJnOk1PICdt)PC:?LrE=>Mj6G(^0gM'mn4im=&I$;#?_WWTA;0;&M6)+M0=lir@c1X*/'PLR>KfBi_B(kIJ18et>ec5+X\S@\*`
%m_M'L4PNVS2&KL.2C@3N+sNsa1;28%]*[uIb-!=hBqc]GcfN>OALPA]/$4=iY!3%UH,J7:_\bG]I99,kTZ;1JZE_8hp9N"[$GM89
%HK.KF"j`u)QkT+F1B4@p7R2c+_(\Gji<TT*<CUtR4Kg"i(P4j#^<`9+cf"@-Z6'q'@>sGU!pF4FCjG@YSHo=!$grUE>q0^N_.I3A
%c/eBkiBCN,3q"K76D;D5].oLZEW2+F>I1B(7\bL`9GQYW5.Naj2#fCf7R"iB#<"rZW4usWEKEpl*MGLPhmFF6NHQ-XEB(tF5$FuF
%BGP6(CTlGFYGMO^"DnZa[lC=WBp:8PItQIRU,uim%\3PYD<><"-RmEWN`p$fef?XH*-<gR<MAkb%hr.0$'<+$6!9Y(HTk]L]TN3?
%.F]KYkXRmfKY3kU!OsYr$B6B(U?^*Q<<[YMeQXjMb_pn8e[WH/1`dEZR-d`K$jMGcj5)3$MFb.n6Of*F76&dB-V+jH9Vh+0lsgDI
%olkKKor<N@q=J(_]?h6G9$F.!-G)XUE0Zgf]_p(jOHYDgM<;gJ>)p6ji0)/8jd6`+1/fI]L8gjOq'8M\;Li;4EYfO-Zq@bL4B9jB
%?;Yn?'Fa(o1lY4gCGk"T-9[h(hT_XI>Ji(cKdq%#`C17I,mt<>!+$XV>$0R;L[pDZ.H%)_W,DqP1Y#n%Yc08j#$IgC@P?,u%Y`gQ
%o*1r""2[DETlW:8om4/_#$H@Xo?*C>/!/=Rd2P'/(*ifjEUZfV@B`%iJQUHMl"Y"a7bC)8Ob],3d&4.na"lY,=pMhen/X<20s)^Z
%4+bD';0Ku'4h6?q@M(e3Q\W3I95g,<;%bVn,t65N:_J%Vf]#<\*"^?X+aRIW?[lRLK"Q\+/`b@V7[FAa+Ns$n)E,DV13M(D`NmuD
%[BS/UI!II/@tr)i>+#50D"uT+1Dn0!([n&WE&(ndJA<6-V;"hKm>9W2Po>g\L/2kq(@q8M02dhR^L]Wj(.H+DQMsBf/A=NOSkgO)
%&'SZ&I,Vhb@3-mtRWq8s78c9h)%4=n&+L=Hs2aYY65Gb&A*Y!jVt"6lr<V:[,CBhm<Putg*BC(#7Xu[t9]7N^4OHWc=@fYlobBWq
%96=L.NmpsM8TpD1P,cCWpajS6&sk8OXhNZDpYX[G"1UsgI3s/+*`2g_LDeS+#c(NAFKW0h&-'2P.c&Y]YSkW:HQ5JCo_$YiY@d$b
%UCJl:0(aD;r7%h1ZKP?2WiN1/`kU4:C)&,Mg;ZU\fHPA.o&]i@hqqMgRjHhU!cJ;3eL8/ccC\:n2g`1n4YLFEh6d4#"8Lq*]K-]J
%I?$84jCcc]Z]"Fk%si;^hE@l71$"i"%u92q9DIR>]K$tHL;bO-.=O'#72N3Ab]&e/W,%siUa<?us,uU`*c@Ne"H7".KQDDJ#bT?.
%_eW/%q?mk0HL)p\H%^k@=HZK%6[u(F8:ou,`)VWH'dP6aG#tH:QC(V?\;R?!^t:6^8eXK,448`3`'!EAWi(Lo:CPU%o3i";E="E6
%\+gbN:Vl#rompYV*b193\-IB(dKI2H\N.E8HNT30+OO:YdS.LcA4P+a&<?1(Z_t%JZbsiAG.K")6&t;m2USBB.,eST"?]mNrj%>^
%)UNhGLfI1h.bh/$:Kc\%7]>:NkLJK9;c*tq6;&YIl[WL7'SPZMB@N>elO*d>422$@'RsYl!J_F>e,UDecGBV"pOue?qS':*&"boi
%$f4KHNocD>Rb=KZ`/6XKY)ABZKRd]]?^17F.SX]IOd>dE,#qrn`WY7OCK%j-g6+"7K1\$l0X7E,,,NjehQ9u6B7'pg2=-t!;.3np
%),lh&=4EK6dZ5a$?>^sRCR1J__DF.h4i^3!jGo-.9;3CkE_qm7E,dE:qComD=EDrqYb7;m"bj/0m2%EAgL4&S`q!2F23a;XUh59>
%SJH<hD,VVDYbVGD*Q#*Ka?D:*DmM^1erj^MXC1a[o.K"LGr%"DA\g?mr;B6C=TcCXn+CFhOE05bKdj2u(p[oES%GWgE3JHm]Gn`Q
%=/80bha[?U"Qc'DqY(pJp69rOLE;?FM`-X'M"ZZTZT2RnldB`Tq7&j\&/5,,84*I+MBm>s[hPCp1=t%81BT?i0rbjU3j!RBY,-F!
%2,:3gm"tC.>(rZ5$$WC&Uqd."MJ4%hiA=(:af$@3%-pBW>\t6DJ(s^#'ojI(,TXDd@Etd'?Li5cAD#OiM*SF0E4W@mg$=)ig+g\F
%1`]B@9Xm'd6^[^r,\K>KNd+51Oiu%j9[)\kB&;DsNtUX,Fo-.+e^1l/(fZ\bc^&5_TK]kd$BAf!q^5;7mkW_Y<+tXT6`*C2QfX,s
%Yk<WV6H\.3;dlc#LA72!f[aIRi(kYurTn`4iV@`O?g?59orF2131gEZ&_k*=M-Ol#i6rdI_7PC1;RafsV&1V5l$tn*AP:P.I%K!@
%K-a"?8/#AW0^^,8*Y)&$a"Ul&[ReA.*43HXU(V])+eM5u$8Sf&Qufg2lQKGoi#k94TMs-&L%8sh#f`j66<O*[88T9O.3KVf<jj2R
%9A4DEW&!?rBf2W<9l<RA`1]?84L8Hc-G$(/5;*Vf\Ul>Z\[kl?<044%UU$Efk3Qn<5LFe)n2264,8C&GlaWFq5m-4ZdPXhE)8I^\
%_6T?^</7Q"i>ukqftoX637?j.eO$eBofGc5.)-?oC0F$<^M@@;.P@WC!a!2E>F=oA^kl!(-_9(.7i(R*c9$UaO\W,Zb<W739OCK,
%J6`/Y\3)^c/BMC]ReZW"R.;,9]/8%B@lX9pTr,q&n'ff.ZE!*.Co"9HG@;_+om@Uo8"M"<Jp`Oke$tgBD_FEr085U,gUNt*)qidT
%G<a<hZZ*>(_qlZP?71VE>!e`68Qo6d7"YhbB\>LA5VtNaY.nD3"t7(g8`C4/CPT.2*`.3BNKdX69)@@TqYhEP1N<%ur/U.._*@;,
%#sBT#"$JF(8(i?V3R0-AZI\\j@Ti22Ee2s@Zo4?7;k\8'r[M"cZ5q/J81catU@RnG*S'MkMb*!;Bha-(Bh=*%8BK!hR]/]s886=d
%h)(OdLS2c-"5s7n7<VY<)RiDO]b05Ul>#nOOEdUsd16+\[t^q<H;*R)PBWW<KLfD);u/KdB^#`,*I7L*Jk&--]cP%F^(dkKHQ2+&
%jnh^QMQ1F)rKST?QC!\W8r5jhnMD3Dr!97)huS%QeICT?#7G*521F/&h8.e_MGt?=#rT>ii1(VdTu?.+mH(VsoNdEY<0(WaH]O9o
%dKb@KO*naDE%\%thhBAhi)5'._j2,_#kd7(+]88Z-5OIB@>-;(8#qe:#pGAp\J_M.YDB-VJUdh=XU^nq`o@gXrk1WDiRbMo'/bq7
%*^@Vo90kf(g5C@E]E*br$>"=mhS5C/I0`>dkn$tX1p]9>-tcY46k*.!/5So>)dtgB(b1!;-XjD=N3N*#X2h^6guPMu9fegQ&=,gh
%cO1:mDms;8T^E8^Pq6J.>djkYkG9%(?3G#6p-13/m??CDV"M3c8R>2^.B\-uhP/Bd\>@6S'P-jGD;O$jM@JDG$(]CWJ61Vq22pnn
%<o._QGS?/Erh,!uja:VU>E`X:)^72hOr+N`1QpNckd3IBdUGMpep.NokHL[!_H)*"do"jiJd^lA*@),!J:dl67cJ4g/5S'3V%6(@
%^USXagt9;W$@h?.3"g.eq_oj!fnsqfKMs]q%$K2="]&G7C@^7dpNb6lBs_;`Hfbn^2=?]Nr9ljUo(W/To?:nWcR&,E2UCSmkKD'X
%[?0X:q"$[58J^"5p#Z2:&)R!b5#0-glQX&7(W]K9G2I`l(ZYbn=GMfJS#)#.-V<J_Rl`9^;2Tqo*hL#^66!n!Oj^dX#sW=Za4r\>
%\_RJ0e):m0:^Zl/6tM=\Qgm-X2DsA[IG;t]ZPpOsnR8%q70ae.Y!qFp>-#eNf]!@iK50eE>$1)h3_er3<0AoX\F4"10$@Aa<M-&o
%#3$X8gZIa!IXN?$hb+mV)YV40YX]Ds6"RfFp>:;,!3_-oZ6EUUA-5dGR55F)+mCa9idA.!K6=mXg?E>V;0jrD'0L(J(!6fK58i*4
%95NS!_1"?.0=Ln]:4.6t?G)(Q?R$PPB<T7_qsM+EE,_EI+CFN\>C(Ll55SWhcIoi,p?^mhIG&8f)1;#l?bB"'pVHZQF&66A=<$WD
%,P1:MI_hlsp^<1&m.0M1)#QWKiOh+sN=d>2iII0rDUOu.>T*d?3kSK:/BmHY<qK.>V."s5g2$&*/Ja=c#B\oaKO5p$[La2\^&CG-
%bP<3B"P'?YHkFUg1u!4pG(N+[Bj[PC?(t7!EIpf'.PeU?C2[1d6NIu>7aXdu)NaklM9c@5ORNg#.NI&KY%EOC_c(SB#aK#W`'Ic_
%C<\SZB%[0bThQ?Vi>RjY;"o7rJk*cI&pd0uEZ<6O@==_*5sCfj,:(7h3J0ZiMYsRH]"["\83<2,Tat>2=6+!!_)m#kO]l9K1_2?4
%meTd[509H+k[L@[C$&jm;+Ys`K4^_=;o(C-]n1QLA/q7PO9,UcH!XgaVHSKAi!bfKW7Af]Ap$EK%b%?e8^>p<8QGWo4YsF5_qNR]
%MM4dM(^V'm&#rQO:cJ0@MN_l6[2_%b8&EETp).uTN@^`oe]%?"_$H,CbLlNRAF4(I]-_&XZF0bf<8WLrRU@OE7<Aaei<Dd#bu.9V
%Qu/X\3j[MFNQA`3*>6sk0P<8g</8\'iW%17TkNsH1u)7P:du"?iBeao-.Qjf6j$X=beWMTqU0Hr*K9oIjN(Q"Oj#`H9cb5uIG3+p
%7Ds[Yj&=:-_/Pp,6deV<r7'4:l-D]H#YS<"S(j@V%c1ZLA5pm+`%\2&l7W*OhpiI==e1Z'<c4&a4H?ip]3P%L!bRcskLri?3X&gR
%KGl:<&^c'XNHS0&X0&(S*S5RS)gK9Q[l:2g$BZsm0AMcZFO_K#%tnR"1#fFORSJYgplZl0S1Bs'F-XY?$RUC4aQ$-@>KTB%_kU<C
%[(/B&BR%C*S7]q>7C\#<cQm/>YI<?uCnX57WR,Fm(Te^?D9dg+O/"*\g"Ca-*+(?+Xc#X608IBEE3,%k20`AgKuW/5O?pm;7.35[
%me`1ja!%4I=U:^"iL-T85"mY9,`OE:_g\U3[2FmWcrp#mCiJ!7Xug:g,UGDqAP7aYmE0/l\XZeM8JRBMAXg:\%@-nDZH^Wn$rQ#"
%$=\&iUSTC:'ObM`2G:H3Xr4lC<;5m-l-NMR[/G!BK\S%'ACV_:2;uGQVp'=CljR8^D.&$aM'g%)&J>GY7!-;n8Q*e(gdJ]ZDF-qc
%]LdS8_d(dL_J^&6&`4]nFbCF"!bN[>8S-UegNP0)Zd,W4]9))qP(MUifRUOA3O!#sLg]a!j)-q)!0ZqglBDF=&etH?SmJo&>nqq?
%7pLQ7Pq($\$HdVDkGPG8.fM^tOY\["T3>ss%s^>iQp1%Ll$GAScQXJ%P"<iG?'=<=bSa^:cm1`+S\^^]m0#re<NmsL',!=%hjk)i
%fN=%A)oFooQg/UA&X=?%`lj=-:%E^J"85j1IP]H[JGuMm)9G\bR;2AM*Ep%\#boD'ARWX;I8qlW&mL?'\^m>>AigY)I+='"8Y>,O
%md>ue,gq2\5X5oB7.p=RJlc>&-,O8bYkVm+LH0&!a?na)\^ho&V/,&r2(0$0BQ&tl:Juk9d>:Ht'd6CXr*HftJuFG:\lHg;*L<7n
%Wlh@2HXc5ZoIZd/"9]sn0mf(j=$_oH"G@gK"BQ0'Q65bedCdl.>H!R]2.=om@hB49`Ie/,;(?l-*^9=$niIq*je4E/5"_CN^d2uN
%H<H+FOfUb+-_!t]7C/M+Snt)G<3nFR9fj2C3s`V&3S@:qf6G]15:^M=kFm`)?#Dfg<VMsPR(>()K(2NMEcdRJT]TtPL[$<AVhCUG
%o00Fe/HjAjbsF)5U<2G"G\!ohpi8Xs<)m+IE,H!>XQCO1;A<o,IUM,3l\'q!D'5mLqN04GGYL&4Rm9h%c>j9s&ojsg=HeM3OcSoR
%.n,c'"X?tPZ`eQd:>1!.(s<VQQTV[i/l8;_',.Y:4ci8E6Pg0R-4qV5C*5.#a0K61aTCI4+/`iLa7ph_:?/6_]/rfW,(Dr'DE&7>
%CS)AqD(-D.'fGn)+gm"Ui)`4`r?b2j(BBA93E%bFa'SDC/6i+c?!Y..8P>Wu/A347`7J\cql.R,glgad\J\Bg!/HE!o=S7\2rAC]
%g@p<M:EpX:P\,sjTsHBX#q;n$YW3s/D5]@Z3c5S&Gc9@g6AQLS8YkQPWbg\<F<RT(QY<9U,653OJ_J2^AgR(EhFb"c<qqE+FgZQh
%8=C2>_#\j*XD"'S22$iT17$P)KLa*cC*NQ1<uOoqn5YXG$:ujOic$GFKSS"eSr^N1333YR"\F\WEfMk3#WpCAZ/*s?^6Z2Sa2T8[
%R70uYH'9-*[<2O"(LrbOl63.OE2rsjTkC9Sp8qZY<W8@J[*a8L14E50glZX@diK2C6C0*h.b,Mj3/Q+&LSQ)r(EQ!UMpRD?&BDAj
%ZnTQi!1`9Z&d]lj8X\>e*-4JrVBL*A\7u*?Qul[J\3Q/^cn4"[JV0:2%($lOPj)8o&ln2X)7QtiC^]S=quU;9%t^1\@),3l^j(UH
%bjArMgB6dsrJNSFa2MJa$O?Y[4S\coM@"Yd_["<%i]j"SjC+R1O^LXP,>9O/#1qJMWjq9!:HK9.MWXjRr:;+YmG[+^9_F1leZnIJ
%Z,Ka/$k<@t)!MK)`_LMpr0tZ&(Q1%1r7\;"QOC8Ng)T"!eG$iPYkX<N7@jSrH1&&M(KdWQj'#6G^`'LhN+V;bj[qqO\&]kCq].%4
%.qZAJj^3snq!f]<Eea^7g[)43%)B0]n4BO(lFe0Sfse)u5]@VS>3&q#8\F_\RiS3.O(8%n'c\S[?#o-FqhWM!WXk0.DX`Su<T;cB
%p@;V]^hY/Jo/,J!LNU(I'1MDa**3ut$HI0DcZ,u*jiC1qMgkPFc1im,I(SKT47[<\H_PjePo68[`&9JRo8&ON\0TbTQDT?&YPW@b
%poPFtH6,BLiJ.p:n-jT=ds7+VnQjhZ6_hNrY[M4kLDAS([nkWR[\:@Ip!>n'Gi#KVBnd,Ap0d)GWch5':al4SmaV<_V/J?;b9a@4
%8k(nj>XPl2LjLc58*Ae\"Z(;nYTOimm$C^Xmq+'Q(B48qf2#tU>9OHo<UeUDSiKpT5io2W>U_'TXWC\NPZm*Q#KP&Hm+?7Lj`dkm
%H1&k#gDM'S+8-3,?3;*)D]Q4'k_D4E,ICIj%iddHQ[E5rT!*G<ehV2&M^`1\%KrR7%2tGn0Xq;pU-pr;RX'u><<$3;s45@NrEH`F
%5r5KSF=Gl:g-Qdld3A't_KFu]`+ATpD=8dN)I)G"]X'$W-h_niF$3`ea6,j;mp/tb$0?a?esY@XIV1;En9lsWE%+?J?i[iIEj@8V
%ohJ1)W`Z&:k!7>+(M@`c"k`qA.Cc<<6ZI"&o&]fd^?uFiHAUf*ae+WB*N)CcX/[50/]fu1%u&9a!G8_%RZcGc1fEuH7^gT%,%7pS
%m@R'@C11!:f(X)AF(pKD+tGUA9347I:t7-nVh;mofM)Q5BA+lUQb0Iq<52qX-fK0@rU"5=^Ku,]0N0Ik.nVGaF8suIjqa*qGk!7W
%_bQ8cU,fJc=VUSIqt9!u4;'*)d]O@sEV\6uXrS4ORS@?_'KJ+7LYG`79\.,\+e3]4EAB(uQVc_[O@)*Q;M9pB#bAc)J"\=4Y*#)K
%II@&?^[GfSah2<T^p+uTO8+DE#3s>8iR%:.ho\\$OLkfl;RaXMXB[TV>Q)dS\Er%\+2-ND2^Dtt1jh)ZF<5JP8^i!!pWg3D:drh!
%bX\q[.>9g,mcIWl?GN]=NE0UTr0E+HlQeaLIb^8oq0%2W\W\S%5^qnur=Xue+Vo%BOYA5>Q"a6M5(&e%AtK+0me`Z*1=@Dn^MnIZ
%Oji*&>Q3a%98UjraQBLY+p-Rl%q/IW'&FV$d2b$PLiX5n<&)PKhdk`cI_!muKXaP*funN^/S#*c/UBmRHZ#-%a_Yr?60OkdXhufE
%4`IrKG@>k-K_$O;'E$/D>1to:.H4<12'X4[;\Yh.;^GZ-gM!`9.5<U]`,-E?Q8Qg<AEDQmrd'uK=4EMhWnV)ua_tAl<W1+cF]U'#
%.6Droa'"SoG20:%q69/k&:D$6U`cV\hC`6=2dmPn5/ZD5j0CUhHdesJ8mT9KBnq$3%*oH,q$_E4CSoOhJ'oQ]7t#JqpigUiV[lDR
%QOQ`f\57t4>^(3T[cmZ+^2=IUXaOpn1`3-Opl/1oro'/AK_5)f'ipkI6<T8Y]d3oAD"$VQ7ok,DiWYbhhL@EN#'c$?0E!$"?X9!g
%3-B:r=3n[k'n5/L])hE/30t;@qmT@fr3dj#>$#AaBh?@d_g!**!VqV8pF;!3[>"QmiTVj!8gl9/DBtFrnGX)&O;qH"0G>cq7!48Q
%U*E[El-NM<;T).B4^,"/NJM=^AX:#g&jm2dJ)^<=!E!t"U?$+&@bnSSIQ1'I(^2.k15XSjqh*Z4Vb0<!eDIG(D1B^4,G["s\>DY_
%BpT1Uea/O=;C=\;0/nc5,J9G/gbST5i..,m8``I5URHi-rF`mYomfE"q1i>#5sb[TF03Dk*IkU!e^[`S^g5$2B)Oi+MP>do1<Mt0
%Md<Sj(EQ<Sl[*+\k!\Jqm7l2j]3dEP=8BuiC5T)!aPE7Nl^hG-M&LY*c$2`<7kE_4/g@"H>.'(PFW2N!B_Dg4Ha=fQlCu[o=mQ^\
%\2A:BGf8ATm?V&O"WgP'c=g/DB6\J(%,\nL'NcN=a>*AoXFg+r#NSi-XP+8G`0k?eP-c0bPls"pC`0t(^S6im'j\cbn4q99*SanC
%^N:sGjmY9=X-Ite-PFH:l?HTTVj@)nON\sG:)J0=:>>mk_f!RSpRCa:`?Aq-=t*&`M(/%tUuAIjO>?!#EeP^cln]UUEU)d'mEjqi
%3@Kfr-#7FB?g)2qIXbSe^TO-($,@hP*!@q7*)+uFC(P\f8#^h0)NdMT)o.)[Sq\#CTr]]78t[7X!I6>7drX@F(G3eIaZCds=]fbr
%XE^mCYqg8D7Y;?s$g@aDYh':W=)KOe"u3,:.kpLh\$Q/*7PN*ZK+Fps\b8ruS9**B&I""o=$O,6'**^$#GAq2"di>5:8BF?[(EBY
%VN0jRnO#@-0ZMToH,MbdVnTk.msb])9hfH32?!meNP%L/%mb!";hS*RWN1Z<F:hJ\#Zr>\Q)d9X(.Y#."'gT`=Ol.ih%_A_b%U&e
%3hT/Ym;VpLAAPP!Ot]@<8<]<`-5usKmt&d>P-=_uk42)tQ-b>:OU4WX!#,!!C5o"oeMd9H^(7\=)?kt51SbHCG@7t'T*XbC8&]W0
%dk)6]$U(E8Z:Gb9*4MSt-u=]#!oK8Q&.ZlC;)%)cB-pU6WT1mVq"iV!&S%e0/Z'f-+rSEGG!sUCcfT#q&OY$H@9R6lAdLGp%m/e:
%?[65_ap*jaEDXE;3nF4$fF"T^&_#l:pn1lGaD>W".sOH$H(sEP_@+mBT#n%NW>Y16G@ageN;`Yt)NPX`XNnOAF1E`%^da7E$+2:f
%$UgsBd!ms_q"ljpq[$ua]/ffZhiHIj/c@d"=Qpq-S?^NBS.Oe3iuRs9GXisSDTE4,oBGZ]gnD9jWRmn=p!Q\80)VoXU&)_II90N>
%V(j)uf^9hb\jm9<Tn;8!]sY"fqQoImApD4sEY/CtKRNjs%p/]-Y9o8B0Gf(l1/=LADudil6GH)%eu8)1]:_qF<Zgr0KYX[tYU__9
%6s*`oOORgZ8eS,e=bi[j&p:\EWa=O5W[W>bGo2;]W<U@Eap_<=gT?oKn8p%-dMt'"$f(]aYfFMD@-`bl=EHZN3^7>>Yt=29rQ]nb
%Ra%:QS`L:E77f40&Nsg1S<8@X;;*J#Es>H@rLSh6q49!6O_<Yl`S-Jk""6KBAO_0Z`!Iue_%QhDgtp),b:jlMBUtYhU@fDQ<roo*
%m>$OM(2%EiTXUA+Fb6*j\X[CiQ(j_tR]S/W<]!_%T#O+Gn=?lTE#A%Qea"qoH6lC9<fQPn-QgCJ/1sW/3O*N72qbN&f-/\S;.UBq
%>g.=>d3He_kAi@;AN\1d4ik.qdTd*p"/@**PT,#BVkOQ3BVotC9kmLa)b`Co6^)>]PC'aufS&jD6?j\/HJ_GqhaImp[BmC77WE]X
%O%]"</TE6;R6GZI^H1)'lZk$)L9]q/3`#n;W]fiuo\m3&;,K?<1mpq!g7`l[fpS;9!Is;=d^%9_lUr#V-@EgJmRTXCG*%1bh:U\O
%"0R-gA/YX5-oFJL<\4\,<1@.XWG-0sB:2AMq-X#jZoT""+-FXtSJ9u_-?#'1Ajl`g;.::`[^SCdHH&kcJkH\AGlT5sis6[\YU/WU
%%2^-0XeLbRp=[1f?=m;j[5LCs/c961Yeps+Um2@[W[NF@!(4jB$VDaW-d@@9j,Q]\O.CSL:q9K=dC;T-V$AYSYd1#m^9N:$e>]6[
%>2Y>hD-G5S\d4.R%+/b!)T!,,T/iYLdde#A4ie#1e%96#G>V;'d5D>i'&ID\;u,3P!@\mJaH`5&in(0uC@V1>?qdHPbd3Mkh=8]u
%[\.q_+l7t7P,;[P(._:GK_aGLd-d^$U=kbA"qA9rgJC<B/o)*C&l,Xq;9P8"5uQo>,OD528Ym7.8oa%$8?%q@6_R34%6p'orb,Pp
%0`uOPM=m+AY0Bn9Pa_3:O5crV+5tTAD6Z++p_#*VS#/!(!p>s5;%=LnllDMp)JYe;C-90(&fUrHd5ng;UAAb&neRF-Or?`d=>&&Z
%D9&[(L*U5$]a<-Uh=lC%jR!MX@FqWAaR<p&G?h6_5$QUW]tc9@Y44h=,p%2tNp@L@0O=3-l"9eAWu*^L@a_G@`JI8V`Bf'08rKF-
%C%_c*^c*QKG;ZZAg'4$c#TPWC!amFVjuX:+?%5qsdF:en'e+<u2F=ak1EK@oH!Z"#8/@k_e$!M9^=R@(;+6Wh@`p,bgahgF)<\EQ
%In@8MlLc7i5&t["V;2.(pO64*h80A>+J9>)3GJQ(JFEg([u`QRp+LZ+c#%3ck835SNZ<,[j>XFoM.m0dUl>LP!#5W'rat86R'7*n
%,h9W*\JnpQ!7Z<3#N3-9$_J9$lQ17A'u1rN+AW^bf=fiIYo\R<Edqj;$]UG)P1=&tLuB2niklRC)i#'NW-0IE$0q<Sl38.W7#E#3
%V?&eQnj.Y@;?f7j*olq?F[\.dm,(*5Tld'WTS[^M\k[)\aas(L2+Tk881'`R9eN4,AslE,gpVj&S2&2Z7LV;5SjX`,&83R^b>%Cb
%`[?3-\Mrd8jNctVN?UsTpiI%L%'Zrmo'h(0rKWrC?^9\ZW"k:u@\SkQ@A8Jjr@pmle!jV-r3p'A+@T-VKuOpM%gfg$$%'!&.c_fb
%j^g7[n[nj<f]3Gto3'HnX5a'DU3$3c*c4TF(4r^-JfO<kl4.V:75;c;f'm_&cG?e5X1L9o[Dh[IUmg%oZk+p:4m+f/OdWThaK[c.
%l&Do+\\@-;aJ);feuo4.;NK1Jf,tTF_uN1PWS5TgW^SQ]3/pj1<#ZO:!0#W%c"urqp16#Z8Q%5tA@_8uYo1McJuC`hShq;1Y!p5%
%p5WTooWZl8cLN<uH'_37lJBT-(W3"6lC]IE-8\#Q9l,a/\"XbIiKdG4YC(K"QAQIT\N_F4(8BdePK`A43>Dg\R_uh-1XoJ-9N%T2
%n^tbG:_(*/:a6(QG)8[Wn8JMCCr_j%]h-DY2X*RIfbT$WeIABWMFP[,Ij[,%nW!-??B\hoU#duT/YmPDW-nmn;Ct.$Y$tPGXBeI-
%m1cS.Dr`/LET%ORMdf]aJ@a&Go:E9m/e'6n6JXRp59VX:Y>3ZMS?-e0]**@kff<&<dE%+h$T3(bWHFXu"lg`TJgTj+iG:5$$%RY*
%4Sk#i#H"NZlWaLC:ArSd2U'di_>s"V-p!5aO$O<YGNW**7uk9^1$(F&^SWONre_EN[H53SR8&AE]I+F;2+TK:i'YnCdqhgU''[qd
%f;$3?Up_:Z/&%L@?4s?)&D-OD*P3R(-B)+h74i\G'!V74[fRfYW]hnLeMP>YbJ5/J%VfQ]2sa*9;O/aA/F$Rb^Nd[AA:9B<rP$:o
%'9fj1.b<^&4:@c-CokDG@8eEZE(ONq]^f3`$O=W5SIX6pYPZCYckLF5S[Jm]nl\J^W3qEbR8+,t(&&'#J#*=QI7F]Qetc_tT:j!L
%.qjE!#7-L-bU_R[0GOCeBQ$[Di9`qi-gkVY<2scFLD83(^D5(TOp3F'=X#D]-@J2WH.]%93JNpQ[/C6H7SSsgqkNXGeWli%:E9WI
%7<Y9A%`q^T>K,a(3F;c/)!m!_=/D*`@/*m>P9h77QIO\;1GphK<>sbC\>Z8u1])>h1JPgIn1uOeq`W.R&XGQN)+TC]5%b!H(;PU_
%gtopso)]$',6JiJrCeuBGU\=!)Q2.n,h$j&E.(JM,1$ai]5eKCZ4RoVF)%m[=5s*qS4)m^rI=aiqZ"h:s3:E?c2.IbqZ$/qra0/f
%nWn[POSFq_+Qj+dDI*Dr?PU66h`lLg#SLide/"2/&Yn3S,L%G79t`@b9sYu6.p:Pp7=N';4&V(4T/Ab\W?\(V3bU5W.uD;W0;C;)
%VJ@UO&p&8-0Ljk&A*d-La\8rLf$Z,S_f>hgQ92)3Z4jo-eZoq!5u@E+2YGC<^48j]jI#V6o=)a.3Ag`?'g@lm<4`B=8E%nf;"u7n
%H$72[9g$9JPcaC[X?b[0R.lQhl$B.*2hspM847l!<#Ct$0T[>iO8T+K2l8dETi]t:\3*Yh/!Vg)iZcl12a`h=H&lfKqVLB)2:PW3
%pF\\CV7W3X[EGEH=,afa/rt)VdQG\/kHW93AGk+=YP#0Ff<rl`-]78IaQi>TD6E7P>5EYV(;_.%!I0#a$H4feYa'k:,KZ1GIA\em
%M%.0U`JtDaE3;'&=;R^6eba\p0#V>4ZqlC7d!"!/J^p?MWu"C1bbi7<'*m&5n&SgWim=2t\bG:3?J^+=CH-'fpSAJI$2(s,ef1q,
%7SFmWo(JE+q3[-MOR0RoMFX6mM=clRdQmV?c^-b[Jc^(a&JX<nqVme2Z4n!,9f5M1X9]0ojrW[K;c&RNL6YXFTKdrJep@/9WGG)Y
%I0913ot*MhrT#nq8O4!B>C"Z->cr2=P>CJ:Ei"Q/TnK"?;,<9,*S<XJEiO.006]V5;dOA,mq65-f1dgqFsJdE>D1V$;?4,Y&'HF[
%E$u0HN1>&;M0NYIO-)C*)W?]a(=uttX\4;7,BAD@;;Hd;:PpjEM?fqs#K%%?*Uf^dh@U\!NtM;h>,2aaUq;h&H"=m5M&`XF,d@f$
%pd^>pl^YfI0f;lgk(GV3;,[tN2\.T5rQpN>SDefr'6KS"VFUCpeX"\2(oKB%d\l5;_"&:Pgj2]XNDisa7tn'F;gV$>G6skumIu*h
%*u_8Prs?NZDiaQYhslde.&PKma"21=\?oP;/7.+J/T;#@.Gl.,b7o&@l(,j#$SqB10L-"QLE[/q,$6N7E"-W^`nm>k)m#A1DtC]#
%pT-%iqSp%qT`hZK5G/8"i)0q^h>/i'aYaL4%Xa-LPN&k;$9$.<.Bd70*5dKKDPN:g<=m;`@i%F7e2P>A3?@#>K7FXgd\.`cBj@0;
%:tan+h9DX87u:$"?&1WYq"goMs7NS0r)JX*n5]md]Q=U@V\NUmf:WOG^tH;Gl_^cYU!]ZoT%1;mnrKcR?bMVP>pA:1q#05onb^q&
%E]#Y/Tr%-]E!(c"ElB';ceB!0Fj$SqDTFSh>9dWKO[NEBVY7QMNWM49(grJI3S;)R^c6<61fAo?LC98TnF?a9Jn9)8d7H;0`Hqio
%Bu?'e'[c9!K+]\%-L%a9$qP84dBZ#m.VT">0S0GBRT(<%)E@r;;hb,X.j'L_MrW1%01ck;^68Yi??_Gt+0PT;,o2p-=sEuS@U&7O
%*&hhJ!_OPLiuE)::7o`QK;D:fqDO+`+WS]&orIO*a\bE-qGja_oh:XT`e["?Mi-kgEh.!Y,i1IU/"58lk2]Vcnck09"Y.UI;-\q#
%JJ]1/7ksKo9I)9JH@%JV-s=t/@5r3X68_fK&mM;KlZ'=Hr`=e'*Z\eB2Q$aepg8ci%9!q`q-kIg]@[jT<baV_!2Fk#Et;^3R_!SC
%>LO<2]e@i!XYo=qA-gZaDd)1Ll2UPCdf20HE/DSW#qB57`tH:`#c2NYhgY:&q]>a2nYlLr*8)dAO;,]eoP'dU<m6uq<0%(o^$L#"
%'D4gKMp1HX#e1@VYKP2WVmt2K=Y:nS)6nXJ$m)JT-#1NnD$s)C3YZd8q$Mc;Pa<YRXF-^LJr5u@fIY/SO)ps:+IE5(:rL<nQE]r!
%NN?\E>.6(4a^krHCp%gO@V=?.RNqX[MW"ioUF.:;f:!eIM=>1F7#l!gNC^oXA@Nj5<?C==j;d"Lc"eJX.hl2q&"%u(,2_Mu-fVI3
%lH[Sl>W(A#D$^QSk9g!cn5g&D8XhYQbUZ&XPdR<Xa[->>>O[o#,!/5qEO@58iHIeJXe]VdY$EH=lhbWo45+JV"Za[s0t%#'!L[Kj
%]F#V!SUI=QQ76kFbnN3oThu3lVZk'o_:M*E[C2kBL92s>8<[H85$QlK\9'EHeR7T+W4P37FSg'ccG4S2\hc801^Kmj)g2UMR0&87
%iN1TKEpG3nOX49nRuJGBBea"5k?\oPPchLVgj;qo$)02%ha-dP*-'oA5qf'Aj(J5rTQKmt-#s%Z6<$`*Pe$jp,N.%nbR3>eNHc%:
%Yf@!6&o0h9HdMn[fGMKb(to6rR-7,9(]uR!9SdakoMb:!?-frQi^qBG9g>clP<*gsd?QjtH^587AU^OPCCfqQ(5\2'AXU?][^'SD
%kg?^_3j/*(QSQ'V88dGj].3lg6="_&>&+PTDOPjNJlM0cK&+OA.!]B-U0[u`F(Sfci8_dC'=?34Zk.h]>=QNL>HHg&?Un&4lXiE/
%M(%Jk2\Tud>n&kr<2SIRkhrX/WjAd<PG/B_:&^bJk/8[mjgaN_\t5U#4ZhT&cg<?MW!g:/NjdIT,*SC*nG]b$Iq-GOCT(ZLdKU6\
%_`DTLX'OBC<bU<teZJn\s"nI,Yl9Md"ArWc-#D&&f,PoS1%aPb5qI(HrF0XER7;tsF.+-eXa?FMG`>GV8Si2ZmuldILAYs3hpp',
%#=#<W.)io;Je))Io:Gf_q*&WBc[5J9e%][QT5'GuWoeq#qQ.56<SRgJpf!1JVHQ24i6RkgK1c0:ptmVjP`N/+>VIC-a/QS=X_Tu(
%F?Y*.YAZ!r+5/YU!rmDNDg_5!4J[t<ijY!fT1c?sh@S"[pc[$u#T3*Fq*c+tc-7oVZMf_B&n9^3HX=4.XJOk)F-%so69roj@"M?)
%PQR/4O]]6Gn"@T:<TTh5IjnBsau)2i,MF;FS(;QSd7i9V<O>bUfg?[3RdN0<fBJ?R3N9V7J,:ArG/i^n3\tC2Fr=$5]I34$NbQJl
%g/3OX738:41n$P9$[Fn[i3Zr+JEY9`?sEJP9;6!d0F$m.5VSn7LT8rVBJ3B]m[b:a)QW[VH!.(\g:#h9`\oAImYiqrO0R4(CYaK-
%#5T%!)MpT?G.Q"b4)il4_kI75Uh<Q\mnYdYBb-_s2C%T$F+qTnj3'$<o.8Lrj-EW&$5.gCaFn(:[$<c<64:W31Xo[a_d7UljT:s:
%Cgj5u"%htSBVmf6"M$tuM]:udV,>\_rL1-qdg6OI;f';[EkFrsDCKpqVQ8'lGSE:+/&I>.#2_"iGHauY+8F)bUmQu43h9Pte@<93
%!)c[`*rA7og2E5lGg?DJ?ZZP3&XStmm7g:./2rD\,qWStJa5:_$BKG4"gH:YB^OO66b8Fr6k\0h/kT5c25?t7bs^sW]9S6Jij<#i
%9V+0p?Fh3td_k*M\E9f?\g,>X+JN!6/F!%%6H3<Wkrp[BTe&f>]%9c=/W*UjNT,F-#b?3t"dld-M\kj)8`/7Ijm^6f]]8k&-CSDL
%Q$R;0`3?9bd<HFllX'#-d?B&>a(-e,Cm?Y.5@RciCfNSe2lAZQ:dGtm[8r<LFs0q?^Tf9/:hHcgABqnf2!Z!*(HQ&J.F1P3k*/2^
%/hU]/nq\pk/H=[#<9i9Mh9r0(0Sl=S[g9!".BJg39sdon^!=ZLH6I:rkp71_1tNM>q^4:C*<pAaL$esk.Z(_Mf0pbQrTOO1h#M]+
%OOSB%s3Y`<fnK#jL/fKn$IkXUX0tut2B&NM65aKk(!TCT6u?$r(tQ'dT,^c=1K]gcV5^Pt-c69?m."[iaXOu,i8t`/6ipG7,E+=M
%^$QW_S<#T46&m4/&bF$4.dcpcomF0&!Jd!qmFcN$[&[E1`EE8g.'!YAGmgZ5e80DsFAd;P9ch_TCaFZtcZ>h"9/]WeM4Pfr7I_i9
%J:&>,#HglUr5PFTmeh@V4'9u=g=U?'F=(2HSi?B'`Mto[0/1n2_X9PHRHp0fiCSRM_eVZLfOes[g'$4n@U@-Aljka/eC/Dt0kC-e
%[INf),eSjMJ>3akRdXg&pW$&!]?A>7hF0rkSZbge*/GEYN(2NV897Mbh!(f7X*H23[oiSebtld.4d(i_`>'_=GV/Uh',U16G^H$5
%iqa:Poj2K`gM9Z0QG(h,:CL_&4b`E/,h3[.5,>7Ap^)#lCjgnKR$[&/`J@$d591$eg'k*YR=0B9L5Ae8M$u)[^u\",W8]D20[bDP
%c*KbO;s<Z7l!;WJ.\aL[OLl\LO`5/]78t.jg[9BD&PQp9r0JI6$;Y!oY(niAB&/`4*l(pH-U"gpS,<0"1jZ)InL3]LboGTRkY#D[
%NEB+'47mh=iHS/)V*9gk0coLadNU%?LTp17g:J<>NujqU7_2DsqQQ':fb3^Nc/+9tY%d>J*"U*gP1"cHn(qN<D:5Jg.&O(#?I.6e
%N:nk=W9a8^8<8$\gnbkXI!aKWVXV]&+_;gRB'AhXmG^^CG$=H..$oH+W,lkigdj":F)>elSD*"5h[WoCIaE`bSt\ZTM&D8uC)X?2
%Vch\0kb5me+N8D(e;U,Og,O$Jiaq.8Si5IW3/eiKHc*i8C9T<d9CU4MX"Oghq7^oLhT/JSLEaehpC0DS]%"?orpI2A=ui/alu)Y1
%$VnG&-6d12PP6=[f)qb]$%oMb^oG!;Id9KX2H7)X(@0r52k:?q\;#DGC<`IjCA`2Kl\e:fVL?EVRTK)b3%\ULT,M(=_M;jfQNk0b
%I;Zde-4,#HB#?.oQM!_3f"-^t/PMq]*s]sH6nFtL]`Jq_BfLBs=W_Q9/=-Qdo=N9>IU8/H"k''aYt`#ra'PRHf@S$]H_t",:DMN7
%FKNUG/@C/O4i<LB\*m[JI=CTMGW\Pk[)eh2'(8<.p0u,P+0U%X_6[gV0RQ[E@q[*,)ip('qqTp"2jlHa)iZYa)r\S8%+bS7.h)=6
%gd[Y<h36n*d-4iEKPBRH/iP>LfHnp%bM*fO6f`"`a+=#jgRsJ'N89qC$_>[g'/0]Gfg6V`Kro'04!etO@FB2\pT@$Ce\nL0Tt@B!
%=$=ELY&UdCZ"]HP&Xq&q2?k@bZ1Z15YsDDK[i/+u%=XVUg0HdR\nJWiQ@66^527r1Jd1iph1EJeEPZ0fbX2L\I$>Rg;AIBE%QsUe
%p/MDC?@'BAR@R`t5Tj2P]lr5U1fM!j<f=11D.`6*"(/NN6oZ78Xr]5%!GiRa%a=*#Nc9qcfCI[:<FLf-/lSp^9pJ[C'@M*<5+Sju
%?*PiTh!ZF:(;[r[,ZX=X6qTkKF9dY5LK[o?]sm]^KeTZabo4-=/[TK&(p$a0*(NEVQGb:EU#mm7\BKbbqA.22d]LPj=HMC-HY;b;
%??Y:!F@Gar;X#];Y3h<IY*TuNbn#9t`gR5nG9?4A=*4oPI%1]%ppfL/268M!S4)h>T:+1EF52I\cK6C0/TKKH<HXs!>'nKi@fns_
%cQ1rYmojXFNEm;V/UYr:%KE[)=?@?>0rmn=qQs`U"gpn<LJXSA^PGW*g\40e8=Q%]`V5q4P=M`CA?G8[g7gR9?5_tm^tcETBFJhm
%\AsRO7!'At!#)a2AGbnGs7)eT24\?rWANS@gKiWlj#$.J6Z*S!O3#FZ[g>+AaF;t#-Fh1WMVE!BL(\f\CFi?]VH82tPK2QD+4t$;
%:g6<%FD=Jbe7^NN?g62DN.MVkEfQ]j&WOnrjRTdOUeXR>>O/PtQHrj1=i/qE%Fa=*k0"Z0C46hl`G_DU.ae45c_C!gq0GT$.ct#A
%]6h@Bo)]l`o`GiGgKS*!Y61bVp5%ZHL0sEE>(;Sj"<cmLrb+(r'AC,jl(%1FqaPYcqsBf6e>(onq,t(sq+9jaV?2(/?Ml495<Xbr
%rle*M),J;pD6N\(L44B4o(pFU2f:cA*'@-pm7#C.ZGJ0SR!7X1ijMN27IfAW9@`CL@`aUj>)f-i\_l$GTF4Z"F]Y.ElmXnOSNIgG
%f73-Ki"lunZ(p;uXofQS]]R])kXQN2bO5dd?i&6&odV7Bop_E+9a"$bhPWPjLHGnlNPeoa/f'h0E.oGU4YeHqSm>ED-#>P3s*;/R
%'[)V`]R`-_o8DhB)#!Aq#JaUi4ZBLC8kG8],O$,@3-WB_]FO"6m+UJSr<gPJTe9Q/(^]#CCj/hnEC;CYTYmE)7,]!?bh9?%h<+'0
%/&->."(LY!-Zs+%m'O<n<17QF3m9d&`rk+BREJ*S>r<DSG#J5%O2MC=FR_']q*f!Rkk_::qp"G9Kg*"AB3jj+mA8Z-2_XhNh-MSS
%CrKJ_P=h6kNW"U@PM4-A[YPMK-^ChPA,@l+Q,7s[XK-^[GgXPDb5?9X45@:so"K9FebZPW_tGj2>=ZF)XZH2#agsR5S\;f4@%=rS
%L]$80hF':MogrmG'lLJT.bdMuIM8^3S!,<_[f5?ada-mg6/,'"Up'AaZJRsX0b5qF"(Nm/$Z7V_Qe6L?aBg?j]_](6/\d+aNEl&u
%[?lba[_),[Zpq3Ba#2.JT(71$;S2_Fb1#Sd@rIB>H`<+[[9.=5PKIZH><1A.mBcniGR\goLW4PNVKnfBkMF^,HhQm%Z@4pRp$SR&
%.o^^"ro%0sLAQ-IE)DbiD0tB<hBeM@H5G:"j_Kp'G=E10@pf3*:O/(WlT>X[n1qGGQ%+\4o+(2C(*`[Hma(V(O&,\q56ZZ#+_+<:
%NZf$>%3%58!DD;"0PM0YM'B6Z#VWiMJIgSRlkcTqJJm!?;-R*&1,9*t?.B8NoT\^kL,<dO*G2QtlfCI/<la'FlV_lgE`uXj!ISFk
%&&9VQd4MKp,k^aQR\T7=)p<L"*Se+<7MZD44>.D!AtS$6jA6c:F=i;phGAe)es)MiS-,A"gr*Ei,ZZhAJr/uEO>Jko@3p([?d9=Q
%[n,]U%A7td#SZBD/h(^,OcrVbnI!>S4WXVH;-O$`\g:Wsr@XL"eT;V-2+`t:E@a]CP6']>$IK$4(jIaC$$>og4<Di"=5HA5nS(*l
%MXm&-9<>LVYeq6qpF'aRm9<8E'M'j(]#.c/`m&@i2q4c',W]\5NLlq=YXX'e<_"jf,9!.I]1"BbiB"31;W!h9riL;sO0'SWhFV_r
%@rIffQrZS<@\P$6FjI\BA#K)D)Y.`PhmFVoM&7PqHL1KNJWC-]gUB,@W_/'KQ,7VorOq_mO"Yhn$4hd);pSS[1ftqW/oXJC`-uOX
%b]R1^>3BA=)b!`0UM:9(nHc;A?N?R+?67FmmTD]R..[088#XFsK0Rik)ICH`/Y#6GCK<:&(;7AlmiU&Z\=rVZ\^W*goHlN[1ZL&.
%'\)EUNjNr5Mq]HM^>YThgm276'C3<pBBM`LW9K40m'KE>2(\J%d'9K*e/1foG+;a=8=*R_2QaJh2,&NMPSD)mOUh]p/WW'L4I@=L
%/XkdUQQ]4\W]<73^PTC:;m#P4+HoQ]&1)=b@Thc+CJr+[S-'^#S[o`8!OtBHm.cT3=qRS'/kR@gpGXOo9$.g'1c66"(t4i;_"B#%
%r8fn^H.:6!6DpEl/Ce8u`q4TD-&).td,W.+*lh:VU+&@nnbSDl_JZ)PYk97V8[<fSKh7o2-lUXL_%N"I3(:PXg,[h:S/rSb&Di%3
%@,H@5H!G@,Jn5a^E@kOM6=iUZg3%u08TacN:K#(<&08A:.?56oo_*L!2s[VJ*+:SMf]A"9\@4.9EDW))j^T[VmGa9sKBF@u^0raW
%a!HeP<UKffhRU!sZ5cqj0$o+3M1u88nsr/F=9cYDHXHspR7k/S%=KOD-!t`n^$AlQZ?FdTD6Ust(jjcGj4#k81GU"%<h)?.gs/'T
%$J;C0Q$2bUDkb9b\k;?'F,uip%PXWgeSu2'<?8O=Gp*+Fb(Rh`4sY!(l\>,d\n#_lU.#8rV^;:.kh7D=fksS]Hc',L/bAd<A_hM<
%6;02"8;jngW,L4K=gO&`nnhNK`l'PK>n&3k1tjW?EV$7cj$%f<OVocgD1*l4\f0jMp!iR.oR3:Be1Trk60ql7[`\;gi)ilU*Z@B#
%8P.5!N_Nr3(:A+/Dpm%nH/[ef#$m]r&o5iC>*%F)ni743l:dnPeJPjo#_-Vs)&*k3/,\g^92f$CW6mV_L0?0o)h%sN(q7`!L6Ecf
%g$\VMps&9+'PbYZ$[ee7p?X`E^&obKCJU\HN^S0'PET&#EGd6`-:J]1'9\Z`YD@r0G>MY<p8^aIZ;J)[4-5?!'*1lkq^R29+fpib
%FCeE5j\abap<g.gpZL1!LP:#\Mm!#_2!D);"T7fB>?RZL6)?]<3`[@b;l$ci+[u/m"mql7ct/V)F9,Bj]#I(rX6k$Ypc)"Xm,QSB
%Xu3r\M2=IaS1[.l33Io9lt=Y1RhY"D/`&'J+"3qmX;"s<6lf-H$:<-6bs5BjQ3Aa,)`R5$:D5'CP5+Aar+:9gSVm+f[A$*3W^c=#
%0!^7JR.7L)3V@``P3('bC[eUTBGZ-HZNPri>O7JaFm6&Ah=fbe)?.3NY:B5?f"%ugLb^$W&HTDD:tceMTUim,ndGjs+PBh<^bL\8
%kR:)=UlJ&dO&W8*#Xl)ekou"+o9Q!Zgri<c3@`FqEVUURn$!8nkO;J)`]q+!_H/:J<mL3b/5N!Z$Z7`m6.!U+W:u67F]+k')N]ht
%kI;T=fObMnPX8//I?&4q?qL`k+*edu6X69=KbYFG,ri=SOl8SRNKj`1,K&fIET3?#)'3>`DRlKi:u$%"p;Z_S2j?Z\jIDg+1)4ci
%gjk6!>XXpgn3sqJ_Vu27Bt7'#e6flP7L1eRk_(`EbY%+M,3HBh9c[/jal9i"fG8hr2(h#@$"IZp`J)>R*/b?0a&nmYlVrp[J^Uae
%Of''2@c!agE$MkqPJY1Q_\Z0)!pm6Xn3`W`\q_q$cVaheh'ED\Q,t+3^dr+Sd:Hu$kq(RMG-,h]!N(j!0$/O4haHWg^Ic,aBak_K
%AhDmP/[Op3r/_,YqJoh%hp0DmV!.>l?0-^q+-.+2XE)&=\KJQ-&Y8o`K@Dj-)5Ou<m2mJi[9V<:<S)T2`iWarjDbr(X<9B=QhG\d
%*T(V*.ib?+,WOs)n-a/h:V&.<5YP2%L"$lUi\98R6m]Ud@.(U8g"EPIj=0gk[FKk.4u<[sk#nu5K^ouL<S^7n7ZS=E2\U,:ea2ud
%nHSg?rMhpjm=F91lBnk,59C+78*8P.U--Lu`mmh;nkcab_?U@?4OaZm5,8e52ppYQ?DUQG84F,LAV;ft(hYBY!h]s?i'f:!?bY3:
%JjM*<[A@,I_beC\Ptc]ufn`mrG/5D]__L7#ktmApo*#u"V1,S6*GM?o*tJSK=*d>8*tPe2km'h+a?3]oTp--<54^ImDP@fBI$_to
%6aS>+$pS@tS38f,SFQXr=Dl1,K6ZJd$r\4bbogk#/XWh5B6h"A.5M<KKQb4s):(<LQIPN[GZm0b-uX$>LH<bd`m&1dH'0ePBU_S1
%B6dfFF1Xhd@dQjViU:Oe7c;nsRHs5<l+k^_^cBl<=;,I9Eq\jkc^Fjg6AeLbIh"?+%K#=mXO<<r7*4;]$2,s-gu"+;"_3;TOReUG
%UB#17$.UhN7$V(^R&r0-_U,*4U,sSKPd:"fe0o2iP'W1bgdJ&kJ!538Wjo9?_^8Q-EuEN+JM1'IHp9;g2nkger`"g7';QT`^']6h
%M2X$6WXT&Z]I\FS9BeI"_K:^hERF8/P;'(eb`3Mo`E-Pm;ED6V!O8,g$/N7/MUfZ#ooFRfW'"CIDB`Jg-K1oTT0l2#o)MlTpB]6<
%U):/`p\&]:$L:'TksM3'hO2K6hW%7Cb4o[M2)R,J9"^[/5OTf0=e,AN<gAXfne0SL\?6d(AKO8SVp7>t^3%t9jH7^9bUL'3]'N[Y
%VS7b8Wf^QZWXq@=aB$8t;,!@=IU4I\Z?el9'])?n*>jWg.P)*GAZc_=>F%G6Bk,*SAQNXON(=:N[Xa9h2emW/q%1CD,0;iY8I;ZR
%g%>)3(IIQAXsddS\)[L"'m^W=\qjtb$]X<p"JLdbPbIde4]ar@7:^(uQVV#J&M-g2L'df4,gL<5`PEP'"+`&lENXpP(XXOBF-1X8
%I@=#SKig,HXhO:0n;GaMi@EDX*-_ZGGea$L=(ttm1p=nM'oM[E$XSf,h]=E99b]5G9kK_,dE"8ZKm4'TeS'q`B3n]"33YC:oe;8&
%Z^@&rFt3%E[e<Kh*#j7X'N3pt^H"mR4)0@9[B.6*[AD;NI6;6Md2D6'?I,Oej!C=],1Q8SGa5;^([+^;Y9KQ^*'U)KU+qud<Bu37
%N#q$t@O84;<Y)h%d.V`<U5R?EOY38-Q@;tJ]CL6T_tEXa\('e"J9[u)Vn/0,")Xr[WYN;YZ*4-`$Yk&M]`c(8_UluqeNf(=75Hr4
%Q**tNNGHC>^.LU@Sb;+Po;2$;fT;eJOZ]:52kc=08K>5P%29@'WHZ:\$sl1IUrTVP[[VeDl9V$qBRL#1IKJj,p3X@V5:kU=,9a?.
%--1lGEK<OKcT7uc@GXDMLO#*;_aJU4X2\nlhCHp7,c(M4eX+c.Dl`cSOt'nOSY.NM5),oq<>W/-9F^9S@AX;8KrERf[LiuV;3+WN
%L]-bM35baj`fe#g*Kt41UNgPtTm5@Wk#9o0dK$d<*$NEA.Sr+a/m@4i]2[_pIIau=q[,,-+jsD.g'U>`36MagKr>4O6Gt)og:$0p
%"<!nM]>!.RDnbj2c2Cd>l5@IRS=l(/7j2ABVd.357V.k=&S1EYpJ44TXs/G@;+bg8h?<sur;OlH:eW)]'cH%:C9Tak!k#Z7FZ29C
%3=?Q$N3hG=qN+AbR6&Z#.0+&KNg-K;;F%sW&.Dem)PF,59U]jEFBff)Yj,k#RXM\F6Mr1&,pGujRDCMe**PaPTQ]F'-5scAqPI:T
%W!EaW+BYaDgcR;$S/"%taY8eWfF!q,kjECP"Y`?@E"HjRV#_=A8iEWRcJBARH)Yg6iGc4<Z6=Q)=a*U\aJXoAOjt>D-<uYtqi@T#
%P_[Et;"*#E+O[*RRUjn;&5@VNcVdW5?qf$N/qce7[Q`DuMYUq:gt5njAMSM"plVEV)]Jr07?NWYaL^/t#p+-\$#9)5j-!nR3CT+G
%he>Qnom#IsD12Ngfj^21e32*G"l6s.Trs31Xu]6T%mJ4Kc`K+B)``_4Pi-+'6bnjuW_0:2KQEoaD1s'3A\$ZtZFfu-@GQM<&J@d=
%N%l*T(FsJK.!U;Le[T`b*,^#Oj6q]aeaI7jD=VXVob]otVQr]J`;YbR8a%FK'Ae'02ht!HR<2`Y"#1oh<n9[ke3-(&^+WW'q*ikD
%+<-Qh?l#$Bb,X@J;f.Do+X"\4T&REZj!f!s&ni69XPL?FXueaFLYGuTleVO>=;`^IFC7nMG/PSsK==jZePJ6jGK*RgY\L+@V`%!Y
%DUKiC;p@23aT_em)`]F\jh_r?]uSfk)En,E9TG!3^g`r@G][r>;,ncaB9pkZmDCL#.NR",/;=cEhErA/ZaNeRPK?*^0k1M">6TRs
%EYA"(Ba8qQk/qstUI'/fNL8K<5tPHo(L3,DH7H`@AZK;9S=MMh`Af7K2,l/<8&aYq'mrom/:($ep4mh5h/1*f1?i9>h,+/*TNd05
%W-ugGe*aq+(*mJGJq%E*1$he:\#n(5=9cPX*ET5G<`qlP3)u2*C@"$jdSrb"Qg>Q8"KL'XS(#Pup$P!7hmF3ARS^<oB(SpS,M<\e
%#f>QbT1k%Oa[CWON5X)oOKiDPqGZbY:3%T$:[Bgr#YXZT8YEFXQ.K\"-in.f.S!nS'&dbHClaNEK?3V*[roejaEm(KX/q9QP[`<D
%kEk/+.l'i-62S'"hGbogE*l.4i<(<d5=7&6\iX;R:72E^**m-j*9p_,Q35/i7DO5&BjOch5&"hJ\0KGaa[&(HH69nl@H&/n#k1bO
%_$ctWrI,)HS`S<<!.Ym8GTdWI%=eWT;I3jBpD8Ism/TO(KBr)a8'$WhV[Io-SU+<9R&hW">B.DB'bRGN&?lXg>"9nl#=4O#&+olu
%pJ;3J)2$1tJ;muY)]]]n0TAde2*D)U/VHrq<[$l,U*\O#]W%-l9@p]u\>Wbh0Pea-$q:7tBj*B)mMR7.AG]?ipP4?oBFM5?UaQ3n
%1_J(>V:nku?U`jA<n\8%oanJA*3WQmW6oC<Wq0N**tGOjZ,Pq9oNktKkUI,ZR4bG:SX!cdf$%5>ab!:@,c1IOT-XX[3$\c=og![o
%[&b_cs3:bHco.FC"+m3B4>dZRFK"FDVLo#!>?$+[!>%r.9/m5u]P&[lP'[a(('$O!2nRWV"'XJM&=oW<ZD^Y3h_*BN1$`V3`@4aE
%_l$R)fnehG'])6S&7=V;8JdMXONpHJf;VXn3JO9,PX76:?J3iiPGpq#PCXR=e-ddrSIA7lc]&?k4j@BCbnL(/oC_<3`-9.K.dj?\
%Lo^r7dITj2_R]_N*67tDJCfQA_u6aEMOV]&:)fCd5P(18*3(dU79>%*GnL8V"Fq#"IiY8ZRFK:fi&.ka+)B?J"$r!V>\1Ek5r-Fe
%YiP<kkO1#9m/:o=qVc<=c[Nq8`YY1Wd^H<\HhdD](j5W+f3)6%@\%,Kk:eq27+8:qcF;Cn!TmC!?m0TpNpNm@BJq^S-9@+s,(*rM
%1uGP1BP#V[bk-^kTc)C<<"5RbRuGi0$bZ]U5#<dQ[RCc`kuUlU5^+1D<qMF@Z5Kt-U;4(%2'U>r6->-s"J1,.Flp`>G"nIXk3Bqs
%ajf;Ri6X3n5G;nX#993nOUH7O>aS3/G'pm&eF3_J:fa.^/dI>8W2:G3dVPGCgC0hgjl<TL0?lHsG@m2u*B(Eb*0;VMDJLN<!9"FE
%@\8t^GS;@3@Opa>l:75?+()!nX!Z_DHD<*Q5R&_e!Y5;sR:AaK5kbKf(a"9[)Dq4cPC^S::"kWqH2TE3&Bm,7p[FkJjCL3q<bEG%
%gMe<rED-UTj`.>9$LPZi];p)Djmhhi0Fapok9[q+MQnctVG3-(&<k`XY#<:)Tjhh-.?`VkY`Cd-n9&TZ2j_7kOm&EGaE2Vh7]&(F
%R.L2984L)<I$NVD)mo)F-X^"*AZ/1(q;eiplpkIF^R035_-d1#15\P^YLF_0Z.[a:6Or%0FgnJ[I8GV3V5D'&Nl[04K>?arQg^kH
%c#/c%8C*E.3s='>F^=-Yo?T(;g4XTJG>t>-)@]O<:ZVY2Ba1C5m2Q'K9N-,HrTYM<UDD[Z69a*1ct_aE2JU-lm#XtQ)5;$BB&4Sh
%]<AE)qmqUAs,>NX(cR%hiB9kE"X1SlGpE2Gp-+ee`YL&eUT/18N#SWkTlJ,UK?PD<SHt?d1Q>??<]`ESW[BG$ED.CKShX>RkR@qE
%\IYN=`J9S/)Q!2\:8%`@SY/5FR45mN"/Y-jgK^&09A>?6<csROg:bVqWd;HTPf)4G>Y&nH=(ll\4p3'Q/)A$K"St/-j$8B-UWHWX
%;AhOXcl9S*'ii9P<lZVIJe_FY&&E"%GJJ#-rB,]f#B"YsL,*)bUJC0dZHP,kOc1G,/ungl`"GcF$\@!&eZaFf9pD-:ZQPH0PUVPq
%`X:CId#NI'5^q+,k]`Rt.$-^F8IaX7VWNM1@J$<)C8(f>>@Ge:ROYUtd7Ci+1BVS\04U<5LmjBU`Ea5YqAOY_Er7TJ8,b$kLE\QL
%j.K]67+YL/+:_tm+,[N_A/4Tak/-(cl_*Hd7qXDZ-26-sHJHZ,m.!%i$PB<hf4Cs+P;?*97ojnXQas@.n2q6f5/92c7lpfG86SXg
%(BT/>4KL;C(^+SG]2kTN.]V3*bER9+,?gbJr*(3&Q'$^nr55fQa-FoqkbY#h8(R(?i,URd`OhiFZUIEg(KYrL!CtI_alq0?("%!Q
%%rVL"\De(\EJ"jsLg>a3_GKKS.O8T;Lf="W^t"Dlq^NkBll0ajk(ejR4GqAq`s`6U`!WOpJJS]qK2RD"*Mu$-_^HZ266[`;G:N`,
%$_c*a5PEH\aa)GR-2F$sJ;&DP`U:@TPVbk5a1?<\r`JYq*B,E+UaO<i\RU7AGX%sCWr1F',C$uVY<[lt24JbU2bL<o_g,bf@a*Ro
%l#Lo#%,`';Q!?;4nh+;I/pfrDWc9)b%Ppq$.0<CT709<Te`kJh\\s4j9FP\D7R,+Rnf=EGXno`]:l/E/^puk6B'G!p7A[[s^+JJ*
%l:&]T"t?Ulo6clT,Q!PtOb.1k]t1f@9om972T#"lVbiFe)_e<-EKe#@mn72Tnds2RnInbj]bep5;3,[6b1"CFRW7^H>k1AK^i;ep
%^EX_t8Nr^GR9_E&:kgHUPo<An19P+(a]?K$TSO!1Q,'o(3HRep8Lr.lN+8?S,8>!1ZYPgk%(!D'fGjqnViE-8jihD0ge$`WOFIjI
%+\g*\P09T"-G>[rq/VR)F)nJgR>`D%b`/FhMI?NT#D2'jFh53]9)d*MVXbJ0etV94/GDR.T:.h/kNm_a=XGgSRWXou42_$7iD-<6
%"VbYFWMp9a>L3[SM/DTQKr'SWq5dk<2-gYHSCC#rg!/!CJTf\`&VSR<G%l6A"KgH<&LR*$qGhF;kJOg5()=?6b^ETn4fA@t]BiAc
%fdF=Q$P/DX,MgH!e:`-3BokEa9ul(t/@kt$F.<?Pods\q65')469(Krb9ck7kqHI=p;9g8IeReF%5)kP*qX0sSChj=IU_E%*_?K(
%Rq7+al,Yb-W&Oc@,rO?I<G#XlBcSA>.V*d+lII6\EAPh"Q528=dk1J$Gj0(h'?0!I_2`;$FJg>oXYFY#X"h9M(CmDa.X"0<Rcj9U
%S`#G`LC\*#+E3hH&0;1GWM&>BM#L85KC<e\NAt'U0'X95gJp$l<V_#Wd,#>,f]>AXGTo2V-c]d!dJ;qmA:W-'dBfE@c6R`LCT0?*
%nYS?/-RiH9G@Yg,ZM;<J,`2XqMpc*DHEhYJ>a>hEHY_>s_Xk`CnU,/g:Dfdr.Tbg07k!r2i-mru--(;=Gn1&6l\B3h6WAlsY@-iP
%S\2L1]]MBi(\D=!.#IlfGA1:I;Ih'(7>7fJ/G@5m-kUhEg0;R"NftK!Yn*nrR%Duq$X)kO*847Je,$i#V<uAUHQUtKFs3U61j?*6
%?Ap_+-Tu_\Z=o@KU-1[d)k61/!am_`Oj/]GjTol<LpWl\;s0M]!ED;8iF(u*T4H\u,)CYNqZgQJiVE)iE232ZVOWGP%7A4D`9ZjL
%:)<&q8l1>5^cO$rJa9R-Zu\YuAXs7%'mjUm0_j<P\bPD\<#L_-A=hh.bJ_n'Os:tT&:nX,i^\dsb'\EuEmQ;VTBYH0+5_7Q?b2`?
%GaI=fDtbmAIF^bDoDKg*<=+!H4O_E1X&%I6!d=0,Z+kcpT@A!_6<O^7bXjGl>8lI:inH6%jaXkd26=kao9oNO(qh186,"'V!^dYK
%R,<+>2Y*YmG4RnH(,o$\0aAGC\UN1kQcl%Kh=9q\"7'rJ#0B-FG_bbfA)<pJZu&Gme&j&nBE(K/?L7OnmFJ/;2Og.e+#BaF(HS(q
%S-TJh&I,iHqu:M1O[e[l_n'+']uopPcF!W;;ru>?-dV"4r(-@2-Eo+?U=b!SHA%:a/I8KC#M@T3[84V(BUZ9")jr7&I/R_q8arbd
%?D@u0Pc;+sp&tFsodLEac-@`97<q/Ep7,00e/1J^HrT9*NB$,q9*C+R*;:r9pa!ra/0_^;9<36d+00ZRUgd>RT*5YgO]CdX_'8?8
%Xna6kRui?).hL+8.q9sb=<]HoUZ!dQ&CEBZJ<Wi5_%QR_Ddk<U<mX8^/,<sOk&Lpb1<j($1:>K#Ua;HT1Blmd5gE'go+?!m7)U'R
%o$9FW]-E1lM7JEN])0*j"g0Eg.Q0ApYVl^C'Was_EAc%aJtsjn2apXumlE+-4UjB%5qDDYUgt#(k['D:E(EeTRtjT*Utqd(8Auo.
%8Te%4N`=frl2+g#'8HUJn.V<%eOiZ6BNa;kSXEGb]G9M3fG@uS7#R*p;[g=c9%B1t_KKW?drhNrb(lUrFdgtd:E!C`EmI,N+/D,^
%g%1tG>l=%M)Tm)a-JEUO9d#quS+`LeJWRrd=#UH-,%*eM?(>"j0"2.<FmtKZZ=L%S(L@7h?`u(qXV6\d4Zo45QC&H\dlE)uLm1]]
%6i&gOX2>&Wg9#O<CZ@PE7K5AkCBBB_LcQI=QG^MjP]te&Z*WV+q;0N2TQ>XC?*IE%N"'`u>%]X;:B:!S$QGck,N5(4b8I?N4r8.!
%N2YBUMcW.q^.UPIffeV\"-KD>hJ+ZW><MeX!0?e%7D3?q66@_<cT`-Bg^Qc90<iKf%D`k)8usYNi=u5i:PCb#8l(?1RDM+DW+_a0
%)lZHn5O4scc:bRogP]JX@dkl@LO>EO$T4"([*b`?05t"7NPE]`pRcAQQDBoQ/,Z9lleRPH/b&])V-a]^C-1cb4a=-m3H;'L-P%Eq
%=OS\V_f^gGlVL_&^^c7H^4&GeIsn7$G)#i#V#F6?0Su83>VB1^3X/!FRE%JZUo8M2(SgD.=?TIbObH7_(n*SW'f\-rmom5b_ofH@
%+-e-)gi[aVk"jlZ;eHH0TuZ%t7-qas^ATNhn^dI4\Ed3^AVV[*dJ8kGaQ\s:NY?mekcQV8.-$kk%Ra`S=LQrD5K>`@o#&K+(1>j*
%T@;<0+9VOHU?D0;DP)o2p2U>PESRYsY'!QJKV:WdhbLcVlg#K[`q1q1kgl\YFpbm]]s@4iR!Zu>n&ghePmm8FM4f.F8@GF9-KQJJ
%PQPAfm_8D9h7&*,(h+@\K"hR<:lM.L!YDjBLV.LYJLZ[i@0reA)N$pOdiST'C>]^#$"B"A&ST#=!kW?%2:QC)_oMk,8F*?EmmV+8
%fs_M,EGr*6m3h[;++_BbYXAKnTf'Et&)u%QU>l:PB]B9k+d-pJ6sMWmPO0TcZEiAL-,lPb0E;<0'`.SBT<bR\Q3DaUm%Xs.Ook!u
%6BYtqJVeAHOao7@5n<QtrYDm'K"l<YP!D'R#"WBU&r<IB;*7jDs$HRh5R]OG"Mt8+Kfgufl4RcD$:SL^rX5f@(L*]>8$3pH4=TI/
%-Q*4:_A;*s;Lk8OFM!*o\p3!:$\C;Q<b`I8e`""QSuS\=SuSqO(cTZP<N1MAV%8t4olc$`"\<LQ9adX%e-$J$mK$fl$iAXXj`Q-c
%)C$I\Cb8-#@_RG]S_doFYhGh_'Qq/'lo##*GO'Hh0$^K2I,p@lnVrTU]V*Wn],IXT#Mddb/)EbRL$-;W5@jG=2+A#^CV63?@r]0f
%PFNE>fVfh@b3_it#!g$a=$>1j+575*Xn$"rUf3<:asB=#$VHsY_59)1bZWo0CTOUkHrk1a1q9Hd;Lr[NO>bY8luf*35j2@)If?PE
%CEgnU:S];N=,a-?#Wa'b7j4eh:pgAJ`3(saMI!j1VukcL=_E7h'UggEi.j?mR(PL(Zf/ka:@9"!`M3jm;m;ghQV'[,;i58fbVAuu
%\8Oe17CB0%s+jW?e!hcucrU#$bSF`2PO]#J%E@P7MfK=)N1>O.U/DX^7;ej&<'`"?8,e*.&IFJh,K$c:/Q/E&mTC)7)_4oDPp5P"
%3L*:;8mbPC_ofL!VF6i?g`eQ77a9*6Cp=C,qteJ+?pe8K4I8/ABa@S@`Y.XXU+2qf;Il#L%XQ5W8b#H(Zgq8P/2roK98[0YRH'_^
%lp][s**>pt")BFE[UB.s;0KU8;JCKlV:'15ht(]OUthZ%PdZKq1U2@mgRFOTo3"BK4iK]^!%L>Q$,WbPiB<+_Pg_?-;Iga48qLWb
%!N8n:2G.0H*_FP<S_/m#al+8BAE_Yj)_0C4lmPM4l-\Z&Wp)+"AsHtXUflOC7u:>ce]8<RaO[dWX"Gi,V:%7e(s_q8-ekMiD`?:A
%-ZpIj8+r=l6@QJia=eVr'A'c`3kK=@71+G%*saA*i">')G3<r\B]g1co"K,Ts1Q"gTDu]f^HMdMolp)$If9.nrqPoZ00d+_*J.Ys
%_frlmnrH"_pTIr=r:%m:r9fX'rV5L'GJF1V+9(ogT>(6XnY]0tqr,^?s7D'g^3oe;^\m%TODrWn_QSF]lbEJS?iK%L!Jhsjj8~>
%AI9_PrivateDataEnd
